#!/usr/bin/env python
# -*- coding: utf-8 -*-

import getopt
import os
import re
import subprocess
import sys

from svglib.svggen import SVGGen

hide_guides = True
run_checks = False

decks = [
	'deck1',
]
suits = [
	'clubs',
	'diamonds',
	'hearts',
	'spades'
]
ranks = ['ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king']
extra_cards = [
	'joker-red',
	'joker-black'
]

test_card_data = [
	'hearts-4',
	[0, 1, 4, 0],
	# Water Shallow
	'm 270,-22.5 c 0,22.5 0,191.25 0,191.25 -11.25,0 -22.5,0 -33.75,0 -19.32536,0 -26.24071,13.76228 -55.38317,1.39593 -15.88441,-6.74041 -34.03213,6.40426 -41.80663,-2.45482 -11.66837,-13.29616 5.07875,-17.19859 -1.79258,-37.0989 -6.28594,-18.20495 24.54688,-12.79193 38.50368,-21.06488 16.99591,-10.074394 20.21926,-22.000737 24.55268,-37.51536 4.42388,-15.838489 -10.37106,-32.271417 -24.47256,-34.259686 -30.85012,-4.349775 -56.38975,5.013936 -70.39884,23.07214 -11.303553,14.570678 27.85045,40.932536 4.57491,42.264566 -21.754982,1.24501 -13.84201,20.90606 -35.314652,25.29779 -14.727354,3.01214 -4.011844,33.51569 -10.467654,41.91202 -11.108411,14.44743 -31.164664,21.79868 -24.350209,43.73778 4.990306,16.06626 2.945177,43.69703 25.867421,44.65424 23.881393,0.99727 19.205556,24.55108 39.168064,34.86984 C 112.48151,297.46385 123.75,315 123.75,326.25 c 0,11.25 0,22.5 0,33.75 -22.5,0 -123.75,0 -146.25,0 0,-22.5 0,-360 0,-382.5 22.5,0 270,0 292.5,0 z',
	# Water Deep
	'm 236.25,101.25 c -13.49103,0.67678 -19.16931,-19.375298 -16.875,-31.125 4.4104,-22.58665 -9.80752,-36.094675 -24.7106,-40.622686 -25.61894,-7.783816 -47.29092,-7.036965 -73.69419,-2.520794 -18.28394,3.127394 -41.80105,1.818168 -47.102875,25.328012 -4.873096,21.608735 35.615535,35.290016 13.507663,41.440469 -18.013101,5.01128 -29.84146,12.815669 -40.814213,23.075349 -13.86743,12.96624 -18.509908,49.54508 -21.407446,67.24205 -4.477134,27.34449 -6.586849,43.89087 -0.355192,68.95067 4.06548,16.3488 16.781552,26.81874 23.551995,31.93903 C 55.797143,290.58905 67.5,311.00646 67.5,326.25 l 0,33.75 -90,0 0,-382.5 292.5,0 0,123.75 c -12.04956,-0.16199 -28.30056,-0.27337 -33.75,0 z',
	# Shoreline
	'm 152.33789,48.058594 c -4.01117,0.03549 -4.44222,3.382098 3.83789,14.255859 -12.94976,3.343156 -7.59974,9.908254 -12.35351,13.029297 0,0 -8.4261,18.53764 -6.08008,18.646484 -10.5,11.999996 19.19531,5.822266 19.19531,5.822266 20.74983,-8.369433 29.97644,-25.084657 31.03711,-37.105469 -3.72084,-8.945178 -12.10049,-22.00522 -24.01953,-17.923828 -4.45256,-1.723573 -8.8727,3.25111 -11.61719,3.275391 z m -41.48242,75.019526 c -4.03203,-0.35238 -10.67453,12.20012 -13.320316,15.84961 -3.332104,6.19607 -6.410369,2.29074 -11.082031,21.72852 0.750002,3.25 9.429383,9.46147 15.275387,6.82031 0,0 7.21875,-4.83203 9.34375,-8.33203 0.49983,-4.49443 11.09961,-9.85937 10.47461,-17.98437 -0.50332,-4.79874 6.26581,-4.96474 -7.55273,-10.4336 -0.38285,-5.39623 -1.56093,-7.51055 -3.13867,-7.64844 z m 56.95117,63.50586 c -2.60924,-0.0258 -4.85272,1.56662 -6.93359,6.08008 -3.03109,6.57452 -26.84855,7.1251 -36.60352,6.66016 -16.45458,-0.78425 -37.305073,-2.25056 -45.470765,-4.30379 -22.05414,-5.54539 -24.200382,11.33794 -17.523372,16.26863 7.157567,5.28556 4.180649,35.96658 22.654782,36.27817 5.399402,0.0911 16.132025,15.13265 19.257325,24.33511 4.42445,13.0278 22.01579,8.24309 28.30859,12.37305 8.4069,5.51744 32.33103,29.26141 31.62891,36.34961 -1.01122,10.20864 0,14.07486 0,16.875 0,5.625 -5.625,11.25 0,22.5 5.625,11.25 95.625,11.25 106.875,0 7.95495,-7.95495 11.25,-135 0,-140.625 -6.7082,-3.3541 -22.5,0 -22.5,0 l -22.5,0 c -13.05836,0 -4.65329,17.37169 -26.11914,7.46289 -18.70262,-8.63327 2.72579,-28.97328 -6.39453,-30.45312 -11.43044,-1.85467 -18.93935,-9.74393 -24.67969,-9.80079 z',
	# Grass
	'm 171.28906,49.916016 c -0.40042,0.0091 -0.81062,0.05614 -1.23047,0.144531 -6.71751,1.414213 -3.88867,6.36463 -3.88867,12.021484 0,5.656854 -10.60716,6.364706 -13.08203,11.314453 -2.12132,6.717514 -4.59555,10.251463 -6.00977,14.847657 -1.4142,4.596194 1.41355,7.779296 6.36329,7.779297 4.94975,0 11.31407,-3.536656 14.84961,-7.779297 3.53553,-4.24264 13.08199,-8.130332 13.43554,-13.080079 0.35356,-4.949747 2.12124,-7.425252 0.70703,-12.375 -1.32582,-4.640387 -5.13817,-13.01029 -11.14453,-12.873046 z m -60.29883,87.677734 c -0.72039,0.0137 -1.43279,0.1705 -2.0957,0.50195 -4.94975,2.82842 -13.08203,7.42525 -13.08203,12.375 0,4.94974 -0.353779,11.31242 2.121094,12.01953 2.474876,0.70711 8.485986,-1.06017 11.667966,-4.5957 3.18198,-3.53554 7.77735,-11.31407 7.77735,-14.84961 0,-2.87262 -3.26695,-5.51064 -6.38868,-5.45117 z m 53.58399,69.18359 c -1.44294,0.008 -2.87604,0.0951 -4.27734,0.25586 l -27.74024,3.18164 c -7.45114,0.85471 -19.29838,-0.91637 -26.74219,0 -7.672897,0.94458 -23.217874,11.17845 -24.974606,18.70704 -2.791334,11.96243 6.927844,8.68581 10.542968,14.39843 5.84643,9.23853 13.095378,19.98952 21.117188,27.41797 6.15245,5.69736 15.00037,6.43968 18.96484,8.06836 7.75624,3.18641 12.86941,10.23573 19.67188,15.13867 4.30226,3.10089 8.15974,12.36229 12.31055,15.49414 7.48375,5.64659 5.30273,16.81055 5.30273,16.81055 l 0,11.25 0,11.25 90,0 0,-112.5 -16.875,0 -5.625,0 -18.99609,-1.06055 c -7.48834,-0.41811 -13.44981,-2.78612 -20.37891,-5.65625 -4.89961,-2.02949 -7.83923,-3.6313 -9.12891,-8.77539 -2.5492,-10.16789 -13.07127,-14.03414 -23.17187,-13.98047 z',
	# Forest
	'm 170.76562,53.949219 a 3.8890872,3.2703688 0 0 0 -2.75585,0.966797 3.358757,2.6516502 0 0 0 -1.83985,-0.435547 3.358757,2.6516502 0 0 0 -3.35937,2.652343 3.358757,2.6516502 0 0 0 1.83984,2.361329 3.2703688,4.6845822 0 0 0 -0.7793,3.029297 3.2703688,4.6845822 0 0 0 3.27149,4.685546 3.2703688,4.6845822 0 0 0 0.11328,-0.0059 c 0.008,0.524962 0.0729,1.046637 0.20312,1.548828 -0.028,-8.21e-4 -0.056,-0.0015 -0.084,-0.002 -2.69239,0 -4.875,1.39911 -4.875,3.125 0.002,0.788647 0.4684,1.547733 1.30664,2.125 -0.0365,0.327798 -0.0555,0.663232 -0.0566,1 5.3e-4,0.07167 0.002,0.143307 0.004,0.214844 C 163.18344,75.074233 162.59385,75.001238 162,75 c -3.2624,0.0021 -5.97411,2.111554 -6.22656,4.84375 -0.80443,0.734995 -1.27322,1.850885 -1.27344,3.03125 0,2.140103 1.51104,3.875 3.375,3.875 0.18333,-0.0018 0.36623,-0.02074 0.54688,-0.05664 0.26218,1.259972 1.58835,2.181205 3.14062,2.181641 1.76041,0 3.1875,-1.175253 3.1875,-2.625 -5.8e-4,-0.402443 -0.11352,-0.799388 -0.33008,-1.160156 1.77583,-0.626986 3.10825,-1.906802 3.61133,-3.46875 0.0312,0.0018 0.0625,0.0031 0.0937,0.0039 0.70555,-7.25e-4 1.38383,-0.266436 1.89453,-0.742188 0.51805,0.402344 1.1179,0.616291 1.73047,0.617188 1.79493,0 3.25,-1.790861 3.25,-4 0,-1.137905 -0.39006,-2.158347 -1.00977,-2.886719 a 1.7677668,1.7677668 0 0 0 0.48829,-1.216797 1.7677668,1.7677668 0 0 0 -0.45899,-1.185546 c 1.61329,-0.899577 2.72994,-2.837833 2.73047,-5.085938 0,-1.89963 -0.7999,-3.571402 -2.01758,-4.589844 a 1.3258251,3.358757 0 0 0 0.27735,-2.044922 1.3258251,3.358757 0 0 0 -0.45704,-2.533203 3.8890872,3.2703688 0 0 0 0.10352,-0.736328 3.8890872,3.2703688 0 0 0 -3.89063,-3.271484 z m 1.59766,6.25 a 1.3258251,3.358757 0 0 0 -0.006,0.291015 1.3258251,3.358757 0 0 0 0.0664,1.035157 c -0.0225,-0.0024 -0.0458,-0.0018 -0.0684,-0.0039 a 0.44194171,2.8284271 0 0 0 -0.0664,-1.294922 3.8890872,3.2703688 0 0 0 0.0742,-0.02734 z m -0.83984,0.226562 a 0.44194171,2.8284271 0 0 0 -0.0488,1.13086 c -0.38001,0.05166 -0.75154,0.13682 -1.09961,0.287109 a 3.2703688,4.6845822 0 0 0 -0.30664,-1.408203 3.8890872,3.2703688 0 0 0 0.69726,0.05469 3.8890872,3.2703688 0 0 0 0.75782,-0.06445 z m -2.0918,14.277344 c -0.35763,0.449867 -0.62396,0.997252 -0.77734,1.597656 -0.17434,-0.0336 -0.3516,-0.05061 -0.5293,-0.05078 -0.0704,-3.5e-5 -0.14075,0.0026 -0.21094,0.0078 C 167.97066,75.849362 167.9996,75.425769 168,75 l 0,-0.0293 c 0.4958,-0.0416 0.97866,-0.131854 1.43164,-0.267578 z M 111,138.75 c -1.933,0 -3.5,1.67893 -3.5,3.75 -5e-5,0.0854 0.003,0.1707 0.008,0.25586 -1.02846,0.038 -1.99258,0.31014 -2.6914,0.75976 -0.0637,-0.009 -0.12752,-0.0139 -0.19141,-0.0156 -1.58782,0 -2.875,2.12665 -2.875,4.75 10e-4,0.67036 0.0885,1.33266 0.25586,1.94336 -0.96446,0.5557 -1.50315,1.29143 -1.50586,2.05664 0,1.65685 2.46243,3 5.5,3 3.03757,0 5.5,-1.34315 5.5,-3 -0.003,-1.35747 -1.67746,-2.54456 -4.08203,-2.89453 0.0535,-0.3619 0.081,-0.73294 0.082,-1.10547 -9e-5,-0.25384 -0.0125,-0.50725 -0.0371,-0.75781 0.0955,0.005 0.19128,0.007 0.28711,0.008 1.4809,-4.1e-4 2.84024,-0.48659 3.5332,-1.26367 1.81672,-0.15811 3.21624,-1.78343 3.2168,-3.73633 0,-2.07107 -1.567,-3.75 -3.5,-3.75 z m 2.25,80.75 c -4.83249,0 -8.75,2.23858 -8.75,5 0,2.76142 3.91751,5 8.75,5 0.45602,-0.001 0.91118,-0.0231 1.36133,-0.0644 -0.074,0.26894 -0.11124,0.54146 -0.11133,0.81445 0,2.62335 3.35786,4.75 7.5,4.75 0.20802,-10e-4 0.41588,-0.008 0.62305,-0.0195 -0.0797,0.33659 -0.12083,0.67768 -0.12305,1.01953 0,3.31371 3.58172,6 8,6 4.41828,0 8,-2.68629 8,-6 -0.002,-0.68927 -0.16276,-1.3731 -0.47461,-2.02148 1.5152,1.28286 3.68953,2.01854 5.97461,2.02148 0.86372,-0.003 1.72117,-0.11014 2.53906,-0.31836 0.88681,1.93998 2.76943,3.33579 5.00782,3.71289 -0.029,0.28353 -0.0447,0.56926 -0.0469,0.85547 9.1e-4,0.42084 0.031,0.84063 0.0898,1.25391 -1.03519,-0.64876 -2.29458,-1.00094 -3.58984,-1.00391 -3.31371,0 -6,2.23858 -6,5 0,2.76142 2.68629,5 6,5 0.38292,-8.3e-4 0.76487,-0.0325 1.14062,-0.0937 -0.092,0.3482 -0.13967,0.71921 -0.14062,1.09375 0,1.65685 0.89543,3 2,3 0.0111,-5.3e-4 0.0221,-5.5e-4 0.0332,-0.002 0.34517,3.10826 3.8081,5.49977 7.9668,5.50195 4.41828,0 8,-2.68629 8,-6 -0.003,-0.7936 -0.21498,-1.57895 -0.625,-2.31055 1.31349,-1.0706 2.12331,-3.04825 2.125,-5.18945 -7.7e-4,-1.12475 -0.22546,-2.22655 -0.64844,-3.17969 0.35825,-0.73486 0.57242,-1.543 0.62891,-2.37304 4.00489,-0.37092 7.01449,-2.92079 7.01953,-5.94727 0,-3.31371 -3.58172,-6 -8,-6 -4.34997,0.002 -7.90015,2.6113 -7.99219,5.87305 -0.064,-0.0659 -0.12908,-0.12974 -0.19531,-0.19141 0.12195,-0.46892 0.18487,-0.94933 0.1875,-1.43164 -0.002,-0.46615 -0.0603,-0.93063 -0.17383,-1.38477 1.64323,-0.95 2.67272,-2.82324 2.67383,-4.86523 0,-3.03757 -2.23858,-5.5 -5,-5.5 -2.76142,0 -5,2.46243 -5,5.5 6.1e-4,0.015 5.5e-4,0.0299 0.002,0.0449 -0.31416,0.0325 -0.62548,0.0853 -0.93164,0.1582 -1.38274,-1.96825 -4.104,-3.20109 -7.07031,-3.20312 -1.93659,0.003 -3.80612,0.53221 -5.26172,1.49023 -0.91618,-2.6437 -4.0969,-4.48882 -7.73827,-4.49029 -1.95052,0.002 -3.75287,0.54426 -5.16016,1.44141 a 6.0104074,4.5961938 0 0 0 -1.74218,-0.19922 6.0104074,4.5961938 0 0 0 -2.67578,0.48242 C 120.16715,220.84128 116.98624,219.5 113.25,219.5 Z m 23.01172,12.00977 c 0.0608,0.17286 0.1318,0.3436 0.21289,0.51171 -0.14456,-0.12242 -0.29573,-0.24035 -0.45313,-0.35351 0.0815,-0.0515 0.16157,-0.10427 0.24024,-0.1582 z m -28.07422,13.71289 a 2.8284271,3.8890872 0 0 0 -2.82812,3.88867 2.8284271,3.8890872 0 0 0 1.11132,3.08398 4.4194174,3.1819804 0 0 0 -0.0508,0.45117 4.4194174,3.1819804 0 0 0 4.41992,3.1836 4.4194174,3.1819804 0 0 0 4.41797,-3.1836 4.4194174,3.1819804 0 0 0 -4.2539,-3.17578 2.8284271,3.8890872 0 0 0 0.0117,-0.35937 2.8284271,3.8890872 0 0 0 -2.82812,-3.88867 z m 51.58008,0.125 c 0.0943,0.0743 0.19067,0.14528 0.28906,0.21289 -0.0363,0.31057 -0.0552,0.62469 -0.0566,0.93945 10e-4,0.53064 0.0526,1.05869 0.15234,1.57031 -0.38135,-0.0443 -0.76647,-0.0678 -1.15234,-0.0703 -0.17398,3.1e-4 -0.3479,0.005 -0.52148,0.0137 -0.034,-0.4903 -0.11878,-0.97247 -0.25196,-1.43359 0.56443,-0.28224 1.08648,-0.69974 1.54102,-1.23242 z m 46,0.58203 c -2.34279,3.5e-4 -4.24194,2.69081 -4.24219,6.00976 3.4e-4,0.0971 0.002,0.1941 0.006,0.29102 -0.8036,-1.30459 -1.96529,-2.05485 -3.1875,-2.05859 -2.34333,3.1e-4 -4.2427,2.69199 -4.24219,6.01171 3.6e-4,0.75987 0.10242,1.51275 0.30078,2.21875 -1.00117,0.2599 -1.90301,1.02102 -2.54101,2.14454 -1.98474,0.55716 -3.41558,3.02229 -3.41797,5.88867 0.002,1.87261 0.62032,3.6368 1.67187,4.77148 -0.47564,0.51175 -0.86965,1.15995 -1.15625,1.90235 -0.59709,-0.43451 -1.25843,-0.66209 -1.92968,-0.66407 -1.63437,0.004 -3.12193,1.33703 -3.82422,3.42774 -0.57144,-0.3908 -1.19749,-0.59503 -1.83203,-0.59766 -2.34279,3.5e-4 -4.24194,2.69081 -4.24219,6.00977 8.8e-4,1.41093 0.35212,2.77645 0.99219,3.85742 -0.18729,0.68665 -0.28395,1.41621 -0.28516,2.15234 0.002,2.51749 1.1113,4.76646 2.7793,5.63477 -0.42861,0.95889 -0.65682,2.07011 -0.65821,3.20508 2.5e-4,3.31895 1.8994,6.00941 4.24219,6.00976 0.37677,-5e-4 0.75182,-0.0721 1.11524,-0.21289 -0.0349,0.3042 -0.0531,0.61175 -0.0547,0.91992 2.5e-4,3.31896 1.8994,6.00942 4.24219,6.00977 0.31427,-0.002 0.62739,-0.054 0.93359,-0.1543 -0.14895,0.61952 -0.22548,1.26936 -0.22656,1.92383 0.002,1.28977 0.29746,2.54426 0.84179,3.57812 -0.27892,-0.0272 -0.56013,-0.0416 -0.84179,-0.043 -3.51363,2.6e-4 -6.36212,1.97794 -6.36328,4.41796 0.003,1.55135 1.17731,2.98798 3.09375,3.78516 -0.61202,2.00335 -0.97156,5.11356 -0.97266,8.41406 1.5e-4,5.85698 1.10798,10.60485 2.47461,10.60547 0.73223,-0.002 1.42664,-1.39388 1.89648,-3.80078 1.3095,4.13693 3.51733,6.62476 5.88282,6.62891 2.41491,-0.007 4.66114,-2.60155 5.95703,-6.88086 1.77767,2.33785 4.46251,3.69823 7.30078,3.69922 2.47918,-0.002 4.85655,-1.04214 6.61133,-2.89258 1.53598,2.2927 3.68673,3.59616 5.93945,3.59961 2.31044,-0.004 4.51054,-1.37546 6.05078,-3.77149 1.34402,1.52274 3.01236,2.35383 4.73242,2.35742 1.07614,-0.005 2.13929,-0.33364 3.11914,-0.96484 1.59419,1.5381 3.54048,2.3734 5.54297,2.37891 5.07681,6.8e-4 9.19282,-5.22237 9.19336,-11.66602 -0.003,-2.36226 -0.57113,-4.66767 -1.6289,-6.61133 1.05377,-3.60023 1.62519,-7.97844 1.6289,-12.48046 -4.6e-4,-6.86402 -1.31727,-13.28816 -3.52148,-17.17969 3.50849,-1.93788 5.64023,-5.33214 5.64258,-8.98438 -0.006,-1.83636 -0.55135,-3.63999 -1.58399,-5.23437 4.01853,-1.44471 6.52871,-4.25582 6.5332,-7.31641 -0.007,-3.84952 -3.9513,-7.19171 -9.53125,-8.07617 2.6534,-0.46509 4.22511,-1.20847 4.22852,-2 -6e-4,-1.36681 -4.5914,-2.47472 -10.25391,-2.47461 -3.56237,0.001 -6.86701,0.44849 -8.72851,1.18164 -0.76247,-1.82514 -2.14748,-2.94592 -3.64453,-2.94922 -0.36463,0.001 -0.72765,0.0686 -1.08008,0.20117 0.0125,-0.18437 0.019,-0.36946 0.0195,-0.55468 5.1e-4,-3.3208 -1.90005,-6.01289 -4.24414,-6.01172 -1.89652,0.003 -3.56148,1.78793 -4.07813,4.37304 -0.28645,-0.0854 -0.57837,-0.12862 -0.87109,-0.1289 -0.25616,4.7e-4 -0.51176,0.0338 -0.76367,0.0996 -0.3322,-2.9098 -2.10488,-5.04893 -4.18555,-5.05078 -0.34313,0.002 -0.68482,0.063 -1.01758,0.18164 -0.78184,-1.02331 -1.80665,-1.59288 -2.87109,-1.59571 -0.34782,0.002 -0.69417,0.0641 -1.03125,0.18555 -0.65443,-2.25012 -2.20206,-3.7191 -3.91992,-3.7207 z m -3.1875,9.96289 c 0.22259,0.36238 0.47504,0.68565 0.75195,0.96289 -0.0487,0.15034 -0.093,0.30346 -0.13281,0.45898 -0.20296,-0.0444 -0.40792,-0.0679 -0.61328,-0.0703 -0.0234,0.001 -0.0469,0.002 -0.0703,0.004 0.0457,-0.35116 0.0692,-0.70739 0.0703,-1.06446 -3.4e-4,-0.0971 -0.002,-0.19409 -0.006,-0.29101 z M 127,256.5 c -2.48528,0 -4.5,1.567 -4.5,3.5 0.001,0.29125 0.0491,0.58126 0.14258,0.86328 -1.06389,1.04457 -1.64098,2.32226 -1.64258,3.63672 0,3.31371 3.58172,6 8,6 1.03925,-10e-4 2.06819,-0.15463 3.0293,-0.45117 -0.0146,0.12662 -0.23977,-3.04114 -0.32227,-4.09375 0.49374,3.63139 4.18195,10.54492 8.29297,10.54492 0.77724,0 1.52654,-0.25083 2.23633,-0.60547 a 7.6013975,4.4194174 0 0 0 2.80859,2.12695 c 0.60162,0.88537 1.56745,1.25836 1.56641,1.96875 0,3.31371 7.47039,12.00977 11.88867,12.00977 4.41828,0 8,-2.68629 8,-6 -0.005,-1.45884 -0.71907,-2.86627 -2.00781,-3.95898 0.005,-0.0967 0.008,-0.19385 0.008,-0.29102 0,-1.65424 -0.78112,-2.9963 -1.74609,-3 -0.50147,-1.96606 -1.68756,-3.24933 -3.00391,-3.25 -1.139,1.7e-4 -2.07593,-0.0965 -2.91406,-0.26953 a 7.6013975,4.4194174 0 0 0 0.14258,-0.83985 7.6013975,4.4194174 0 0 0 -7.60157,-4.41992 7.6013975,4.4194174 0 0 0 -0.54492,0.0176 7.2478442,4.9497471 0 0 0 0.7207,-2.13867 7.2478442,4.9497471 0 0 0 -7.24804,-4.94922 7.2478442,4.9497471 0 0 0 -3.04883,0.4668 3.7123103,4.0658636 0 0 0 -1.36914,-0.29102 3.7123103,4.0658636 0 0 0 -0.0254,0.002 c -0.22811,-0.35401 -0.57573,-0.57781 -1.11133,-0.57812 -0.0717,0.001 -0.14331,0.003 -0.21484,0.006 -0.86107,-1.83224 -2.85168,-3.2384 -5.3418,-3.77344 -0.673,-1.34641 -2.33738,-2.23203 -4.19336,-2.23242 z m 84.73438,4.80469 c 0.78234,1.02395 1.80792,1.59356 2.87304,1.5957 0.16261,-0.002 0.32499,-0.0181 0.48633,-0.0469 -0.0864,0.47742 -0.13099,0.96808 -0.13281,1.46093 -4e-5,0.73579 0.0953,1.46534 0.28125,2.15235 -0.50397,0.26824 -0.96729,0.66992 -1.36524,1.18359 -0.16133,-2.46401 -1.37219,-4.53611 -3.05078,-5.2207 0.13077,-0.31266 0.24125,-0.64148 0.33008,-0.98242 0.1948,-0.0286 0.38797,-0.0762 0.57813,-0.14258 z m 13.85156,2.10156 c -0.004,0.0754 -0.006,0.15098 -0.008,0.22656 -0.12143,-0.0159 -0.24329,-0.0244 -0.36523,-0.0254 -0.59971,0.003 -1.19216,0.18604 -1.73828,0.53711 0.0625,-0.21738 0.116,-0.43977 0.16016,-0.66601 0.28645,0.0854 0.57837,0.12862 0.87109,0.1289 0.36463,-0.001 0.72765,-0.0686 1.08008,-0.20117 z m -29.65235,6.90039 c 0.069,0.5508 0.19193,1.08525 0.36524,1.58789 -0.0885,0.13571 -0.17261,0.27714 -0.25195,0.42383 -0.22766,-0.41653 -0.49293,-0.78886 -0.78907,-1.10742 0.24796,-0.26546 0.47458,-0.56871 0.67578,-0.9043 z m 7.29493,8.25977 c 0.0935,0.0642 0.1886,0.12345 0.28515,0.17773 -0.18469,0.13311 -0.36225,0.28521 -0.53125,0.45508 0.0909,-0.20375 0.1731,-0.41507 0.2461,-0.63281 z m -7.18555,1.07812 c 0.305,0.55927 0.67724,1.03796 1.09961,1.41406 -0.51684,0.14829 -1.00963,0.43178 -1.45313,0.83594 -0.29907,-0.27358 -0.62127,-0.49275 -0.95898,-0.65234 0.51033,-0.39916 0.95712,-0.94302 1.3125,-1.59766 z m -5.28516,1.68359 c 0.19131,0.13899 0.3898,0.25716 0.59375,0.35352 -0.82988,0.64493 -1.48369,1.6645 -1.85742,2.89648 -0.20518,-0.25841 -0.42757,-0.488 -0.66406,-0.68554 0.81902,-0.54205 1.49441,-1.44048 1.92773,-2.56446 z m 35.8711,0.90626 c 0.0129,1.69704 0.49105,3.22885 1.23047,3.9414 -0.36565,0.1854 -0.71131,0.38369 -1.03516,0.59375 -0.30921,-1.60239 -1.07276,-2.95204 -2.10938,-3.72851 0.67424,-0.0493 1.33044,-0.32587 1.91407,-0.80664 z m -8.09571,6.85156 c 0.0213,0.25333 0.0539,0.50449 0.0977,0.75195 -0.15382,-0.0845 -0.31098,-0.15625 -0.4707,-0.21484 0.13215,-0.16781 0.25675,-0.3472 0.37304,-0.53711 z m -27.95703,2.34179 c 0.0813,0.10153 0.16539,0.19861 0.25195,0.29102 -0.21555,0.18747 -0.41883,0.40184 -0.60742,0.64063 0.13761,-0.29513 0.25656,-0.60689 0.35547,-0.93165 z m 5.11914,0.5625 c 0.30944,0.28353 0.64363,0.50873 0.99414,0.66993 -0.0486,0.2962 -0.0812,0.59719 -0.0976,0.90039 -0.26597,-0.57493 -0.59958,-1.08097 -0.98633,-1.4961 0.0301,-0.0242 0.0601,-0.049 0.0898,-0.0742 z m -6.19726,1.55274 c -0.45594,0.97912 -0.69969,2.12585 -0.70117,3.29883 4.9e-4,0.0286 5.5e-4,0.0573 0.002,0.0859 -0.13812,0.0327 -0.275,0.0751 -0.41016,0.12696 0.0349,-0.3042 0.0531,-0.61175 0.0547,-0.91992 -5.6e-4,-0.5149 -0.0478,-1.02756 -0.14063,-1.52539 0.43771,-0.25834 0.84175,-0.61881 1.19532,-1.06641 z m 22.62304,2.21094 c 0.12141,0.0165 0.24327,0.0256 0.36524,0.0273 0.12064,-10e-4 0.2412,-0.01 0.36133,-0.0254 0.0383,0.97213 0.24272,1.91653 0.5957,2.75195 -0.4963,0.49149 -0.88531,1.00887 -1.16016,1.54297 -0.30213,-0.40292 -0.62248,-0.77678 -0.95898,-1.11914 0.47424,-0.92981 0.75075,-2.03246 0.79687,-3.17773 z m -18.57617,8.92773 c 0.0201,0.0217 0.0403,0.0433 0.0606,0.0644 -0.0281,0.009 -0.0561,0.0179 -0.084,0.0274 0.008,-0.0305 0.0158,-0.0611 0.0234,-0.0918 z m 21.48438,2.00781 c 2.03595,1.29425 4.85084,2.21723 8.01758,2.62891 -2.23169,1.01467 -4.00108,2.47185 -5.0918,4.19336 -0.88557,-0.37272 -1.83519,-0.67877 -2.83008,-0.91211 0.1255,-0.88123 0.18897,-1.77831 0.18945,-2.67773 -0.003,-1.09009 -0.099,-2.17553 -0.28515,-3.23243 z',
	# Routes
	'm 93.200132,115.55391 c 18.602038,-8.96153 39.035058,-5.23995 42.604948,8.45445 1.97741,7.58552 2.43787,39.94107 28.34188,31.00332 22.74733,-7.84859 12.9421,-33.55947 34.79299,-38.80815 7.81173,-1.87641 20.01779,1.92147 37.31005,1.92147 l 16.875,0 M 123.75,0 l 0,11.25 c 0,3.75 -0.20967,11.822525 0,14.962311 0.7305,10.939415 -1.05292,25.608401 -5.40685,39.105709 C 112.23405,84.256386 104.07617,102.79854 95.49999,112.75 81.754022,128.70028 68.49998,147.29176 49.4571,160.03921 40.739333,165.87495 28.88086,168.75 16.87501,168.75 L 0,168.75 m 46.310755,-7.04661 c -11.543811,15.33549 -12.216855,45.11818 -7.772012,60.20198 6.722459,22.81301 34.656367,44.89578 39.188037,63.41696 2.022157,8.26466 6.64822,20.80698 6.64822,40.92767 l 0,11.25',
	# Labels
	[['Dagger Point', 'm 146.99999,186.25001 c -14,-2.75 -43.125,-4.625 -64.624998,-2.625']],
	# Resources
	[['turtle', 'matrix(0.86138109,-0.50795927,0.50795927,0.86138109,163.4259,253.79251)']],
	# Extras
	[['ship', 'matrix(0.4444171,-0.89581998,0.89581998,0.4444171,144.70104,445.53298)']],
]

resource_encode = {
	'jellyfish': 'j',
	'fish': 'f',
	'squid': 's',
	'turtle': 't',
	'pineapple': 'P',
	'banana': 'B',
	'flower': 'H',	# Hibiscus
	'coconut': 'C',
}

card_info = {
	# <suit,value>: Borders, resources(deck1), resources(deck2), flag, labels(deck1)
	# Flags: (to track work that needs to be done)
	# 'a': Deck 2 needs a new shoreline (different from deck 1)
	# 'e': Replace old edge pattern with new.
	# 'g': e-subtask: Guides updated
	# TODO:
	# fix slope at edges for paths
	'clubs-ace':		['1616',	'Pt',	'Cj',	'a',	['Crusted Port', 'Port Roberts'], ['Port Tristam', 'Port Vintage']],
	'clubs-2':			['1776',	't',	's',	'a',	['Dread Cove'], ['Cove Ariant']],
	'clubs-3':			['0160',	'P',	'C',	'a',	['Blubbernut Isle'], ['Crane Isle']],
	'clubs-4':			['0176',	'C',	'P',	'_',	['Letme Inlet'], ['Almond Bay']],
	'clubs-5':			['1760',	'B',	'H',	'_',	['Pork Bay'], ['Hapless Bay']],
	'clubs-6':			['0036',	'j',	's',	'a',	['Portsmouth'], ['Port Ray']],
	'clubs-7':			['1436',	's',	't',	'a',	['Noneshall Pass'], ['Season Pass']],
	'clubs-8':			['1414',	'f',	'j',	'a',	['Check Point'], ['Point Illism']],
	'clubs-9':			['1416',	'H',	'B',	'a',	['Tress Pass'], ['Encom Pass']],
	'clubs-10':			['1636',	'j',	'f',	'a',	['Black Jack Bay'], ['Jolly Bay']],
	'clubs-jack':		['1774',	'C',	'H',	'a',	['Davenport'], ['Port-au-Potée']],
	'clubs-queen':		['0160',	'B',	'P',	'a',	['Com Port'], ['Port End']],
	'clubs-king':		['0034',	'f',	't',	'a',	['Morgansport'], ['Jonesport']],

	'diamonds-ace':		['3434',	'Cs',	'Pf',	'a',	['Port Rackham', 'Port Tawny'], ['White Port', 'Cooke Port']],
	'diamonds-2':		['0016',	'H',	'B',	'a',	['Shady Cove'], ['Knob Cove']],
	'diamonds-3':		['3774',	'j',	'f',	'a',	['Shark Bay'], ['Scurvy Dog Bay']],
	'diamonds-4':		['0014',	'f',	'j',	'a',	['Point Exter'], ['Counter Point']],
	'diamonds-5':		['3740',	'P',	'C',	'aeg',	['Peg-leg Beach'], ['Shelly Beach']],
	'diamonds-6':		['1740',	'H',	'B',	'_',	['Newport'], ['Port Hole']],
	'diamonds-7':		['3636',	'B',	'H',	'a',	['Mary Isthmus'], ['Cur Isthmus']],
	'diamonds-8':		['4141',	's',	't',	'a',	['Twisted Strait'], ['Privateer Strait']],
	'diamonds-9':		['4143',	'C',	'P',	'a',	['Je-ne-sais Pass'], ['Inappropriate Pass']],
	'diamonds-10':		['3436',	't',	's',	'a',	['Half Moon Bay'], ['Stingray Bay']],
	'diamonds-jack':	['4177',	'f',	'j',	'a',	['Port Starboard'], ['Port Cullis']],
	'diamonds-queen':	['0174',	't',	'C',	'_',	['Queensport'], ['Serial Port']],
	'diamonds-king':	['0036',	'P',	's',	'a',	['Port Judgement'], ['Back Port']],

	'hearts-ace':		['4343',	'Hj',	'Bt',	'a',	['Rose Port', 'Port Roger'], ['Port Crabbe', 'Ruby Port']],
	'hearts-2':			['0034',	'C',	'P',	'a',	['Data Point'], ['Mid Point']],
	'hearts-3':			['4377',	's',	't',	'a',	['Crystal Bay'], ['Darkwater Bay']],
	'hearts-4':			['0140',	't',	's',	'a',	['Dagger Point'], ['Needle Point']],
	'hearts-5':			['0014',	'j',	'f',	'aeg',	['Treasure Beach'], ['Rustyspike Beach']],
	'hearts-6':			['3760',	't',	'f',	'_',	['Waters Port'], ['Freeport']],
	'hearts-7':			['6363',	'P',	'C',	'a',	['Hammerhead Bay'], ['Fishstick Bay']],
	'hearts-8':			['1434',	'B',	'H',	'a',	['Buck Pass'], ['Forward Pass']],
	'hearts-9':			['4363',	'f',	'j',	'a',	['Crybey Bay'], ['Spirit Bay']],
	'hearts-10':		['3776',	'H',	'B',	'a',	['Loading Bay'], ['Ghost Bay']],
	'hearts-jack':		['1634',	'B',	'P',	'a',	['Port Manteau'], ['Spoils Port']],
	'hearts-queen':		['0016',	's',	'j',	'aeg',	['Port-au-Bella'], ['Port Ico']],
	'hearts-king':		['0360',	'C',	'H',	'a',	['Grande Port'], ['Port Lee']],

	'spades-ace':		['6161',	'Bf',	'Hs',	'a',	['Port Tempest', 'Reserve Port'], ['Port Quinta', 'Silver Port']],
	'spades-2':			['6177',	'f',	'j',	'a',	['Mutiny Bay'], ['Lulla Bay']],
	'spades-3':			['0340',	'B',	'H',	'a',	['Dissa Point'], ['Point Less']],
	'spades-4':			['0374',	'H',	'B',	'_',	['Half-Pig Landing'], ['Scabby Beach']],
	'spades-5':			['0140',	't',	's',	'aeg',	['Skullwater Beach'], ['Coconut Beach']],
	'spades-6':			['0360',	'P',	'C',	'aeg',	['Port Ugâl'], ['Port Raiture']],
	'spades-7':			['4361',	'j',	'f',	'a',	['Backstage Pass'], ['Kidneystone Pass']],
	'spades-8':			['4161',	'P',	'C',	'a',	['Dire Strait'], ['Crooked Strait']],
	'spades-9':			['6163',	's',	't',	'a',	['One-Ear Cove'], ['Cove Alent']],
	'spades-10':		['6377',	'C',	'P',	'a',	['Baldhead Beach'], ['Buccaneer Landing']],
	'spades-jack':		['4163',	's',	't',	'a',	['Port Folio'], ['Dis Port']],
	'spades-queen':		['0376',	'H',	'f',	'_',	['Pearl Bay Port'], ['Port Able']],
	'spades-king':		['0340',	'j',	'B',	'aeg',	['Kingsport'], ['Port Royale']],
	
	'joker-red':		['0000',	'fjst',	'BCHP',	'_',	['Unused'],	['Unused']],
	'joker-black':		['7777',	'BCHP',	'fjst',	'_',	['Unused'],	['Unused']],
}

suit_paths = {
	'clubs': [
		'm 31.453338,21.223775 c -3.28572,0 -5.95,2.65553 -5.95,5.94125 0,0.85821 0.18762,1.67115 0.51625,2.40625 -0.26383,-0.0358 -0.53136,-0.0525 -0.805,-0.0525 -3.28572,0 -5.95,2.65553 -5.95,5.94125 0,3.28571 2.66428,5.95 5.95,5.95 1.44726,0 2.87049,-0.3694 3.77125,-1.1725 -0.12772,1.47874 -0.1736,2.78641 -0.21875,4.27875 1.79083,0 3.58167,0 5.3725,0 -0.0452,-1.49234 -0.091,-2.80001 -0.21875,-4.27875 0.90076,0.8031 2.32399,1.1725 3.77125,1.1725 3.28572,0 5.95,-2.66429 5.95,-5.95 0,-3.28572 -2.66428,-5.94125 -5.95,-5.94125 -0.27364,0 -0.54117,0.0167 -0.805,0.0525 0.32863,-0.7351 0.51625,-1.54804 0.51625,-2.40625 0,-3.28572 -2.66428,-5.94125 -5.95,-5.94125 z',
		'm 215.96335,316.27628 c 3.28572,0 5.95,-2.65553 5.95,-5.94125 0,-0.85821 -0.18762,-1.67114 -0.51625,-2.40625 0.26383,0.0358 0.53136,0.0525 0.805,0.0525 3.28572,0 5.95,-2.65553 5.95,-5.94125 0,-3.2857 -2.66428,-5.95 -5.95,-5.95 -1.44726,0 -2.87049,0.3694 -3.77125,1.1725 0.12772,-1.47874 0.1736,-2.78641 0.21875,-4.27875 -1.79083,0 -3.58167,0 -5.3725,0 0.0452,1.49234 0.091,2.80001 0.21875,4.27875 -0.90076,-0.8031 -2.32399,-1.1725 -3.77125,-1.1725 -3.28572,0 -5.95,2.66429 -5.95,5.95 0,3.28572 2.66428,5.94125 5.95,5.94125 0.27364,0 0.54117,-0.0167 0.805,-0.0525 -0.32863,0.73511 -0.51625,1.54804 -0.51625,2.40625 0,3.28572 2.66428,5.94125 5.95,5.94125 z',
	],
	'diamonds': [
		'm 31.453338,20.628773 c -3.90158,4.19568 -7.07982,7.84109 -10.6575,12.24125 3.57768,4.40016 6.75592,8.045575 10.6575,12.241254 3.90158,-4.195679 7.07982,-7.841094 10.6575,-12.241254 -3.57768,-4.40016 -6.75592,-8.04557 -10.6575,-12.241251 z',
		'm 215.96335,316.87128 c 3.90158,-4.19568 7.07982,-7.84109 10.6575,-12.24125 -3.57768,-4.40016 -6.75592,-8.04557 -10.6575,-12.24125 -3.90158,4.19568 -7.07982,7.84109 -10.6575,12.24125 3.57768,4.40016 6.75592,8.04557 10.6575,12.24125 z',
	],
	'hearts': [
		'm 25.651888,21.229764 c -0.59548,0.0193 -1.29762,0.13183 -2.02125,0.35875 -2.41293,0.84879 -3.90505,3.64994 -3.9025,5.87125 -0.16472,6.86829 6.59266,13.21158 11.69,17.01 0.003,0.0146 0.006,0.0291 0.009,0.0438 0.008,-0.006 0.0181,-0.0114 0.0262,-0.0175 0.008,0.006 0.0181,0.0114 0.0262,0.0175 0.003,-0.0147 0.006,-0.0291 0.009,-0.0438 5.09734,-3.79842 11.85472,-10.14171 11.69,-17.01 0.003,-2.22131 -1.48957,-5.02246 -3.9025,-5.87125 -0.72363,-0.22692 -1.42577,-0.33949 -2.02125,-0.35875 -2.54992,-0.0825 -5.0297,1.40516 -5.80125,3.00125 -0.77155,-1.59609 -3.25133,-3.08374 -5.80125,-3.00125 z',
		'm 221.7648,316.27029 c 0.59548,-0.0193 1.29762,-0.13183 2.02125,-0.35875 2.41293,-0.84879 3.90505,-3.64994 3.9025,-5.87125 0.16472,-6.86829 -6.59266,-13.21158 -11.69,-17.01 -0.003,-0.0146 -0.006,-0.0291 -0.009,-0.0438 -0.008,0.006 -0.0181,0.0114 -0.0262,0.0175 -0.008,-0.006 -0.0181,-0.0114 -0.0262,-0.0175 -0.003,0.0147 -0.006,0.0291 -0.009,0.0438 -5.09734,3.79842 -11.85472,10.14171 -11.69,17.01 -0.003,2.22131 1.48957,5.02246 3.9025,5.87125 0.72363,0.22692 1.42577,0.33949 2.02125,0.35875 2.54992,0.0825 5.0297,-1.40516 5.80125,-3.00125 0.77155,1.59609 3.25133,3.08374 5.80125,3.00125 z',
	],
	'spades': [
		'm 31.453338,20.865025 c -5.068589,2.178218 -11.123659,8.116004 -11.112499,14.56 0.007,3.899493 2.33855,5.215546 4.47125,5.74875 1.25548,0.313886 3.11121,0.211218 4.40125,-0.53375 -0.0977,1.04834 -0.18907,3.221456 -0.21,4.235 1.633329,0 3.266669,0 4.899999,0 -0.0209,-1.013544 -0.11229,-3.18666 -0.21,-4.235 1.29004,0.744968 3.14577,0.847636 4.40125,0.53375 2.1327,-0.533204 4.4645,-1.849257 4.47125,-5.74875 0.0111,-6.443996 -6.04391,-12.381782 -11.1125,-14.56 z',
		'm 215.96335,316.63503 c 5.06859,-2.17822 11.12366,-8.11601 11.1125,-14.56 -0.007,-3.8995 -2.33855,-5.21555 -4.47125,-5.74875 -1.25548,-0.31389 -3.11121,-0.21122 -4.40125,0.53375 0.0977,-1.04834 0.18907,-3.22146 0.21,-4.235 -1.63333,0 -3.26667,0 -4.9,0 0.0209,1.01354 0.11229,3.18666 0.21,4.235 -1.29004,-0.74497 -3.14577,-0.84764 -4.40125,-0.53375 -2.1327,0.5332 -4.4645,1.84925 -4.47125,5.74875 -0.0111,6.44399 6.04391,12.38178 11.1125,14.56 z',
	],
}

rank_paths = {
	'2': [
		'm 41.053328,82.975025 -19.19999,0 0,-3.2 c -10e-6,-2 0.39999,-3.84 1.19999,-5.52 0.8,-1.7066 1.84,-3.1466 3.12,-4.32 0.74666,-0.6666 1.37333,-1.2 1.88,-1.6 0.50666,-0.4266 0.98666,-0.7866 1.44001,-1.08 0.45332,-0.32 0.90665,-0.6133 1.36,-0.88 0.47998,-0.2933 1.05332,-0.6533 1.72,-1.08 0.82665,-0.5333 1.57331,-0.9866 2.23999,-1.36 0.66666,-0.3733 1.21332,-0.76 1.64001,-1.16 0.45331,-0.4266 0.79998,-0.9066 1.04,-1.44 0.23998,-0.56 0.35998,-1.28 0.36,-2.16 -2e-5,-0.88 -0.17336,-1.64 -0.52,-2.28 -0.32002,-0.6666 -0.77335,-1.2133 -1.36,-1.64 -0.58669,-0.4266 -1.26669,-0.7466 -2.04001,-0.96 -0.77334,-0.2133 -1.60001,-0.32 -2.47999,-0.32 -0.88002,0 -1.70668,0.1334 -2.48,0.4 -0.77335,0.24 -1.45335,0.5867 -2.04001,1.04 -0.58667,0.4534 -1.05333,1 -1.4,1.64 -0.32,0.64 -0.48,1.3467 -0.48,2.12 l 0,0.4 -3.19999,0.04 0,-0.44 c -10e-6,-1.2266 0.25333,-2.3466 0.76,-3.36 0.50666,-1.04 1.18666,-1.9333 2.03999,-2.68 0.88,-0.7466 1.89333,-1.32 3.04001,-1.72 1.17332,-0.4266 2.42665,-0.64 3.76,-0.64 1.30665,0 2.54665,0.2 3.71999,0.6 1.17332,0.3734 2.18665,0.92 3.04001,1.64 0.87998,0.72 1.57331,1.6 2.07999,2.64 0.50665,1.04 0.75998,2.2134 0.76,3.52 -2e-5,1.6 -0.34668,3.0267 -1.03999,4.28 -0.69336,1.2267 -1.65336,2.2134 -2.88,2.96 -0.93335,0.56 -1.76002,1.04 -2.48001,1.44 -0.69334,0.4 -1.37334,0.8134 -2.03999,1.24 -0.64002,0.4 -1.29335,0.8534 -1.96001,1.36 -0.64,0.5067 -1.36,1.1467 -2.15999,1.92 -0.34668,0.32 -0.72001,0.7334 -1.12,1.24 -0.37335,0.5067 -0.73334,1.08 -1.08001,1.72 -0.32,0.64 -0.58667,1.3333 -0.79999,2.08 -0.21334,0.7467 -0.32001,1.5333 -0.32001,2.36 l 12.68001,0 0,-4 1.6,0 1.59999,0 0,7.2',
		'm 206.36335,254.52503 19.19999,0 0,3.2 c 1e-5,2 -0.39999,3.84 -1.19999,5.52 -0.8,1.7066 -1.84,3.1466 -3.12,4.32 -0.74666,0.6666 -1.37333,1.2 -1.88,1.6 -0.50666,0.4266 -0.98666,0.7866 -1.44001,1.08 -0.45332,0.32 -0.90665,0.6133 -1.36,0.88 -0.47998,0.2933 -1.05332,0.6533 -1.72,1.08 -0.82665,0.5333 -1.57331,0.9866 -2.23999,1.36 -0.66666,0.3733 -1.21332,0.76 -1.64001,1.16 -0.45331,0.4266 -0.79998,0.9066 -1.04,1.44 -0.23998,0.56 -0.35998,1.28 -0.36,2.16 2e-5,0.88 0.17336,1.64 0.52,2.28 0.32002,0.6666 0.77335,1.2133 1.36,1.64 0.58669,0.4266 1.26669,0.7466 2.04001,0.96 0.77334,0.2133 1.60001,0.32 2.47999,0.32 0.88002,0 1.70668,-0.1334 2.48,-0.4 0.77335,-0.24 1.45335,-0.5867 2.04001,-1.04 0.58667,-0.4534 1.05333,-1 1.4,-1.64 0.32,-0.64 0.48,-1.3467 0.48,-2.12 l 0,-0.4 3.19999,-0.04 0,0.44 c 1e-5,1.2266 -0.25333,2.3466 -0.76,3.36 -0.50666,1.04 -1.18666,1.9333 -2.03999,2.68 -0.88,0.7466 -1.89333,1.32 -3.04001,1.72 -1.17332,0.4266 -2.42665,0.64 -3.76,0.64 -1.30665,0 -2.54665,-0.2 -3.71999,-0.6 -1.17332,-0.3734 -2.18665,-0.92 -3.04001,-1.64 -0.87998,-0.72 -1.57331,-1.6 -2.07999,-2.64 -0.50665,-1.04 -0.75998,-2.2134 -0.76,-3.52 2e-5,-1.6 0.34668,-3.0267 1.03999,-4.28 0.69336,-1.2267 1.65336,-2.2134 2.88,-2.96 0.93335,-0.56 1.76002,-1.04 2.48001,-1.44 0.69334,-0.4 1.37334,-0.8134 2.03999,-1.24 0.64002,-0.4 1.29335,-0.8534 1.96001,-1.36 0.64,-0.5067 1.36,-1.1467 2.15999,-1.92 0.34668,-0.32 0.72001,-0.7334 1.12,-1.24 0.37335,-0.5067 0.73334,-1.08 1.08001,-1.72 0.32,-0.64 0.58667,-1.3333 0.79999,-2.08 0.21334,-0.7467 0.32001,-1.5333 0.32001,-2.36 l -12.68001,0 0,4 -1.6,0 -1.59999,0 0,-7.2',
	],
	'3': [
		'm 25.533343,64.095025 9.67999,-10.12 -9.47999,0 0,4 -3.2,0 0,-7.2 17.2,0 0,3.2 -7.56001,7.84 c 1.30666,0.08 2.51999,0.4 3.64,0.96 1.11999,0.5334 2.09332,1.2534 2.92001,2.16 0.82664,0.9067 1.46664,1.9734 1.92,3.2 0.45331,1.2267 0.67997,2.5467 0.67999,3.96 -2e-5,1.5467 -0.28002,2.9867 -0.83999,4.32 -0.53336,1.3333 -1.26669,2.4933 -2.2,3.48 -0.93336,0.96 -2.04002,1.72 -3.32,2.28 -1.25335,0.5333 -2.60002,0.8 -4.04001,0.8 -2.08,0 -3.94667,-0.5733 -5.6,-1.72 -1.65333,-1.1733 -2.90666,-2.6933 -3.76,-4.56 l 2.76,-1.68 c 0.56,1.4133 1.42667,2.56 2.6,3.44 1.2,0.88 2.53333,1.32 4,1.32 0.98666,0 1.91999,-0.1867 2.80001,-0.56 0.87998,-0.4 1.63998,-0.9333 2.28,-1.6 0.66665,-0.6933 1.18665,-1.5067 1.55999,-2.44 0.37332,-0.96 0.55999,-1.9866 0.56001,-3.08 -2e-5,-1.0933 -0.17336,-2.08 -0.52,-2.96 -0.32002,-0.88 -0.78669,-1.6266 -1.40001,-2.24 -0.58668,-0.6133 -1.30668,-1.08 -2.16,-1.4 -0.82667,-0.3466 -1.73334,-0.52 -2.72,-0.52 -0.77334,0 -1.4,0.1067 -1.88,0.32 -0.48,0.2134 -1.01334,0.56 -1.59999,1.04 l -2.32,-2.24',
		'm 221.88333,273.40503 -9.67999,10.12 9.47999,0 0,-4 3.2,0 0,7.2 -17.2,0 0,-3.2 7.56001,-7.84 c -1.30666,-0.08 -2.51999,-0.4 -3.64,-0.96 -1.11999,-0.5334 -2.09332,-1.2534 -2.92001,-2.16 -0.82664,-0.9067 -1.46664,-1.9734 -1.92,-3.2 -0.45331,-1.2267 -0.67997,-2.5467 -0.67999,-3.96 2e-5,-1.5467 0.28002,-2.9867 0.83999,-4.32 0.53336,-1.3333 1.26669,-2.4933 2.2,-3.48 0.93336,-0.96 2.04002,-1.72 3.32,-2.28 1.25335,-0.5333 2.60002,-0.8 4.04001,-0.8 2.08,0 3.94667,0.5733 5.6,1.72 1.65333,1.1733 2.90666,2.6933 3.76,4.56 l -2.76,1.68 c -0.56,-1.4133 -1.42667,-2.56 -2.6,-3.44 -1.2,-0.88 -2.53333,-1.32 -4,-1.32 -0.98666,0 -1.91999,0.1867 -2.80001,0.56 -0.87998,0.4 -1.63998,0.9333 -2.28,1.6 -0.66665,0.6933 -1.18665,1.5067 -1.55999,2.44 -0.37332,0.96 -0.55999,1.9866 -0.56001,3.08 2e-5,1.0933 0.17336,2.08 0.52,2.96 0.32002,0.88 0.78669,1.6266 1.40001,2.24 0.58668,0.6133 1.30668,1.08 2.16,1.4 0.82667,0.3466 1.73334,0.52 2.72,0.52 0.77334,0 1.4,-0.1067 1.88,-0.32 0.48,-0.2134 1.01334,-0.56 1.59999,-1.04 l 2.32,2.24',
	],
	'4': [
		'm 27.85334,74.875025 -6,0 0,-3.2 12,-20.8 3.19999,0 0,20.8 3.999996,0 0,3.2 -3.999996,-0.04 0,4.84 2.400006,0 0,3.2 -7.999996,0 0,-3.2 2.4,0 0,-4.8 -6,0 m 6,-3.2 c -2e-5,0 -2e-5,-0.36 0,-1.08 -2e-5,-0.72 -2e-5,-1.6133 0,-2.68 -2e-5,-1.0933 -2e-5,-2.2533 0,-3.48 -2e-5,-1.2533 -2e-5,-2.4133 0,-3.48 -2e-5,-1.0933 -2e-5,-1.9866 0,-2.68 -2e-5,-0.72 -2e-5,-1.08 0,-1.08 -0.42668,0.72 -0.86668,1.48 -1.32001,2.28 -0.40001,0.6934 -0.84001,1.4667 -1.31999,2.32 -0.48002,0.8534 -0.98668,1.7334 -1.52,2.64 -1.22668,2.1334 -2.62668,4.5467 -4.2,7.24 l 4.15999,0 c 0.50666,0 1.01333,0 1.52,0 0.50666,0 0.94666,0 1.32001,0 0.39998,0 0.71998,0 0.96,0 0.26665,0 0.39998,0 0.4,0',
		'm 219.56334,262.62502 6,0 0,3.2 -12,20.8 -3.2,0 0,-20.8 -4,0 0,-3.2 4,0.04 0,-4.83999 -2.40001,0 0,-3.2 8,0 0,3.2 -2.40001,0 0,4.8 6,0 m -6,3.2 c 3e-5,0 3e-5,0.36 0,1.07999 3e-5,0.72001 3e-5,1.61329 0,2.68 3e-5,1.0933 3e-5,2.25331 0,3.48001 3e-5,1.2533 3e-5,2.4133 0,3.48 3e-5,1.0933 3e-5,1.9866 0,2.68 3e-5,0.72 3e-5,1.08 0,1.08 0.42669,-0.72001 0.86669,-1.48 1.32002,-2.28 0.40001,-0.6934 0.84001,-1.4667 1.31998,-2.32 0.48002,-0.8534 0.98669,-1.7334 1.52001,-2.64 1.22667,-2.1334 2.62668,-4.5467 4.19999,-7.24 l -4.15999,0 c -0.50666,0 -1.01332,0 -1.51999,0 -0.50666,0 -0.94667,0 -1.32002,0 -0.39998,0 -0.71997,0 -0.96,0 -0.26665,0 -0.39998,0 -0.4,0',
	],
	'5': [
		'm 38.913333,50.775025 0,3.2 -11.4,0 -1.12,6.4 c 0.69333,-0.3733 1.41333,-0.6666 2.16,-0.88 0.74666,-0.2133 1.53332,-0.32 2.36,-0.32 1.43999,0 2.78665,0.3067 4.04,0.92 1.27998,0.6134 2.38665,1.4534 3.32,2.52 0.93331,1.0667 1.66665,2.32 2.2,3.76 0.55998,1.44 0.83998,2.9734 0.84,4.6 -2e-5,1.6267 -0.28002,3.1733 -0.84,4.64 -0.53335,1.44 -1.26669,2.7067 -2.2,3.8 -0.93335,1.0933 -2.04002,1.96 -3.32,2.6 -1.25335,0.64 -2.60001,0.96 -4.04,0.96 -1.01334,0 -2.00001,-0.16 -2.96,-0.48 -0.93334,-0.32 -1.80001,-0.76 -2.6,-1.32 -0.8,-0.5867 -1.52,-1.28 -2.16,-2.08 -0.64,-0.8 -1.17333,-1.68 -1.6,-2.64 l 2.92,-1.36 c 0.61333,1.3867 1.47999,2.52 2.6,3.4 1.14666,0.8533 2.41332,1.28 3.8,1.28 0.98666,0 1.91999,-0.2267 2.8,-0.68 0.87999,-0.48 1.63999,-1.12 2.28,-1.92 0.66665,-0.8 1.18665,-1.7333 1.56,-2.8 0.37332,-1.0667 0.55998,-2.2 0.56,-3.4 -2e-5,-1.2 -0.18668,-2.32 -0.56,-3.36 -0.37335,-1.04 -0.89335,-1.9466 -1.56,-2.72 -0.64001,-0.7733 -1.40001,-1.3866 -2.28,-1.84 -0.88001,-0.4533 -1.81334,-0.68 -2.8,-0.68 -1.17334,0 -2.25334,0.3067 -3.24,0.92 -0.98667,0.6134 -1.81334,1.4267 -2.48,2.44 l -2.84,-1.48 2.56,-13.48 14,0',
		'm 208.50335,286.72501 0,-3.2 11.4,0 1.12,-6.4 c -0.69333,0.3733 -1.41333,0.6666 -2.16,0.88 -0.74666,0.2133 -1.53332,0.32 -2.36,0.32 -1.43999,0 -2.78665,-0.3067 -4.04,-0.92 -1.27998,-0.6134 -2.38665,-1.45339 -3.32,-2.52 -0.93331,-1.0667 -1.66665,-2.32 -2.2,-3.76 -0.55998,-1.44 -0.83998,-2.9734 -0.84,-4.59999 2e-5,-1.6267 0.28002,-3.1733 0.84,-4.64 0.53335,-1.44 1.26669,-2.7067 2.2,-3.8 0.93335,-1.0933 2.04002,-1.95999 3.32,-2.59999 1.25335,-0.64 2.60001,-0.96 4.04,-0.96 1.01334,0 2.00001,0.16 2.96,0.48 0.93334,0.32 1.80001,0.75999 2.59999,1.32 0.8,0.5867 1.52,1.27998 2.16001,2.07999 0.63999,0.8 1.17333,1.68 1.59999,2.63999 l -2.92,1.36001 c -0.61333,-1.3867 -1.47999,-2.52001 -2.6,-3.4 -1.14666,-0.8533 -2.41332,-1.28 -3.8,-1.28 -0.98666,0 -1.91999,0.22669 -2.8,0.68 -0.87999,0.47999 -1.63999,1.12 -2.28,1.91999 -0.66665,0.80001 -1.18665,1.73331 -1.56,2.80001 -0.37332,1.0667 -0.55998,2.19999 -0.56,3.4 2e-5,1.19999 0.18668,2.31999 0.56,3.36 0.37335,1.04 0.89335,1.9466 1.56,2.72 0.64001,0.7733 1.40001,1.38659 2.28,1.84 0.88001,0.4533 1.81334,0.68 2.8,0.68 1.17334,0 2.25334,-0.3067 3.24,-0.92 0.98667,-0.6134 1.81334,-1.4267 2.48,-2.44 l 2.84,1.48 -2.56,13.48 -14,0',
	],
	'6': [
		'm 40.653333,72.155025 c -2e-5,1.5733 -0.26669,3.04 -0.8,4.4 -0.50669,1.3333 -1.21335,2.4933 -2.12,3.48 -0.66668,0.8533 -1.45335,1.5467 -2.36,2.08 -0.90668,0.5067 -2.08001,0.76 -3.52,0.76 -1.28001,0 -2.40001,-0.24 -3.36,-0.72 -0.96001,-0.48 -1.80001,-1.12 -2.52,-1.92 -0.72,-0.8267 -1.32,-1.7733 -1.8,-2.84 -0.45334,-1.0933 -0.82667,-2.2267 -1.12,-3.4 -0.29334,-1.2 -0.50667,-2.4 -0.64,-3.6 -0.10667,-1.2266 -0.16,-2.4 -0.16,-3.52 0,-2.2133 0.18666,-4.2933 0.56,-6.24 0.37333,-1.9466 0.94666,-3.64 1.72,-5.08 0.79999,-1.44 1.79999,-2.5733 3,-3.4 1.19999,-0.8533 2.63999,-1.28 4.32,-1.28 1.86665,0 3.43998,0.52 4.72,1.56 1.27998,1.0134 2.30665,2.4 3.08,4.16 l -2.76,1.64 c -0.53335,-1.28 -1.21335,-2.2933 -2.04,-3.04 -0.82668,-0.7466 -1.82668,-1.12 -3,-1.12 -0.98668,0 -1.85334,0.28 -2.6,0.84 -0.74667,0.5334 -1.38667,1.28 -1.92,2.24 -0.50667,0.96 -0.92001,2.1067 -1.24,3.44 -0.29334,1.3067 -0.48001,2.72 -0.56,4.24 0.82666,-1.04 1.78666,-1.8533 2.88,-2.44 1.09332,-0.6133 2.23999,-0.92 3.44,-0.92 1.14665,0 2.25332,0.28 3.32,0.84 1.06665,0.56 1.99998,1.32 2.8,2.28 0.82665,0.96 1.47998,2.0934 1.96,3.4 0.47998,1.3067 0.71998,2.6934 0.72,4.16 m -3.2,0 c -2e-5,-1.04 -0.16002,-2.0133 -0.48,-2.92 -0.32002,-0.9066 -0.74668,-1.6933 -1.28,-2.36 -0.50668,-0.6933 -1.09335,-1.2266 -1.76,-1.6 -0.66668,-0.4 -1.36001,-0.6 -2.08,-0.6 -0.72001,0 -1.42668,0.2 -2.12,0.6 -0.66668,0.3734 -1.26667,0.9067 -1.8,1.6 -0.50667,0.6667 -0.92001,1.4534 -1.24,2.36 -0.29334,0.9067 -0.44001,1.88 -0.44,2.92 -10e-6,0.7467 0.11999,1.56 0.36,2.44 0.23999,0.88 0.58666,1.6933 1.04,2.44 0.47999,0.7467 1.06666,1.3733 1.76,1.88 0.69332,0.5067 1.50666,0.76 2.44,0.76 0.77332,-0.053 1.49332,-0.2933 2.16,-0.72 0.69332,-0.4267 1.29332,-0.9733 1.8,-1.64 0.50665,-0.6933 0.90665,-1.48 1.2,-2.36 0.29332,-0.88 0.43998,-1.8133 0.44,-2.8',
		'm 206.76334,265.34503 c 2e-5,-1.5733 0.26669,-3.04 0.8,-4.4 0.50669,-1.3333 1.21335,-2.4933 2.12,-3.48 0.66668,-0.8533 1.45335,-1.5467 2.36,-2.08 0.90668,-0.5067 2.08001,-0.76 3.52,-0.76 1.28001,0 2.40001,0.24 3.36,0.72 0.96002,0.48 1.80001,1.12 2.52001,1.92 0.72,0.8267 1.32,1.7733 1.8,2.84 0.45334,1.0933 0.82667,2.2267 1.12,3.4 0.29334,1.2 0.50667,2.4 0.64,3.6 0.10667,1.2266 0.16,2.4 0.16,3.52 0,2.2133 -0.18666,4.2933 -0.56,6.24 -0.37334,1.9466 -0.94667,3.64 -1.72,5.08 -0.8,1.44 -1.8,2.5733 -3,3.4 -1.2,0.8533 -2.64,1.28 -4.32,1.28 -1.86665,0 -3.43998,-0.52 -4.72,-1.56 -1.27998,-1.0134 -2.30665,-2.4 -3.08,-4.16 l 2.75999,-1.64 c 0.53336,1.27999 1.21335,2.2933 2.04,3.04 0.82668,0.7466 1.82668,1.12 3,1.12 0.98668,0 1.85334,-0.28 2.6,-0.84 0.74667,-0.5334 1.38667,-1.28 1.92,-2.24 0.50667,-0.96 0.92001,-2.1067 1.24,-3.44 0.29334,-1.3067 0.48001,-2.72 0.56,-4.24 -0.82666,1.04 -1.78666,1.8533 -2.88,2.44 -1.09332,0.6133 -2.23999,0.92 -3.44,0.92 -1.14665,0 -2.25332,-0.28 -3.32,-0.84 -1.06665,-0.56 -1.99998,-1.32 -2.8,-2.28 -0.82665,-0.96 -1.47998,-2.0934 -1.96,-3.4 -0.47998,-1.3067 -0.71998,-2.6934 -0.72,-4.16 m 3.2,0 c 2e-5,1.04 0.16002,2.0133 0.48,2.92 0.32002,0.9066 0.74668,1.6933 1.28,2.36 0.50668,0.6933 1.09335,1.2266 1.76,1.6 0.66668,0.4 1.36001,0.6 2.08,0.6 0.72001,0 1.42668,-0.2 2.12,-0.6 0.66668,-0.3734 1.26667,-0.9067 1.8,-1.6 0.50667,-0.6667 0.92001,-1.4534 1.24,-2.36 0.29334,-0.9067 0.44001,-1.88 0.44,-2.92 1e-5,-0.7467 -0.11999,-1.56 -0.36,-2.44 -0.23999,-0.88 -0.58666,-1.6933 -1.04,-2.44 -0.47999,-0.7467 -1.06666,-1.3733 -1.76,-1.88 -0.69332,-0.5067 -1.50666,-0.76 -2.44,-0.76 -0.77332,0.053 -1.49332,0.2933 -2.16,0.72 -0.69332,0.4267 -1.29332,0.9733 -1.8,1.64 -0.50665,0.6933 -0.90665,1.48 -1.2,2.36 -0.29332,0.88 -0.43998,1.8133 -0.44,2.8',
	],
	'7': [
		'm 21.893333,58.075025 c -10e-6,0 -10e-6,-0.093 0,-0.28 -10e-6,-0.2133 -10e-6,-0.4933 0,-0.84 -10e-6,-0.3466 -10e-6,-0.7333 0,-1.16 -10e-6,-0.4266 -10e-6,-0.8666 0,-1.32 l 0,-3.6 17.19999,0 1.92001,3.92 c -0.85336,1.5467 -1.68002,3.0534 -2.48,4.52 -0.69336,1.28 -1.38669,2.6134 -2.08001,4 -0.69334,1.3867 -1.25334,2.6267 -1.67999,3.72 -0.80002,2.0534 -1.45335,3.92 -1.96001,5.6 -0.50667,1.68 -0.90667,3.1867 -1.19999,4.52 -0.29335,1.3067 -0.52002,2.44 -0.68001,3.4 -0.13334,0.96 -0.21334,1.7333 -0.24,2.32 l -3.19999,0 c -10e-6,-0.6667 0.08,-1.5333 0.24,-2.6 0.15999,-1.0933 0.38665,-2.3067 0.68,-3.64 0.31999,-1.3333 0.69332,-2.7467 1.12,-4.24 0.45332,-1.52 0.95998,-3.0533 1.52,-4.6 0.15998,-0.4266 0.37332,-0.9466 0.63999,-1.56 0.26666,-0.64 0.55999,-1.32 0.88,-2.04 0.34666,-0.72 0.69333,-1.4666 1.04001,-2.24 0.37331,-0.8 0.74665,-1.5733 1.12,-2.32 0.85331,-1.76 1.77331,-3.6133 2.76,-5.56 l -6.2,0 -6.20001,0 0,4 -3.19999,0',
		'm 225.52334,279.42502 c 1e-5,0 1e-5,0.093 0,0.28 1e-5,0.2133 1e-5,0.4933 0,0.84 1e-5,0.3466 1e-5,0.7333 0,1.16001 1e-5,0.4266 1e-5,0.8666 0,1.32 l 0,3.6 -17.19999,0 -1.92001,-3.92 c 0.85336,-1.5467 1.68002,-3.0534 2.48,-4.52001 0.69336,-1.27999 1.38669,-2.61339 2.08001,-4 0.69334,-1.38669 1.25334,-2.62669 1.67999,-3.71999 0.80002,-2.0534 1.45335,-3.92001 1.96001,-5.6 0.50667,-1.68001 0.90667,-3.1867 1.19999,-4.52 0.29335,-1.30671 0.52002,-2.44 0.68001,-3.40001 0.13334,-0.96 0.21334,-1.7333 0.24,-2.31999 l 3.19999,0 c 1e-5,0.6667 -0.08,1.53329 -0.24,2.6 -0.15999,1.0933 -0.38665,2.3067 -0.68,3.63999 -0.31999,1.3333 -0.69332,2.7467 -1.12,4.24 -0.45332,1.52001 -0.95998,3.0533 -1.52,4.6 -0.15998,0.4266 -0.37332,0.9466 -0.63999,1.56001 -0.26666,0.64 -0.55999,1.31999 -0.88,2.03999 -0.34666,0.72001 -0.69333,1.4666 -1.04001,2.24 -0.37331,0.80001 -0.74665,1.57331 -1.12,2.32 -0.85331,1.76 -1.77331,3.6133 -2.76,5.56 l 6.2,0 6.20001,0 0,-4 3.19999,0',
	],
	'8': [
		'm 23.333333,59.015025 c 0,-1.12 0.21333,-2.1733 0.64,-3.16 0.42666,-1.0133 1,-1.88 1.72,-2.6 0.74666,-0.7466 1.61333,-1.3333 2.6,-1.76 0.98666,-0.4266 2.03999,-0.64 3.16,-0.64 1.11999,0 2.17332,0.2134 3.16,0.64 0.98665,0.4267 1.83998,1.0134 2.56,1.76 0.74665,0.72 1.33332,1.5867 1.76,2.6 0.42665,0.9867 0.63998,2.04 0.64,3.16 -2e-5,1.28 -0.26669,2.4667 -0.8,3.56 -0.50668,1.0934 -1.22668,2.0134 -2.16,2.76 1.33332,0.8534 2.39998,1.9867 3.2,3.4 0.82665,1.4134 1.23998,2.96 1.24,4.64 -2e-5,1.3333 -0.25335,2.5733 -0.76,3.72 -0.50669,1.1467 -1.20002,2.16 -2.08,3.04 -0.85335,0.8533 -1.86668,1.5333 -3.04,2.04 -1.17335,0.48 -2.41335,0.72 -3.72,0.72 -1.33334,0 -2.58668,-0.24 -3.76,-0.72 -1.14667,-0.5067 -2.16001,-1.1867 -3.04,-2.04 -0.85334,-0.88 -1.53334,-1.8933 -2.04,-3.04 -0.50667,-1.1467 -0.76,-2.3867 -0.76,-3.72 0,-1.68 0.4,-3.2266 1.2,-4.64 0.82666,-1.4133 1.90666,-2.5466 3.24,-3.4 -0.90667,-0.7466 -1.62667,-1.6666 -2.16,-2.76 -0.53334,-1.0933 -0.8,-2.28 -0.8,-3.56 m 1.92,14.48 c 0,0.8533 0.15999,1.6667 0.48,2.44 0.31999,0.7467 0.75999,1.4 1.32,1.96 0.55999,0.56 1.21333,1 1.96,1.32 0.77332,0.32 1.58666,0.48 2.44,0.48 0.85332,0 1.65332,-0.16 2.4,-0.48 0.77332,-0.32 1.43998,-0.76 2,-1.32 0.55998,-0.56 0.99998,-1.2133 1.32,-1.96 0.31998,-0.7733 0.47998,-1.5867 0.48,-2.44 -2e-5,-0.8533 -0.16002,-1.6533 -0.48,-2.4 -0.32002,-0.7733 -0.76002,-1.44 -1.32,-2 -0.56002,-0.56 -1.22668,-1 -2,-1.32 -0.74668,-0.32 -1.54668,-0.48 -2.4,-0.48 -0.85334,0 -1.66668,0.16 -2.44,0.48 -0.74667,0.32 -1.40001,0.76 -1.96,1.32 -0.56001,0.56 -1.00001,1.2267 -1.32,2 -0.32001,0.7467 -0.48,1.5467 -0.48,2.4 m 1.4,-14.56 c -10e-6,0.6667 0.11999,1.2934 0.36,1.88 0.26666,0.5867 0.61333,1.0934 1.04,1.52 0.42666,0.4267 0.93332,0.7734 1.52,1.04 0.58666,0.24 1.21332,0.36 1.88,0.36 0.66665,0 1.29332,-0.12 1.88,-0.36 0.58665,-0.2666 1.09332,-0.6133 1.52,-1.04 0.42665,-0.4266 0.75998,-0.9333 1,-1.52 0.26665,-0.5866 0.39998,-1.2133 0.4,-1.88 -2e-5,-0.6666 -0.13335,-1.2933 -0.4,-1.88 -0.24002,-0.5866 -0.57335,-1.0933 -1,-1.52 -0.42668,-0.4533 -0.93335,-0.8 -1.52,-1.04 -0.58668,-0.2666 -1.21335,-0.4 -1.88,-0.4 -0.66668,0 -1.29334,0.1334 -1.88,0.4 -0.58668,0.24 -1.09334,0.5867 -1.52,1.04 -0.42667,0.4267 -0.77334,0.9334 -1.04,1.52 -0.24001,0.5867 -0.36001,1.2134 -0.36,1.88',
		'm 224.08334,278.48503 c 0,1.12 -0.21333,2.1733 -0.64,3.16 -0.42666,1.0133 -1,1.88 -1.72,2.6 -0.74666,0.7466 -1.61333,1.3333 -2.6,1.76 -0.98666,0.4266 -2.03999,0.64 -3.16,0.64 -1.11999,0 -2.17332,-0.2134 -3.16,-0.64 -0.98665,-0.4267 -1.83998,-1.0134 -2.56,-1.76 -0.74665,-0.72 -1.33332,-1.5867 -1.76,-2.6 -0.42665,-0.9867 -0.63998,-2.04 -0.64,-3.16 2e-5,-1.28 0.26669,-2.4667 0.8,-3.56 0.50668,-1.0934 1.22668,-2.0134 2.16,-2.76 -1.33332,-0.8534 -2.39998,-1.9867 -3.2,-3.4 -0.82665,-1.4134 -1.23998,-2.96 -1.24,-4.64 2e-5,-1.3333 0.25335,-2.5733 0.76,-3.72 0.50669,-1.1467 1.20002,-2.16 2.08,-3.04 0.85335,-0.8533 1.86668,-1.5333 3.04,-2.04 1.17335,-0.48 2.41335,-0.72 3.72,-0.72 1.33334,0 2.58668,0.24 3.76,0.72 1.14667,0.5067 2.16001,1.1867 3.04,2.04 0.85334,0.88 1.53334,1.8933 2.04,3.04 0.50667,1.1467 0.76,2.3867 0.76,3.72 0,1.68 -0.4,3.2266 -1.2,4.64 -0.82666,1.4133 -1.90666,2.5466 -3.24,3.4 0.90667,0.7466 1.62667,1.6666 2.16,2.76 0.53334,1.0933 0.8,2.28 0.8,3.56 m -1.92,-14.48 c 0,-0.8533 -0.15999,-1.6667 -0.48,-2.44 -0.31999,-0.7467 -0.75999,-1.4 -1.32,-1.96 -0.55999,-0.56 -1.21333,-1 -1.96,-1.32 -0.77332,-0.32 -1.58666,-0.48 -2.44,-0.48 -0.85332,0 -1.65332,0.16 -2.4,0.48 -0.77332,0.32 -1.43998,0.76 -2,1.32 -0.55998,0.56 -0.99998,1.2133 -1.32,1.96 -0.31998,0.7733 -0.47998,1.5867 -0.48,2.44 2e-5,0.8533 0.16002,1.6533 0.48,2.4 0.32002,0.7733 0.76002,1.44 1.32,2 0.56002,0.56 1.22668,1 2,1.32 0.74668,0.32 1.54668,0.48 2.4,0.48 0.85334,0 1.66668,-0.16 2.44,-0.48 0.74667,-0.32 1.40001,-0.76 1.96,-1.32 0.56001,-0.56 1.00001,-1.2267 1.32,-2 0.32001,-0.7467 0.48,-1.5467 0.48,-2.4 m -1.4,14.56 c 1e-5,-0.6667 -0.11999,-1.2934 -0.36,-1.88 -0.26666,-0.5867 -0.61333,-1.0934 -1.04,-1.52 -0.42666,-0.4267 -0.93332,-0.7734 -1.52,-1.04 -0.58666,-0.24 -1.21332,-0.36 -1.88,-0.36 -0.66665,0 -1.29332,0.12 -1.88,0.36 -0.58665,0.2666 -1.09332,0.6133 -1.52,1.04 -0.42665,0.4266 -0.75998,0.9333 -1,1.52 -0.26665,0.5866 -0.39998,1.2133 -0.4,1.88 2e-5,0.6666 0.13335,1.2933 0.4,1.88 0.24002,0.5866 0.57335,1.0933 1,1.52 0.42668,0.4533 0.93335,0.8 1.52,1.04 0.58668,0.2666 1.21335,0.4 1.88,0.4 0.66668,0 1.29334,-0.1334 1.88,-0.4 0.58668,-0.24 1.09334,-0.5867 1.52,-1.04 0.42667,-0.4267 0.77334,-0.9334 1.04,-1.52 0.24001,-0.5867 0.36001,-1.2134 0.36,-1.88',
	],
	'9': [
		'm 22.253338,61.595025 c -10e-6,-1.5733 0.25333,-3.0266 0.76,-4.36 0.53333,-1.36 1.25332,-2.5333 2.15999,-3.52 0.66667,-0.8533 1.45333,-1.5333 2.36,-2.04 0.90666,-0.5333 2.08,-0.8 3.52,-0.8 1.27999,0 2.39999,0.24 3.36,0.72 0.95999,0.48 1.79999,1.1334 2.52,1.96 0.71999,0.8 1.30665,1.7467 1.76001,2.84 0.47998,1.0667 0.86664,2.2 1.16,3.4 0.29331,1.1734 0.49331,2.3734 0.6,3.6 0.13331,1.2267 0.19997,2.3867 0.19999,3.48 -2e-5,2.2134 -0.18668,4.2934 -0.55999,6.24 -0.37336,1.9467 -0.96002,3.64 -1.76,5.08 -0.77336,1.44 -1.76002,2.5867 -2.96,3.44 -1.20002,0.8267 -2.64002,1.24 -4.32001,1.24 -1.86667,0 -3.44,-0.5067 -4.71999,-1.52 -1.28001,-1.04 -2.30668,-2.44 -3.08,-4.2 l 2.76,-1.64 c 0.53332,1.28 1.21332,2.2933 2.03999,3.04 0.82666,0.7467 1.82666,1.12 3,1.12 0.98666,0 1.85333,-0.2667 2.6,-0.8 0.74666,-0.56 1.37332,-1.32 1.88,-2.28 0.53332,-0.96 0.94666,-2.0933 1.24,-3.4 0.31999,-1.3333 0.51999,-2.76 0.60001,-4.28 -0.82669,1.04 -1.78669,1.8667 -2.88,2.48 -1.09335,0.5867 -2.24002,0.88 -3.44001,0.88 -1.17334,0 -2.29334,-0.28 -3.35999,-0.84 -1.04001,-0.56 -1.97334,-1.32 -2.80001,-2.28 -0.8,-0.96 -1.44,-2.08 -1.91999,-3.36 -0.48001,-1.3066 -0.72001,-2.7066 -0.72,-4.2 m 3.2,0 c -10e-6,1.04 0.14666,2.0134 0.43999,2.92 0.32,0.9067 0.73333,1.7067 1.24001,2.4 0.53332,0.6667 1.13332,1.2 1.79999,1.6 0.69333,0.3734 1.39999,0.56 2.12,0.56 0.71999,0 1.41333,-0.1866 2.08001,-0.56 0.66665,-0.4 1.25331,-0.9333 1.75999,-1.6 0.53332,-0.6933 0.95999,-1.4933 1.28,-2.4 0.31999,-0.9066 0.47999,-1.88 0.48,-2.92 -1e-5,-0.7466 -0.12001,-1.56 -0.36,-2.44 -0.24001,-0.88 -0.60001,-1.6933 -1.07999,-2.44 -0.45335,-0.7466 -1.04002,-1.3733 -1.76,-1.88 -0.69335,-0.5066 -1.49335,-0.76 -2.40001,-0.76 -0.77334,0.053 -1.50667,0.2934 -2.19999,0.72 -0.66668,0.4267 -1.25335,0.9867 -1.76,1.68 -0.50668,0.6667 -0.90668,1.44 -1.20001,2.32 -0.29333,0.88 -0.44,1.8134 -0.43999,2.8',
		'm 225.16333,275.90503 c 1e-5,1.5733 -0.25333,3.0266 -0.76,4.36 -0.53333,1.36 -1.25332,2.5333 -2.15999,3.52 -0.66667,0.8533 -1.45333,1.5333 -2.36,2.04 -0.90666,0.5333 -2.08,0.8 -3.52,0.8 -1.27999,0 -2.39999,-0.24 -3.36,-0.72 -0.95999,-0.48 -1.79999,-1.1334 -2.52,-1.96 -0.71999,-0.8 -1.30665,-1.7467 -1.76001,-2.84 -0.47998,-1.0667 -0.86664,-2.2 -1.16,-3.4 -0.29331,-1.1734 -0.49331,-2.3734 -0.6,-3.6 -0.13331,-1.2267 -0.19997,-2.3867 -0.19999,-3.48 2e-5,-2.2134 0.18668,-4.2934 0.55999,-6.24 0.37336,-1.9467 0.96002,-3.64 1.76,-5.08 0.77336,-1.44 1.76002,-2.5867 2.96,-3.44 1.20002,-0.8267 2.64002,-1.24 4.32001,-1.24 1.86667,0 3.44,0.5067 4.71999,1.52 1.28001,1.04 2.30668,2.44 3.08,4.2 l -2.76,1.64 c -0.53332,-1.28 -1.21332,-2.2933 -2.03999,-3.04 -0.82666,-0.7467 -1.82666,-1.12 -3,-1.12 -0.98666,0 -1.85333,0.2667 -2.6,0.8 -0.74666,0.56 -1.37332,1.32 -1.88,2.28 -0.53332,0.96 -0.94666,2.0933 -1.24,3.4 -0.31999,1.3333 -0.51999,2.76 -0.60001,4.28 0.82669,-1.04 1.78669,-1.8667 2.88,-2.48 1.09335,-0.5867 2.24002,-0.88 3.44001,-0.88 1.17334,0 2.29334,0.28 3.35999,0.84 1.04001,0.56 1.97334,1.32 2.80001,2.28 0.8,0.96 1.44,2.08 1.91999,3.36 0.48001,1.3066 0.72001,2.7066 0.72,4.2 m -3.2,0 c 10e-6,-1.04 -0.14666,-2.0134 -0.43999,-2.92 -0.32,-0.9067 -0.73333,-1.7067 -1.24001,-2.4 -0.53332,-0.6667 -1.13332,-1.2 -1.79999,-1.6 -0.69333,-0.3734 -1.39999,-0.56 -2.12,-0.56 -0.71999,0 -1.41333,0.1866 -2.08001,0.56 -0.66665,0.4 -1.25331,0.9333 -1.75999,1.6 -0.53332,0.6933 -0.95999,1.4933 -1.28,2.4 -0.31999,0.9066 -0.47999,1.88 -0.48,2.92 1e-5,0.7466 0.12001,1.56 0.36,2.44 0.24001,0.88 0.60001,1.6933 1.07999,2.44 0.45335,0.7466 1.04002,1.3733 1.76,1.88 0.69335,0.5066 1.49335,0.76 2.40001,0.76 0.77334,-0.053 1.50667,-0.2934 2.19999,-0.72 0.66668,-0.4267 1.25335,-0.9867 1.76,-1.68 0.50668,-0.6667 0.90668,-1.44 1.20001,-2.32 0.29333,-0.88 0.44,-1.8134 0.43999,-2.8',
	],
	'10': [
		'm 21.10333,50.87502 0,32 3.19921,0 0,-28.79883 0,-3.20117 -3.19921,0 z m 13.54961,0 c -3.94896,2.2e-4 -7.15017,3.20143 -7.15039,7.15039 l 0,17.64844 c 2.2e-4,3.94896 3.20143,7.15017 7.15039,7.15039 3.94896,-2.2e-4 7.15017,-3.20143 7.15039,-7.15039 l 0,-17.64844 c -2.2e-4,-3.94896 -3.20143,-7.15017 -7.15039,-7.15039 z m 0,3.19922 c 2.18208,2.3e-4 3.95094,1.76909 3.95117,3.95117 l 0,17.64844 c -2.3e-4,2.18208 -1.76909,3.95094 -3.95117,3.95117 -2.18208,-2.3e-4 -3.95094,-1.76909 -3.95117,-3.95117 l 0,-17.64844 c 2.3e-4,-2.18208 1.76909,-3.95094 3.95117,-3.95117 z',
		'm 226.31334,286.62503 0,-32 -3.19921,0 0,28.79883 0,3.20117 3.19921,0 z m -13.54961,0 c 3.94896,-2.2e-4 7.15017,-3.20143 7.15039,-7.15039 l 0,-17.64844 c -2.2e-4,-3.94896 -3.20143,-7.15017 -7.15039,-7.15039 -3.94896,2.2e-4 -7.15017,3.20143 -7.15039,7.15039 l 0,17.64844 c 2.2e-4,3.94896 3.20143,7.15017 7.15039,7.15039 z m 0,-3.19922 c -2.18208,-2.3e-4 -3.95094,-1.76909 -3.95117,-3.95117 l 0,-17.64844 c 2.3e-4,-2.18208 1.76909,-3.95094 3.95117,-3.95117 2.18208,2.3e-4 3.95094,1.76909 3.95117,3.95117 l 0,17.64844 c -2.3e-4,2.18208 -1.76909,3.95094 -3.95117,3.95117 z',
	],
	'jack': [
		'm 31.05334,50.87502 10,0 0,3.2 -3.40001,0 0,20.92 c -10e-6,1.0933 -0.21335,2.12 -0.63999,3.08 -0.40002,0.96 -0.96002,1.8 -1.68001,2.52 -0.72001,0.6933 -1.56001,1.2533 -2.51999,1.68 -0.96002,0.4 -1.98668,0.6 -3.08,0.6 -1.09335,0 -2.12001,-0.2 -3.08001,-0.6 -0.96,-0.4267 -1.8,-0.9867 -2.51999,-1.68 -0.69334,-0.72 -1.25334,-1.56 -1.68,-2.52 -0.40001,-0.96 -0.60001,-1.9867 -0.6,-3.08 l 0,-2.08 3.2,0 0,2.08 c -10e-6,0.64 0.11999,1.2533 0.36,1.84 0.23999,0.56 0.57332,1.0533 1,1.48 0.42666,0.4267 0.91999,0.76 1.47999,1 0.58666,0.24 1.2,0.36 1.84001,0.36 0.63998,0 1.23998,-0.12 1.79999,-0.36 0.58666,-0.24 1.09333,-0.5733 1.52001,-1 0.42665,-0.4267 0.75998,-0.92 1,-1.48 0.26665,-0.5867 0.39998,-1.2 0.4,-1.84 l 0,-20.92 -3.4,0 0,-3.2',
		'm 216.36334,286.62503 -10,0 0,-3.2 3.40001,0 0,-20.92 c 1e-5,-1.0933 0.21335,-2.12 0.63999,-3.08 0.40002,-0.96 0.96002,-1.8 1.68001,-2.52 0.72001,-0.6933 1.56001,-1.2533 2.51999,-1.68 0.96002,-0.4 1.98668,-0.6 3.08,-0.6 1.09335,0 2.12001,0.2 3.08001,0.6 0.96,0.4267 1.8,0.9867 2.51999,1.68 0.69334,0.72 1.25334,1.56 1.68,2.52 0.40001,0.96 0.60001,1.9867 0.6,3.08 l 0,2.08 -3.2,0 0,-2.08 c 1e-5,-0.64 -0.11999,-1.2533 -0.36,-1.84 -0.23999,-0.56 -0.57332,-1.0533 -1,-1.48 -0.42666,-0.4267 -0.91999,-0.76 -1.47999,-1 -0.58666,-0.24 -1.2,-0.36 -1.84001,-0.36 -0.63998,0 -1.23998,0.12 -1.79999,0.36 -0.58666,0.24 -1.09333,0.5733 -1.52001,1 -0.42665,0.4267 -0.75998,0.92 -1,1.48 -0.26665,0.5867 -0.39998,1.2 -0.4,1.84 l 0,20.92 3.4,0 0,3.2',
	],
	'queen': [
		'm 21.053333,70.875025 c 0.24,0 0.49333,0.013 0.76,0.04 0.26666,0 0.54666,0.013 0.84,0.04 l 0,-10.48 c 0,-1.3066 0.21333,-2.5466 0.64,-3.72 0.42666,-1.1733 1.01333,-2.1866 1.76,-3.04 0.77333,-0.88 1.69333,-1.5733 2.76,-2.08 1.09332,-0.5066 2.30666,-0.76 3.64,-0.76 1.30665,0 2.47999,0.2534 3.52,0.76 1.03998,0.5067 1.93332,1.2 2.68,2.08 0.74665,0.88 1.33331,1.9067 1.76,3.08 0.42665,1.1467 0.70665,2.3734 0.84,3.68 l 0,12.8 c -2e-5,1.0133 -0.13335,1.9867 -0.4,2.92 -0.24002,0.9067 -0.58669,1.7467 -1.04,2.52 0.55998,0.32 1.14665,0.5733 1.76,0.76 0.63998,0.16 1.33331,0.2267 2.08,0.2 l 0,3.2 c -1.01335,0 -2.01335,-0.1733 -3,-0.52 -0.96002,-0.3467 -1.90668,-0.7867 -2.84,-1.32 -0.72002,0.5867 -1.53335,1.04 -2.44,1.36 -0.88001,0.32 -1.85335,0.48 -2.92,0.48 -1.25334,0 -2.40001,-0.2133 -3.44,-0.64 -1.01334,-0.4533 -1.90667,-1.0667 -2.68,-1.84 -0.74667,-0.8 -1.36,-1.72 -1.84,-2.76 -0.45334,-1.0667 -0.72,-2.2133 -0.8,-3.44 -0.88,-0.08 -1.69333,-0.12 -2.44,-0.12 0,-0.2133 0,-0.4933 0,-0.84 0,-0.3733 0,-0.7333 0,-1.08 0,-0.3466 0,-0.64 0,-0.88 0,-0.2666 0,-0.4 0,-0.4 l 0.8,0 m 16,-10.4 c -2e-5,-0.88 -0.13335,-1.7066 -0.4,-2.48 -0.24002,-0.7733 -0.60002,-1.4533 -1.08,-2.04 -0.48001,-0.5866 -1.06668,-1.04 -1.76,-1.36 -0.69335,-0.3466 -1.48001,-0.52 -2.36,-0.52 -0.88001,0 -1.66668,0.1734 -2.36,0.52 -0.69334,0.32 -1.28001,0.7734 -1.76,1.36 -0.48001,0.5867 -0.85334,1.2667 -1.12,2.04 -0.24001,0.7734 -0.36001,1.6 -0.36,2.48 l 0,10.92 c 1.11999,0.2134 2.25333,0.5334 3.4,0.96 1.14666,0.4267 2.22666,0.9734 3.24,1.64 0.69332,0.48 1.34665,0.9733 1.96,1.48 0.61332,0.48 1.19998,0.9467 1.76,1.4 0.55998,-1.04 0.83998,-2.24 0.84,-3.6 l 0,-12.8 m -5.6,19.2 c 0.93332,0 1.77332,-0.1867 2.52,-0.56 l -2.6,-1.96 c -0.82668,-0.6133 -1.70668,-1.1067 -2.64,-1.48 -0.90667,-0.4 -1.82667,-0.7067 -2.76,-0.92 0.23999,1.4133 0.82666,2.5867 1.76,3.52 0.95999,0.9333 2.19999,1.4 3.72,1.4',
		'm 226.36334,266.62502 c -0.24,0 -0.49333,-0.013 -0.76,-0.04 -0.26666,0 -0.54666,-0.013 -0.84,-0.04 l 0,10.48 c 0,1.3066 -0.21333,2.5466 -0.64,3.72 -0.42666,1.1733 -1.01333,2.1866 -1.76,3.04001 -0.77333,0.88 -1.69333,1.5733 -2.76,2.07999 -1.09332,0.5066 -2.30666,0.76 -3.64,0.76 -1.30664,0 -2.47998,-0.2534 -3.52,-0.76 -1.03998,-0.5067 -1.93332,-1.19999 -2.68,-2.07999 -0.74665,-0.88 -1.33331,-1.9067 -1.76,-3.08 -0.42665,-1.1467 -0.70665,-2.3734 -0.84,-3.68 l 0,-12.8 c 2e-5,-1.01331 0.13335,-1.9867 0.4,-2.92001 0.24002,-0.9067 0.58669,-1.74669 1.04,-2.51999 -0.55998,-0.32 -1.14665,-0.57331 -1.76,-0.76 -0.63998,-0.16001 -1.33331,-0.2267 -2.08,-0.2 l 0,-3.2 c 1.01335,0 2.01335,0.1733 3,0.52 0.96002,0.3467 1.90668,0.7867 2.84,1.32 0.72002,-0.5867 1.53335,-1.04 2.44,-1.36 0.88001,-0.32 1.85335,-0.48 2.92,-0.48 1.25334,0 2.40001,0.2133 3.44,0.64 1.01334,0.4533 1.90667,1.06669 2.68,1.84 0.74667,0.8 1.36,1.72 1.84,2.76 0.45334,1.0667 0.72,2.2133 0.8,3.44 0.88,0.08 1.69333,0.12 2.44,0.12 0,0.2133 0,0.4933 0,0.84 0,0.37329 0,0.7333 0,1.08 0,0.3466 0,0.63999 0,0.88 0,0.26659 0,0.39999 0,0.39999 l -0.8,0 m -16,10.4 c 2e-5,0.88 0.13335,1.7066 0.4,2.48 0.24002,0.7733 0.60002,1.4533 1.08,2.04 0.48001,0.5866 1.06668,1.04001 1.76,1.36001 0.69335,0.3466 1.48001,0.51999 2.36,0.51999 0.88001,0 1.66669,-0.1734 2.36001,-0.51999 0.69334,-0.32 1.28001,-0.7734 1.75999,-1.36001 0.48001,-0.5867 0.85334,-1.2667 1.12001,-2.04 0.24001,-0.7734 0.36,-1.6 0.36,-2.48 l 0,-10.92 c -1.11999,-0.2134 -2.25333,-0.5334 -3.4,-0.96 -1.14666,-0.4267 -2.22667,-0.9734 -3.24001,-1.64 -0.69332,-0.48 -1.34665,-0.9733 -1.96,-1.48 -0.61331,-0.48 -1.19998,-0.9467 -1.75999,-1.4 -0.55998,1.04001 -0.83998,2.24 -0.84001,3.60001 l 0,12.8 m 5.6,-19.2 c -0.93332,0 -1.77332,0.1867 -2.52,0.56 l 2.6,1.96 c 0.82668,0.61329 1.70668,1.10669 2.64,1.48 0.90667,0.4 1.82667,0.7067 2.76,0.92 -0.23999,-1.4133 -0.82666,-2.5867 -1.76,-3.52 -0.95999,-0.9333 -2.19999,-1.4 -3.72,-1.4',
	],
	'king': [
		'm 21.873333,50.875025 c -10e-6,0 0.10666,0 0.32,0 0.23999,0 0.54666,0 0.91999,0 0.37334,0 0.8,0 1.28001,0 0.47999,0 0.97332,0 1.48,0 l 4,0 0,3.2 -2.4,0 0,12.04 7.84,-12.04 -2.24,0 0,-3.2 8,0 0,3.2 -2.08,0 -6.6,10.12 6.39999,15.48 2.28001,0 0,3.2 -8,0 0,-3.2 2.27999,0 -5.07999,-12.2 -2.8,4.32 0,7.88 2.4,0 0,3.2 -8,0 0,-3.2 2.4,0 0,-25.6 -2.4,0 0,-1.6 c -10e-6,-0.4 -0.0133,-0.76 -0.04,-1.08 -10e-6,-0.3466 0.0133,-0.52 0.04,-0.52',
		'm 225.54334,286.62502 c 1e-5,0 -0.10666,0 -0.32,0 -0.23999,0 -0.54666,0 -0.91999,0 -0.37334,0 -0.8,0 -1.28001,0 -0.47999,0 -0.97332,0 -1.48,0 l -4,0 0,-3.2 2.4,0 0,-12.04 -7.84,12.04 2.24,0 0,3.2 -8,0 0,-3.2 2.08,0 6.6,-10.12 -6.39999,-15.48 -2.28001,0 0,-3.2 8,0 0,3.2 -2.27999,0 5.07999,12.2 2.8,-4.32 0,-7.88 -2.4,0 0,-3.2 8,0 0,3.2 -2.4,0 0,25.6 2.4,0 0,1.60001 c 1e-5,0.39999 0.0133,0.76 0.04,1.07999 1e-5,0.34661 -0.0133,0.52 -0.04,0.52',
	],
	'ace': [
		'm 23.013333,79.675025 1.24,0 5.2,-28.8 4,0 5.2,28.8 2.4,0 0,3.2 -8,0 0,-3.2 2.4,0 -1.16,-6.4 -5.68,0 -1.16,6.4 2.4,0 0,3.2 -8,0 c 0.0267,-0.58667 0.04,-1.12 0.04,-1.6 0,-0.4 0,-0.76 0,-1.08 0,-0.32 -0.0133,-0.49333 -0.04,-0.52 l 1.16,0 m 6.2,-9.6 c -10e-6,0.0267 0.22666,0.04 0.68,0.04 0.47999,1e-5 0.99999,1e-5 1.56,0 0.66666,1e-5 1.41332,-0.0133 2.24,-0.04 l -2.24,-12.4 -1.12,6.16 c -0.13334,0.77335 -0.26667,1.53335 -0.4,2.28 -0.13334,0.74668 -0.25334,1.41334 -0.36,2 -0.10667,0.56001 -0.20001,1.02668 -0.28,1.4 -0.0533,0.37334 -0.08,0.56001 -0.08,0.56',
		'm 224.40334,257.82503 -1.24,0 -5.2,28.8 -4,0 -5.2,-28.8 -2.4,0 0,-3.2 8,0 0,3.2 -2.4,0 1.16,6.4 5.68,0 1.16,-6.4 -2.4,0 0,-3.2 8,0 c -0.0267,0.58667 -0.04,1.12 -0.04,1.6 0,0.4 0,0.76 0,1.08 0,0.32 0.0133,0.49333 0.04,0.52 l -1.16,0 m -6.2,9.6 c 1e-5,-0.0267 -0.22666,-0.04 -0.68,-0.04 -0.47999,-10e-6 -0.99999,-10e-6 -1.56,0 -0.66666,-10e-6 -1.41332,0.0133 -2.24,0.04 l 2.24,12.4 1.12,-6.16 c 0.13334,-0.77335 0.26667,-1.53335 0.4,-2.28 0.13334,-0.74668 0.25334,-1.41334 0.36,-2 0.10667,-0.56001 0.20001,-1.02668 0.28,-1.4 0.0533,-0.37334 0.08,-0.56001 0.08,-0.56',
	],
	'joker': [
		'm 28.593333,129.30378 0,7.79999 3.016,0 c 0.519994,-0.0173 1.005323,-0.12999 1.456,-0.338 0.450658,-0.20799 0.840658,-0.48532 1.17,-0.832 0.346658,-0.36399 0.615323,-0.77999 0.806,-1.248 0.207987,-0.46799 0.311987,-0.96199 0.312,-1.482 -1.3e-5,-0.53732 -0.104013,-1.03998 -0.312,-1.50799 -0.208013,-0.48533 -0.485342,-0.90132 -0.832,-1.248 -0.346677,-0.34665 -0.762677,-0.62399 -1.248,-0.832 -0.468006,-0.20799 -0.970677,-0.31199 -1.508,-0.312 l -2.86,0 m 1.638,18.71999 c -0.450671,0 -0.979335,0 -1.586,0 -0.606671,0 -1.187335,0 -1.742,0 -0.537335,0 -0.996671,0 -1.378,0 -0.381335,0 -0.572,0 -0.572,0 l 0,-2.08 1.56,0 0,-16.63999 -1.56,0 0,-2.08 6.5,0 c 0.831994,2e-5 1.603323,0.15602 2.314,0.468 0.727987,0.31202 1.360658,0.74535 1.898,1.3 0.554652,0.53735 0.987987,1.17001 1.3,1.898 0.311987,0.71067 0.467987,1.48201 0.468,2.31399 -1.3e-5,1.04001 -0.251348,2.00201 -0.754,2.886 -0.485348,0.86668 -1.135342,1.56867 -1.95,2.106 0.658658,0.50267 1.100652,1.13534 1.326,1.898 0.225323,0.74534 0.337987,1.56867 0.338,2.47 -1.3e-5,0.29467 -1.3e-5,0.60667 0,0.936 -1.3e-5,0.32934 0.0086,0.65 0.026,0.962 0.01735,0.29466 0.052,0.56334 0.104,0.806 0.052,0.24266 0.121323,0.40734 0.208,0.494 0.03464,0.052 0.121323,0.0867 0.26,0.104 0.138652,0.0174 0.277323,0.0346 0.416,0.052 0.173323,0.0174 0.355323,0.026 0.546,0.026 l 0,2.08 -1.898,0 c -0.468013,0 -0.823342,-0.19067 -1.066,-0.572 -0.242677,-0.39867 -0.416013,-0.884 -0.52,-1.456 -0.104013,-0.572 -0.156013,-1.17 -0.156,-1.794 -1.3e-5,-0.624 -1.3e-5,-1.17 0,-1.638 -1.3e-5,-0.45066 -0.06065,-0.87533 -0.182,-1.274 -0.104013,-0.41599 -0.268677,-0.77133 -0.494,-1.066 -0.225342,-0.31199 -0.511342,-0.55466 -0.858,-0.728 -0.346677,-0.19066 -0.745342,-0.29466 -1.196,-0.312 l -2.99,0 0,6.76 1.69,0 -0.052,2.08 m 7.461997,-84.24 c -1.3e-5,0.866671 -0.164677,1.681335 -0.493993,2.444 -0.329349,0.745336 -0.780013,1.404 -1.352007,1.976 -0.554677,0.554665 -1.213342,0.996665 -1.975993,1.326 -0.762678,0.329329 -1.568678,0.494 -2.418007,0.494 -0.866671,0 -1.681335,-0.164671 -2.444,-0.494 -0.745335,-0.329335 -1.404,-0.771335 -1.976,-1.326 -0.554664,-0.572 -0.996664,-1.230664 -1.325993,-1.976 -0.329336,-0.762664 -0.494007,-1.577329 -0.494,-2.444 l 0,-8.32 c -7e-6,-0.849318 0.164664,-1.655318 0.494,-2.417995 0.329329,-0.762652 0.771329,-1.421316 1.325993,-1.976 0.572,-0.571981 1.230665,-1.022652 1.976,-1.352 0.762665,-0.329316 1.577329,-0.493981 2.444,-0.494 0.849329,1.9e-5 1.655329,0.164684 2.418007,0.494 0.762651,0.329348 1.421316,0.780019 1.975993,1.352 0.571994,0.554684 1.022658,1.213348 1.352007,1.976 0.329316,0.762677 0.49398,1.568677 0.493993,2.417995 l 0,8.32 m -2.079993,-8.32 c -1.3e-5,-0.571982 -0.112684,-1.109318 -0.338007,-1.611995 -0.208006,-0.502652 -0.502671,-0.944652 -0.883993,-1.326 -0.381349,-0.381316 -0.823349,-0.675987 -1.326007,-0.884 -0.502671,-0.225316 -1.040006,-0.337987 -1.612,-0.338 -0.572006,1.3e-5 -1.109335,0.112684 -1.611993,0.338 -0.502678,0.208013 -0.944678,0.502684 -1.326007,0.884 -0.381335,0.381348 -0.684664,0.823348 -0.91,1.326 -0.208,0.502677 -0.312,1.040013 -0.312,1.611995 l 0,8.32 c 0,0.572 0.104,1.109336 0.312,1.612 0.225336,0.502671 0.528665,0.944664 0.91,1.326 0.381329,0.381335 0.823329,0.684665 1.326007,0.91 0.502658,0.208 1.039987,0.312 1.611993,0.312 0.571994,0 1.109329,-0.104 1.612,-0.312 0.502658,-0.225335 0.944658,-0.528664 1.326007,-0.91 0.381322,-0.381336 0.675987,-0.823329 0.883993,-1.326 0.225323,-0.502664 0.337994,-1.04 0.338007,-1.612 l 0,-8.32 m -10.387,19.760007 c -7e-6,1.9e-5 0.06933,1.9e-5 0.208,0 0.155993,1.9e-5 0.355329,1.9e-5 0.597993,0 0.242671,1.9e-5 0.52,1.9e-5 0.832,0 0.312,1.9e-5 0.632665,1.9e-5 0.962007,0 l 2.6,0 0,2.079999 -1.560007,0 0,7.825994 5.096007,-7.825994 -1.456007,0 0,-2.079999 5.2,0 0,2.079999 -1.351993,0 -4.290007,6.577994 4.16,10.062 1.482,0 0,2.08 -5.2,0 0,-2.08 1.482,0 -3.302,-7.93 -1.82,2.808 0,5.122 1.560007,0 0,2.08 -5.2,0 0,-2.08 1.559993,0 0,-16.639994 -1.559993,0 0,-1.039999 c -7e-6,-0.259981 -0.0086,-0.493981 -0.026,-0.702001 0,-0.225316 0.0086,-0.33798 0.026,-0.338 m 5.966996,-52.000001 6.5,0 0,2.08 -2.21,0 0,13.597997 c -1.3e-5,0.710671 -0.138677,1.378 -0.416,2.002 -0.260013,0.624 -0.624013,1.17 -1.092,1.638 -0.468006,0.450664 -1.014006,0.814664 -1.638,1.092 -0.624006,0.26 -1.291342,0.39 -2.002,0.39 -0.710671,0 -1.378006,-0.13 -2.002,-0.39 -0.624006,-0.277336 -1.17,-0.641336 -1.638,-1.092 -0.450671,-0.468 -0.814671,-1.014 -1.092,-1.638 -0.26,-0.624 -0.39,-1.291329 -0.39,-2.002 l 0,-1.352 2.08,0 0,1.352 c 0,0.416 0.078,0.814671 0.234,1.196 0.155994,0.364 0.372665,0.684664 0.65,0.962 0.277329,0.277335 0.597994,0.494 0.962,0.65 0.381329,0.156 0.779994,0.234 1.196,0.234 0.415994,0 0.805994,-0.078 1.17,-0.234 0.381323,-0.156 0.710658,-0.372665 0.988,-0.65 0.277323,-0.277336 0.493994,-0.598 0.65,-0.962 0.173323,-0.381329 0.259994,-0.78 0.26,-1.196 l 0,-13.597997 -2.21,0 0,-2.08 m 6.5,78.000005 0,4.68 -2.08,0 0,-2.6 -6.76,0 0,7.27999 3.38,0 0,-1.3 2.08,0 0,4.68 -2.08,0 0,-1.3 -3.38,0 0,7.28 6.76,0 0,-2.6 2.08,0 0,4.68 -12.48,0 0,-2.08 1.56,0 0,-16.63999 -1.56,0 0,-2.08 12.48,0',
		'm 218.82335,208.19628 0,-7.79999 -3.016,0 c -0.51999,0.0173 -1.00532,0.12999 -1.456,0.338 -0.45065,0.20799 -0.84065,0.48532 -1.17,0.832 -0.34665,0.36399 -0.61532,0.77998 -0.806,1.248 -0.20798,0.46798 -0.31198,0.96198 -0.312,1.482 2e-5,0.53731 0.10402,1.03998 0.312,1.50799 0.20802,0.48532 0.48535,0.90132 0.832,1.248 0.34668,0.34665 0.76268,0.62399 1.248,0.832 0.46801,0.20799 0.97068,0.31199 1.508,0.312 l 2.86,0 m -1.638,-18.71999 c 0.45067,0 0.97934,0 1.586,0 0.60667,0 1.18734,0 1.742,0 0.53734,0 0.99667,0 1.378,0 0.38134,0 0.572,0 0.572,0 l 0,2.08 -1.56,0 0,16.63999 1.56,0 0,2.08 -6.5,0 c -0.83199,-2e-5 -1.60332,-0.15602 -2.314,-0.468 -0.72798,-0.31202 -1.36065,-0.74535 -1.898,-1.3 -0.55465,-0.53735 -0.98798,-1.17001 -1.3,-1.898 -0.31198,-0.71068 -0.46798,-1.48201 -0.468,-2.31399 2e-5,-1.04002 0.25135,-2.00202 0.754,-2.886 0.48535,-0.86668 1.13535,-1.56867 1.95,-2.106 -0.65865,-0.50267 -1.10065,-1.13535 -1.326,-1.898 -0.22532,-0.74534 -0.33798,-1.56867 -0.338,-2.47 2e-5,-0.29467 2e-5,-0.60667 0,-0.936 2e-5,-0.32934 -0.009,-0.65 -0.026,-0.962 -0.0174,-0.29467 -0.052,-0.56334 -0.104,-0.806 -0.052,-0.24267 -0.12132,-0.40734 -0.208,-0.494 -0.0346,-0.052 -0.12132,-0.0867 -0.26,-0.104 -0.13865,-0.0174 -0.27732,-0.0346 -0.416,-0.052 -0.17332,-0.0174 -0.35532,-0.026 -0.546,-0.026 l 0,-2.08 1.898,0 c 0.46802,0 0.82335,0.19067 1.066,0.572 0.24268,0.39867 0.41602,0.884 0.52,1.456 0.10402,0.572 0.15602,1.17 0.156,1.794 2e-5,0.624 2e-5,1.17 0,1.638 2e-5,0.45066 0.0606,0.87533 0.182,1.274 0.10402,0.41599 0.26868,0.77133 0.494,1.066 0.22535,0.31199 0.51135,0.55466 0.858,0.728 0.34668,0.19065 0.74535,0.29465 1.196,0.312 l 2.99,0 0,-6.76 -1.69,0 0.052,-2.08 m -7.46199,84.24 c 10e-6,-0.86667 0.16467,-1.68134 0.49399,-2.444 0.32935,-0.74534 0.78001,-1.404 1.35201,-1.976 0.55467,-0.55467 1.21334,-0.99667 1.97599,-1.326 0.76268,-0.32933 1.56868,-0.494 2.41801,-0.494 0.86667,0 1.68133,0.16467 2.444,0.494 0.74533,0.32933 1.404,0.77133 1.976,1.326 0.55466,0.572 0.99666,1.23066 1.32599,1.976 0.32934,0.76266 0.49401,1.57733 0.494,2.444 l 0,8.32 c 1e-5,0.84931 -0.16466,1.65531 -0.494,2.41799 -0.32933,0.76265 -0.77133,1.42132 -1.32599,1.976 -0.572,0.57198 -1.23067,1.02265 -1.976,1.352 -0.76267,0.32932 -1.57733,0.49398 -2.444,0.494 -0.84933,-2e-5 -1.65533,-0.16468 -2.41801,-0.494 -0.76265,-0.32935 -1.42132,-0.78002 -1.97599,-1.352 -0.572,-0.55468 -1.02266,-1.21335 -1.35201,-1.976 -0.32932,-0.76268 -0.49398,-1.56868 -0.49399,-2.41799 l 0,-8.32 m 2.07999,8.32 c 1e-5,0.57198 0.11268,1.10931 0.33801,1.61199 0.208,0.50265 0.50267,0.94465 0.88399,1.326 0.38135,0.38132 0.82335,0.67599 1.32601,0.884 0.50267,0.22532 1.04,0.33799 1.612,0.338 0.572,-10e-6 1.10933,-0.11268 1.61199,-0.338 0.50268,-0.20801 0.94468,-0.50268 1.32601,-0.884 0.38133,-0.38135 0.68466,-0.82335 0.91,-1.326 0.208,-0.50268 0.312,-1.04001 0.312,-1.61199 l 0,-8.32 c 0,-0.572 -0.104,-1.10934 -0.312,-1.612 -0.22534,-0.50267 -0.52867,-0.94467 -0.91,-1.326 -0.38133,-0.38134 -0.82333,-0.68467 -1.32601,-0.91 -0.50266,-0.208 -1.03999,-0.312 -1.61199,-0.312 -0.572,0 -1.10933,0.104 -1.612,0.312 -0.50266,0.22533 -0.94466,0.52866 -1.32601,0.91 -0.38132,0.38133 -0.67599,0.82333 -0.88399,1.326 -0.22533,0.50266 -0.338,1.04 -0.33801,1.612 l 0,8.32 m 10.387,-19.76001 c 1e-5,-2e-5 -0.0693,-2e-5 -0.208,0 -0.15599,-2e-5 -0.35533,-2e-5 -0.59799,0 -0.24267,-2e-5 -0.52,-2e-5 -0.832,0 -0.312,-2e-5 -0.63267,-2e-5 -0.96201,0 l -2.6,0 0,-2.08 1.56001,0 0,-7.82599 -5.09601,7.82599 1.45601,0 0,2.08 -5.2,0 0,-2.08 1.35199,0 4.29001,-6.57799 -4.16,-10.062 -1.482,0 0,-2.08 5.2,0 0,2.08 -1.482,0 3.302,7.93 1.82,-2.808 0,-5.122 -1.56001,0 0,-2.08 5.2,0 0,2.08 -1.55999,0 0,16.63999 1.55999,0 0,1.04 c 1e-5,0.25998 0.009,0.49398 0.026,0.702 0,0.22532 -0.009,0.33798 -0.026,0.338 m -5.967,52 -6.5,0 0,-2.08 2.21,0 0,-13.59799 c 2e-5,-0.71068 0.13868,-1.378 0.416,-2.002 0.26002,-0.624 0.62402,-1.17 1.092,-1.638 0.46801,-0.45067 1.01401,-0.81467 1.638,-1.092 0.62401,-0.26 1.29135,-0.39 2.002,-0.39 0.71067,0 1.37801,0.13 2.002,0.39 0.62401,0.27733 1.17,0.64133 1.638,1.092 0.45067,0.468 0.81467,1.014 1.092,1.638 0.26,0.624 0.39,1.29132 0.39,2.002 l 0,1.352 -2.08,0 0,-1.352 c 0,-0.416 -0.078,-0.81468 -0.234,-1.196 -0.15599,-0.364 -0.37266,-0.68467 -0.65,-0.962 -0.27733,-0.27734 -0.59799,-0.494 -0.962,-0.65 -0.38133,-0.156 -0.77999,-0.234 -1.196,-0.234 -0.41599,0 -0.80599,0.078 -1.17,0.234 -0.38132,0.156 -0.71065,0.37266 -0.988,0.65 -0.27732,0.27733 -0.49399,0.598 -0.65,0.962 -0.17332,0.38132 -0.25999,0.78 -0.26,1.196 l 0,13.59799 2.21,0 0,2.08 m -6.5,-78 0,-4.68 2.08,0 0,2.6 6.76,0 0,-7.27999 -3.38,0 0,1.3 -2.08,0 0,-4.68 2.08,0 0,1.3 3.38,0 0,-7.28 -6.76,0 0,2.6 -2.08,0 0,-4.68 12.48,0 0,2.08 -1.56,0 0,16.63999 1.56,0 0,2.08 -12.48,0',
	],
}

defs = [
	# texture octaves freq blur
	['textureGrassBig', 'texture', 2, 0.07, 2.5],
	['textureGrassSmall', 'texture', 4, 0.5, 1.0],
	['textureLand', 'texture', 4, 0.5, 0.8],
	['textureForestBig', 'texture', 2, 0.3, 2.0],
	['textureForestSmall', 'texture', 4, 0.35, 1.0],
	# roughen turbulence octaves freq scale
	['roughenShoreline', 'roughen', 'turbulence', 4, 0.05, 6.6],
	# roughen noise octaves freq1 freq2 scale
	['roughenForest', 'roughen', 'noise', 4, 0.15, 0.15, 6.6],
	# filter blur x y width height stddev
	['blurSuitRankGlow', 'filter', 'blur', -0.029024704, -0.020458297, 1.0580494, 1.0409166, 2.515067],
	['blurWaterDeep', 'filter', 'blur', -0.056690667, -0.041619708, 1.1133813, 1.0832394, 6.9191359],
	['blurWaterShallow', 'filter', 'blur', -0.055818416, -0.042102724, 1.1116368, 1.0842054, 6.5615005],
	['blurWaterHilight', 'filter', 'blur', -0.071178261, -0.051856193, 1.1423565, 1.1037124, 6.8575319],
	['blurGrass', 'filter', 'blur', -0.032100266, -0.019164084, 1.0642005, 1.0383282, 2.3862132],
	['blurForestShadow', 'filter', 'blur', -0.033575919, -0.018674107, 1.0671518, 1.0373482, 2.1997847],
	['blurFlowerInner', 'filter', 'blur', -0.42, -0.42, 1.84, 1.84, 1.6055398],
	['blurFlowerMiddle', 'filter', 'blur', -0.24, -0.24, 1.48, 1.48, 1.9337049],
	# gradient stops [<stop1>, ...]
	['gradientStopsFish', 'gradient', 'stops', [[0, 'ff5555', 1], [1, 'ffffff', 1]]],
	['gradientStopsCoconut', 'gradient', 'stops', [[0, 'ffffff', 1], [1, 'c8c8c8', 0]]],
	['gradientStopsFlower', 'gradient', 'stops', [[0, 'b16dff', 1], [1, 'e7d2ff', 1]]],
	['gradientStopsJellyfish', 'gradient', 'stops', [[0, '4f97ff', 1], [1, 'cfe3ff', 1]]],
	['gradientStopsShip', 'gradient', 'stops', [[0, 'b67800', 1], [1, 'd28b00', 1]]],
	# gradient linear xlink, x1, y1, x2, y2, transform
	['gradientFish', 'gradient', 'linear', 'gradientStopsFish', 178.78909, -114.78283, 180.4073, -103.78283, 'translate(-178.76256,1.0606602)'],
	['gradientJellyfishTentacle1a', 'gradient', 'linear', 'gradientStopsJellyfish', 118.02403, -110.82753, 121.75314, -96.14003, 'translate(-120,0)'],
	['gradientJellyfishTentacle1b', 'gradient', 'linear', 'gradientStopsJellyfish', 118.02403, -110.82753, 121.75314, -96.14003, 'translate(-120,0)'],
	['gradientJellyfishTentacle2', 'gradient', 'linear', 'gradientStopsJellyfish', 118.21818, -115.78261, 121.69827, -97.813858, 'translate(-120,0)'],
	['gradientJellyfishTentacle3', 'gradient', 'linear', 'gradientStopsJellyfish', 123.33537, -114.61019, 116.6786, -98.453941, 'translate(-120,0)'],
	['gradientShip', 'gradient', 'linear', 'gradientStopsShip', 196.43291, 221.71527, 203.66325, 204.27777, 'matrix(0.37654483,0.9263984,-0.9263984,0.37654483,355.66788,-318.43897)'],
	# gradient radial xlink, cx, cy, fx, fy, r, transform
	['gradientCoconut', 'gradient', 'radial', 'gradientStopsCoconut', 1.9440963, -60.612652, 1.9440963, -60.612652, 6.7232941, 'matrix(1.691364,-0.31394812,0.29762395,1.603419,17.826033,-7.042221)'],
	['gradientFlower', 'gradient', 'radial', 'gradientStopsFlower', 60.884877, -69.65275, 60.884877, -69.65275, 15.83531, 'matrix(0.8413905,0,0,0.87120012,-50.722984,-48.679159)'],
	['gradientJellyfish', 'gradient', 'radial', 'gradientStopsJellyfish', 120.45341, -112.9439, 120.45341, -112.9439, 10.580511, 'matrix(1.1662998,0.0435575,-0.04526952,1.2121402,-145.14628,17.080499)'],
	# No longer used:
	#['blurRoutesHilight', 'filter', 'blur', -0.042, -0.0315, 1.084, 1.063, 4.4296875],
]

def error(msg):
	print '\nERROR: %s\n' % msg
	sys.exit(0)

class MTGen(object):
	def __init__(self, gen_png):
		self.svg = SVGGen()
		
		self.gen_png = gen_png
		
		self.curr_file = 0
		self.curr_card = 0
		self.seed = 0

		self.draw_resource = {
			'banana': self.draw_banana,
			'coconut': self.draw_coconut,
			'fish': self.draw_fish,
			'flower': self.draw_flower,
			'jellyfish': self.draw_jellyfish,
			'pineapple': self.draw_pineapple,
			'squid': self.draw_squid,
			'turtle': self.draw_turtle,
		}

		self.draw_extra = {
			'ship': self.draw_ship,
		}
			
	def write_defs(self):
		self.svg.write('<defs>\n')
		self.svg.indent()

		for d in defs:
			name = d[0]
			type = d[1]
			subtype = d[2]
			if type == 'filter':
				if subtype == 'blur':
					x = d[3]
					y = d[4]
					width = d[5]
					height = d[6]
					stddev = d[7]
					self.svg.write('<filter inkscape:collect="always" inkscape:label="%s" style="color-interpolation-filters:sRGB" id="%s" x="%f" y="%f" width="%f" height="%f">\n' % (name, name, x, y, width, height))
					self.svg.indent()
					self.svg.write('<feGaussianBlur inkscape:collect="always" stdDeviation="%f" />\n' % stddev)
					self.svg.outdent()
					self.svg.write('</filter>\n')
			if type == 'roughen':
				self.svg.write('<filter inkscape:label="%s" style="color-interpolation-filters:sRGB" id="%s">\n' % (name, name))
				self.svg.indent()
				if subtype == 'turbulence':
					octaves = d[3]
					freq = d[4]
					scale = d[5]
					self.svg.write('<feTurbulence numOctaves="%d" seed="%d" type="turbulence" baseFrequency="%f" result="turb" />\n' % (octaves, self.seed, freq))
				if subtype == 'noise':
					octaves = d[3]
					freq1 = d[4]
					freq2 = d[5]
					scale = d[6]
					self.svg.write('<feTurbulence numOctaves="%d" seed="%d" type="fractalNoise" baseFrequency="%f %f" result="turb" />\n' % (octaves, self.seed, freq1, freq2))
				self.svg.write('<feDisplacementMap scale="%f" yChannelSelector="G" xChannelSelector="R" in="SourceGraphic" in2="turb" />\n' % scale)
				self.svg.outdent()
				self.svg.write('</filter>\n')
			if type == 'gradient':
				if subtype == 'stops':
					stops = d[3]
					self.svg.write('<linearGradient id="%s" inkscape:collect="always">\n' % name)
					self.svg.indent()
					for stop in stops:
						self.svg.write('<stop offset="%f" style="stop-color:#%s;stop-opacity:%f" />\n' % (stop[0], stop[1], stop[2]))
					self.svg.outdent()
					self.svg.write('</linearGradient>\n')
				if subtype == 'linear':
					xlink = d[3]
					x1 = d[4]
					y1 = d[5]
					x2 = d[6]
					y2 = d[7]
					transform = d[8]
					tag = '<linearGradient id="%s" xlink:href="#%s" x1="%f" y1="%f" x2="%f" y2="%f" ' % (name, xlink, x1, y1, x2, y2)
					if transform != '':
						tag += 'gradientTransform="%s" ' % transform
					tag += 'gradientUnits="userSpaceOnUse" inkscape:collect="always" />\n'
					self.svg.write(tag)
				if subtype == 'radial':
					xlink = d[3]
					cx = d[4]
					cy = d[5]
					fx = d[6]
					fy = d[7]
					r = d[8]
					transform = d[9]
					self.svg.write('<radialGradient id="%s" xlink:href="#%s" cx="%f" cy="%f" fx="%f" fy="%f" r="%f" gradientUnits="userSpaceOnUse" gradientTransform="%s" inkscape:collect="always" />\n' % (name, xlink, cx, cy, fx, fy, r, transform))
			if type == 'texture':
				octaves = d[2]
				freq = d[3]
				blur = d[4]
				self.svg.write('<filter inkscape:label="%s" style="color-interpolation-filters:sRGB" id="%s">\n' % (name, name))
				self.svg.indent()
				self.svg.write('<feTurbulence numOctaves="%d" seed="%d" type="turbulence" baseFrequency="%f" result="result1" />\n' % (octaves, self.seed, freq))
				self.svg.write('<feColorMatrix result="result0" in="SourceGraphic" type="luminanceToAlpha" />\n')
				self.svg.write('<feColorMatrix result="result2" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.4 0 " />\n')
				self.svg.write('<feComposite in="result2" operator="over" in2="result1" />\n')
				self.svg.write('<feColorMatrix result="result91" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 10 -4 " />\n')
				self.svg.write('<feComposite operator="out" in="SourceGraphic" in2="result91" />\n')
				self.svg.write('<feGaussianBlur stdDeviation="%f" />\n' % blur)
				self.svg.write('<feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 " />\n')
				self.svg.outdent()
				self.svg.write('</filter>\n')

		self.svg.outdent()
		self.svg.write('</defs>\n')
		self.svg.write('\n')

	def draw_card(self, data):
		filename = data[0]
		borders = data[1]
		shallow_water_path = data[2]
		deep_water_path = data[3]
		shoreline_path = data[4]
		grass_path = data[5]
		forest_path = data[6]
		routes_path = data[7]
		textpaths = data[8]
		resources = data[9]
		extras = data[10]

		(suit, rank) = filename.split('-')
		if suit == 'joker':
			suit = rank
			rank = 'joker'
		encircle = False
		if rank == 'ace' or rank == '6' or rank == 'jack' or rank == 'queen' or rank == 'king':
			encircle = True
			
		self.write_defs()
		self.svg.write_named_view()
		
		self.draw_water_layer()		
		self.draw_shallow_water_layer(shallow_water_path)
		self.draw_deep_water_layer(deep_water_path)
		self.draw_shoreline_layers(shoreline_path)
		self.draw_grass_layers(grass_path)
		self.draw_forest_layers(forest_path)
		self.draw_routes_layers(routes_path)
		self.draw_labels_layer(textpaths)
		self.draw_resources_layer(resources, encircle)
		self.draw_extras(extras)
		self.draw_suit_rank_layers(suit, rank)
		
		self.draw_guides(borders)
		self.draw_border_layers()

	def draw_water_layer(self):
		self.svg.start_layer('water_layer', 'Water')
		style = 'fill:#b9deff;fill-opacity:1;stroke:none'
		self.svg.write('<rect id="water" style="%s" x="0" y="0" width="247.5" height="337.5" />\n' % style)
		self.svg.end_layer()

	def draw_shallow_water_layer(self, path):
		self.svg.start_layer('water_shallow_layer', 'Water Shallow')
		filter = 'blurWaterShallow'
		style = 'fill:#9bd1ff;fill-opacity:0.70;fill-rule:evenodd;stroke:none;filter:url(#%s)' % filter
		self.svg.write_path(style, path)
		self.svg.end_layer()

	def draw_deep_water_layer(self, path):
		self.svg.start_layer('water_deep_layer', 'Water Deep')
		filter = 'blurWaterDeep'
		style = 'fill:#87c8ff;fill-opacity:0.60;fill-rule:evenodd;stroke:none;filter:url(#%s)' % filter
		self.svg.write_path(style, path)
		self.svg.end_layer()
	
	def draw_shoreline_layers(self, path):
		self.svg.start_layer('water_hilight_layer', 'Water Hilight')
		filter = 'blurWaterHilight'
		style = 'display:inline;fill:#ffffff;fill-opacity:1;stroke:#ffffff;stroke-opacity:1;filter:url(#%s)' % filter
		self.svg.write_clone('shoreline', style)
		self.svg.end_layer()
	
		self.svg.start_layer('land_layer', 'Land')
		style = 'display:inline;fill:#ffddab;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'
		self.svg.write_clone('shoreline', style)
		self.svg.end_layer()
	
		self.svg.start_layer('land_texture_layer', 'Land Texture')
		filter = 'textureLand'
		style = 'display:inline;fill:#ffca7d;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % filter
		self.svg.write_clone('shoreline', style)
		self.svg.end_layer()
	
		self.svg.start_layer('shoreline_layer', 'Shoreline')
		style = 'display:inline;fill:none;fill-opacity:1;stroke:#5f4c14;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'
		self.svg.write_clone('shoreline', style)
		self.svg.end_layer()
	
		self.svg.start_layer('shoreline_master_layer', 'Shoreline Master', hidden=True)
		filter = 'roughenShoreline'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:evenodd;filter:url(#%s);color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % filter
		self.svg.write_path(style, path, id='shoreline')
		self.svg.end_layer()

	def draw_grass_layers(self, path):
		self.svg.start_layer('grass_layer', 'Grass')
		style = 'display:inline;fill:#b4e982;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'
		self.svg.write_clone('grass', style)
		self.svg.end_layer()
	
		self.svg.start_layer('grass_texture1_layer', 'Grass Texture Big')
		filter = 'textureGrassBig'
		style = 'display:inline;fill:#a7e46a;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % filter
		self.svg.write_clone('grass', style)
		self.svg.end_layer()
	
		self.svg.start_layer('grass_texture2_layer', 'Grass Texture Small')
		filter = 'textureGrassSmall'
		style = 'display:inline;fill:#8cdd3d;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % filter
		self.svg.write_clone('grass', style)
		self.svg.end_layer()
	
		self.svg.start_layer('grass_master_layer', 'Grass Master', hidden=True)
		filter = 'blurGrass'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:evenodd;filter:url(#%s);color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % filter
		#style = 'color:#000000;display:inline;overflow:visible;visibility:visible;fill:#b4e982;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;marker:none;filter:url(#%s);enable-background:accumulate' % filter
		self.svg.write_path(style, path, id='grass')
		self.svg.end_layer()

	def draw_forest_layers(self, path):
		outline_filter = 'roughenForest'

		self.svg.start_layer('forest_shadow_layer', 'Forest Shadow')
		self.svg.start_group(style='filter:url(#blurForestShadow)')
		style = 'display:inline;opacity:0.75;fill:#258c1b;fill-opacity:1;filter:url(#%s)' % outline_filter
		self.svg.write_clone('forest', style)
		self.svg.end_group()
		self.svg.end_layer()
		
		self.svg.start_layer('forest_fill_layer', 'Forest Fill')
		style = 'fill:#83d700;fill-opacity:1;stroke:none;stroke-width:1.5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % outline_filter
		self.svg.write_clone('forest', style)
		self.svg.end_layer()
		
		self.svg.start_layer('forest_texture_big_layer', 'Forest Texture Big')
		self.svg.start_group(style='filter:url(#textureForestBig)')
		style = 'fill:#548c00;fill-opacity:1;stroke:none;stroke-width:1.5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % outline_filter
		self.svg.write_clone('forest', style)
		self.svg.end_group()
		self.svg.end_layer()
		
		self.svg.start_layer('forest_texture_small_layer', 'Forest Texture Small')
		self.svg.start_group(style='filter:url(#textureForestSmall)')
		style = 'fill:#78c125;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % outline_filter
		self.svg.write_clone('forest', style)
		self.svg.end_group()
		self.svg.end_layer()
	
		self.svg.start_layer('forest_outline_layer', 'Forest Outline')
		style = 'fill:none;fill-opacity:1;stroke:#006800;stroke-width:1.5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % outline_filter
		self.svg.write_clone('forest', style)
		self.svg.end_layer()

		self.svg.start_layer('forest_master_layer', 'Forest Master', hidden=True)
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, path, id='forest')
		self.svg.end_layer()
	
	def draw_routes_layers(self, path):
		#self.svg.start_layer('routes_hilight_layer', 'Routes Hilight')
		#filter = 'blurRoutesHilight'
		#style = 'display:inline;opacity:0.5;fill:none;stroke:#ffffff;stroke-width:4;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#%s)' % filter
		#self.svg.write_clone('routes', style)
		#self.svg.end_layer()

		#self.svg.start_layer('routes_dots_layer', 'Routes Dots')
		#style = 'display:inline;fill:none;stroke:#000000;stroke-width:2;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:0.1, 5;stroke-dashoffset:0;stroke-opacity:1'
		#self.svg.write_clone('routes', style)
		#self.svg.end_layer()
	
		#self.svg.start_layer('routes_master_layer', 'Routes Master', hidden=True)
		#self.svg.write_path('', path, id='routes')
		#self.svg.end_layer()
	
		self.svg.start_layer('routes_layer', 'Routes')
		style = 'display:inline;fill:none;stroke:#000000;stroke-width:2;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:0.1, 5;stroke-dashoffset:0;stroke-opacity:1'
		self.svg.write_path(style, path)
		self.svg.end_layer()
	
	def normalize_name(self, name):
		norm = name.lower().replace(' ', '_')
		norm = re.sub("[.'-]", '', norm)
		norm = re.sub('â', 'a', norm)
		norm = re.sub('é', 'e', norm)
		if not re.match('^[a-z_]+$', norm):
			error('Invalid id name: %s' % norm)
		return norm

	def draw_labels_layer(self, textpaths):
		self.svg.start_layer('labels_layer', 'Labels')
		for textpath in textpaths:
			text = textpath[0]
			path = textpath[1]
			name = self.normalize_name(text)
			
			self.svg.write('<text xml:space="preserve"><textPath xlink:href="#%s"><tspan\n' % name)
			style = "-inkscape-font-specification:'CCTreasureTroveAged Mod, Normal';font-family:'CCTreasureTroveAged Mod';font-weight:normal;font-style:normal;font-stretch:normal;font-variant:normal;font-size:8.75px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%"
			self.svg.write('style="%s"\n' % style)
			self.svg.write('>%s</tspan></textPath></text>\n' % text)
		self.svg.end_layer()
		
		self.svg.start_layer('labels_guide_layer', 'Labels Guide', hidden=True)
		for textpath in textpaths:
			text = textpath[0]
			path = textpath[1]
			name = self.normalize_name(text)
			style = 'color:#000000;fill:none;stroke:#000000;stroke-width:1;stroke-opacity:1'
			self.svg.write_path(style, path, id=name)
		self.svg.end_layer()

	def draw_resources_layer(self, resources, encircle=False):
		self.svg.start_layer('resources_layer', 'Resources')
		for r in resources:
			type = r[0]
			transform = r[1]
			self.draw_resource[type](id='resource-%s' % type, transform=transform, encircle=encircle)
		self.svg.end_layer()
			
	def draw_extras(self, extras):
		self.svg.start_layer('extras_layer', 'Extras')
		for e in extras:
			type = e[0]
			transform = e[1]
			self.draw_extra[type](id='extra-%s' % type, transform=transform)
		self.svg.end_layer()

	def draw_suit_rank_layers(self, suit, rank):
		white_style = 'fill:#ffffff;fill-opacity:1;stroke:none'
		if suit == 'hearts' or suit == 'diamonds' or suit == 'red':
			color_style = 'fill:#de0000;fill-opacity:1;stroke:none'
		else:
			color_style = 'fill:#000000;fill-opacity:1;stroke:none'

		self.svg.start_layer('suit_rank_glow_layer', 'Suit Rank Glow')
		self.svg.start_group(style='opacity:0.75;filter:url(#blurSuitRankGlow)')
		if rank != 'joker':
			self.svg.write_path(white_style, suit_paths[suit][0])
			self.svg.write_path(white_style, suit_paths[suit][1])
		self.svg.write_path(white_style, rank_paths[rank][0])
		self.svg.write_path(white_style, rank_paths[rank][1])
		self.svg.end_group()
		self.svg.end_layer()

		self.svg.start_layer('suit_rank_layer', 'Suit Rank')
		if rank != 'joker':
			self.svg.write_path(color_style, suit_paths[suit][0])
			self.svg.write_path(color_style, suit_paths[suit][1])
		self.svg.write_path(color_style, rank_paths[rank][0])
		self.svg.write_path(color_style, rank_paths[rank][1])
		self.svg.end_layer()

	def draw_guides(self, guides):
		guide_handler = [
			[self.draw_short_guide, ''],
			[self.draw_long_guide, ''],
			[self.draw_short_guide, 'matrix(-1,0,0,1,247.5,360)'],
			[self.draw_long_guide, 'matrix(1,0,0,-1,-270,337.5)'],
		]

		self.svg.start_layer('guides_layer', 'Guides', hidden=hide_guides)
		self.draw_line_guides()
		for i in xrange(0, 4):
			g = guides[i]
			guide_handler[i][0](i, g, guide_handler[i][1])
		self.svg.end_layer()

	def draw_line_guides(self):
		style = 'fill:none;stroke:#000000;stroke-width:0.9'
		for x in [11.25, 84.375, 123.75, 163.125, 236.25]:
			self.svg.write_path(style, 'm %f,11.25 0,-45' % x)
			self.svg.write_path(style, 'm %f,371.25 0,-45' % x)
		for y in [11.25, 118.125, 168.75, 219.375, 326.25]:
			self.svg.write_path(style, 'm -33.75,%f 45,0' % y)
			self.svg.write_path(style, 'm 236.25,%f 45,0' % y)

	def draw_long_guide(self, id, pattern, transform):
		land_style = 'fill:#ffd291;stroke:#000000;stroke-width:0.9'
		grass_style = 'fill:#b4e982;stroke:#000000;stroke-width:0.9'
		forest_style = 'fill:#5adc4f;stroke:#000000;stroke-width:0.9'
		shallow_water_style = 'fill:#b9deff;stroke:#000000;stroke-width:0.9'
		water_style = 'fill:#9bceff;stroke:#000000;stroke-width:0.9'
		deep_water_style = 'fill:#73baff;stroke:#000000;stroke-width:0.9'

		width = 22.5
		height = 337.5
		x0 = 270 - width

		land1 = 118.125
		land2 = 219.375
		grass1 = 101.25
		grass2 = 213.75
		forest1 = 78.75
		forest2_space = 11.25
		forest2a = 112.5
		forest2b = 61.875
		forest3 = 163.125
		
		shallow_water2 = height - land1
		shallow_water1 = height - land2
		water2 = 168.75
		water1 = 84.375
		deep_water2 = 101.25
		deep_water1 = 50.625
		
		self.svg.start_group(id='guide-long%d-%d' % (id, pattern), transform=transform)

		if pattern == 0:
			self.svg.write_rect(deep_water_style, x0, 0, width, height)

		if pattern == 1:
			self.svg.write_rect(land_style, x0, height - land1, width, land1)
			self.svg.write_rect(grass_style, x0, height - grass1, width, grass1)
			self.svg.write_rect(forest_style, x0, height - forest1, width, forest1)
			self.svg.write_rect(shallow_water_style, x0, 0, width, shallow_water2)
			self.svg.write_rect(water_style, x0, 0, width, water2)
			self.svg.write_rect(deep_water_style, x0, 0, width, deep_water2)
		
		if pattern == 3:
			self.svg.write_rect(land_style, x0, height - land2, width, land2)
			self.svg.write_rect(grass_style, x0, height - grass2, width, grass2)
			forest_offset = height - forest2a
			self.svg.write_rect(forest_style, x0, forest_offset, width, forest2a)
			forest_offset -= forest2_space + forest2b
			self.svg.write_rect(forest_style, x0, forest_offset, width, forest2b)
			self.svg.write_rect(shallow_water_style, x0, 0, width, shallow_water1)
			self.svg.write_rect(water_style, x0, 0, width, water1)
			self.svg.write_rect(deep_water_style, x0, 0, width, deep_water1)
		
		if pattern == 4:
			self.svg.write_rect(land_style, x0, 0, width, land1)
			self.svg.write_rect(grass_style, x0, 0, width, grass1)
			self.svg.write_rect(forest_style, x0, 0, width, forest1)
			self.svg.write_rect(shallow_water_style, x0, height - shallow_water2, width, shallow_water2)
			self.svg.write_rect(water_style, x0, height - water2, width, water2)
			self.svg.write_rect(deep_water_style, x0, height - deep_water2, width, deep_water2)

		if pattern == 6:
			self.svg.write_rect(land_style, x0, 0, width, land2)
			self.svg.write_rect(grass_style, x0, 0, width, grass2)
			forest_offset = 0
			self.svg.write_rect(forest_style, x0, forest_offset, width, forest2a)
			forest_offset += forest2_space + forest2a
			self.svg.write_rect(forest_style, x0, forest_offset, width, forest2b)
			self.svg.write_rect(shallow_water_style, x0, height - shallow_water1, width, shallow_water1)
			self.svg.write_rect(water_style, x0, height - water1, width, water1)
			self.svg.write_rect(deep_water_style, x0, height - deep_water1, width, deep_water1)
		
		if pattern == 7:
			self.svg.write_rect(grass_style, x0, 0, width, height)
			self.svg.write_rect(forest_style, x0, 0, width, forest3)
			self.svg.write_rect(forest_style, x0, height - forest3, width, forest3)

		self.svg.end_group()
	
	def draw_short_guide(self, id, pattern, transform):
		land_style = 'fill:#ffd291;stroke:#000000;stroke-width:0.9'
		grass_style = 'fill:#b4e982;stroke:#000000;stroke-width:0.9'
		forest_style = 'fill:#5adc4f;stroke:#000000;stroke-width:0.9'
		shallow_water_style = 'fill:#b9deff;stroke:#000000;stroke-width:0.9'
		water_style = 'fill:#9bceff;stroke:#000000;stroke-width:0.9'
		deep_water_style = 'fill:#73baff;stroke:#000000;stroke-width:0.9'

		width = 247.5
		height = 22.5
		land1 = 84.375
		land2 = 163.125
		grass1 = 78.75
		grass2 = 146.25
		forest1 = 61.875
		forest2_space = 11.25
		forest2a = 33.75
		forest2b = 33.75
		forest2c = 39.375
		forest3 = 118.125

		shallow_water2 = width - land1
		shallow_water1 = width - land2
		water2 = 123.75
		water1 = 61.875
		deep_water2 = 67.5
		deep_water1 = 33.75

		self.svg.start_group(id='guide-short%d-%d' % (id, pattern), transform=transform)
		
		if pattern == 0:
			self.svg.write_rect(deep_water_style, 0, -height, width, height)

		if pattern == 1:
			self.svg.write_rect(land_style, width - land1, -height, land1, height)
			self.svg.write_rect(grass_style, width - grass1, -height, grass1, height)
			self.svg.write_rect(forest_style, width - forest1, -height, forest1, height)
			self.svg.write_rect(shallow_water_style, 0, -height, shallow_water2, height)
			self.svg.write_rect(water_style, 0, -height, water2, height)
			self.svg.write_rect(deep_water_style, 0, -height, deep_water2, height)

		if pattern == 3:
			self.svg.write_rect(land_style, width - land2, -height, land2, height)
			self.svg.write_rect(grass_style, width - grass2, -height, grass2, height)
			forest_offset = width - forest2a
			self.svg.write_rect(forest_style, forest_offset, -height, forest2a, height)
			forest_offset -= forest2_space + forest2b
			self.svg.write_rect(forest_style, forest_offset, -height, forest2b, height)
			forest_offset -= forest2_space + forest2c
			self.svg.write_rect(forest_style, forest_offset, -height, forest2c, height)
			self.svg.write_rect(shallow_water_style, 0, -height, shallow_water1, height)
			self.svg.write_rect(water_style, 0, -height, water1, height)
			self.svg.write_rect(deep_water_style, 0, -height, deep_water1, height)

		if pattern == 4:
			self.svg.write_rect(land_style, 0, -height, land1, height)
			self.svg.write_rect(grass_style, 0, -height, grass1, height)
			self.svg.write_rect(forest_style, 0, -height, forest1, height)
			self.svg.write_rect(shallow_water_style, width - shallow_water2, -height, shallow_water2, height)
			self.svg.write_rect(water_style, width - water2, -height, water2, height)
			self.svg.write_rect(deep_water_style, width - deep_water2, -height, deep_water2, height)

		if pattern == 6:
			self.svg.write_rect(land_style, 0, -height, land2, height)
			self.svg.write_rect(grass_style, 0, -height, grass2, height)
			forest_offset = 0
			self.svg.write_rect(forest_style, forest_offset, -height, forest2a, height)
			forest_offset += forest2_space + forest2a
			self.svg.write_rect(forest_style, forest_offset, -height, forest2b, height)
			forest_offset += forest2_space + forest2b
			self.svg.write_rect(forest_style, forest_offset, -height, forest2c, height)
			self.svg.write_rect(shallow_water_style, width - shallow_water1, -height, shallow_water1, height)
			self.svg.write_rect(water_style, width - water1, -height, water1, height)
			self.svg.write_rect(deep_water_style, width - deep_water1, -height, deep_water1, height)

		if pattern == 7:
			self.svg.write_rect(grass_style, 0, -height, width, height)
			self.svg.write_rect(forest_style, 0, -height, forest3, height)
			self.svg.write_rect(forest_style, width - forest3, -height, forest3, height)

		self.svg.end_group()

	def draw_border_layers(self):
		style = 'fill:none;stroke:#000000;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:bevel;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'

		self.svg.start_layer('cut_line_layer', 'Cut Line', hidden=hide_guides)
		self.svg.write_rect(style, 11.25, 11.25, 225, 315, radius=17.361111)
		self.svg.end_layer()
	
		self.svg.start_layer('page_border_layer', 'Page Border', hidden=hide_guides)
		self.svg.write_rect(style, 0, 0, 247.5, 337.5)
		self.svg.end_layer()

	# Extras
	
	def draw_ship(self, id='', transform=''):
		self.svg.start_group(id=id, transform=transform)
		
		# Hull
		fill_gradient = 'gradientShip'
		style = 'color:#000000;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.75;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 243.2364,-52.722824 c -3.10208,-2.937202 -8.72518,-3.346714 -12.49116,-3.032742 -2.95307,0.246202 -6.62512,1.070872 -6.62512,1.070872 l -0.0121,3.725952 c 0,0 2.43298,0.582421 6.39007,0.932887 3.66202,0.324334 9.61676,-0.283241 12.73834,-2.696969 z')
		style = 'color:#000000;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.75;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 243.05273,-53.089844 c -0.50461,-0.01007 -0.51271,0.749303 -0.008,0.75 l 2.80546,-0.143551 c 0.50461,0.01007 0.51856,-0.385922 0.0138,-0.386619 z')

		# Masts
		style = 'color:#000000;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#a66e00;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_circle(style, 37.651787, -233.08783, 0.69520611, transform='matrix(0.37654483,0.9263984,-0.9263984,0.37654483,0,0)')
		self.svg.write_circle(style, 39.995537, -238.71283, 0.69520611, transform='matrix(0.37654483,0.9263984,-0.9263984,0.37654483,0,0)')

		# Sails
		style = 'color:#000000;fill:#feffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate'
		self.svg.write_path(style, 'm 230.8139,-58.168744 -0.0696,11.095953 c 0,0 1.11273,-0.901569 1.17305,-2.014949 0.0592,-1.093696 -0.80015,-1.762231 -0.80015,-1.762231 0,0 1.00218,-0.841738 0.9922,-1.921676 -0.0106,-1.140901 -0.9468,-1.722391 -0.9468,-1.722391 0,0 0.80027,-0.5343 0.83406,-1.646805 0.0349,-1.150244 -1.18274,-2.027894 -1.18274,-2.027894 z')
		self.svg.write_path(style, 'm 236.95087,-57.97366 -0.0645,10.282469 c 0,0 1.03677,-0.785137 1.09267,-1.816887 0.0549,-1.013517 -0.74706,-1.683399 -0.74706,-1.683399 0,0 0.85887,-0.76153 0.84962,-1.762298 -0.01,-1.057255 -0.80754,-1.614603 -0.80754,-1.614603 0,0 0.84013,-0.540128 0.87144,-1.571079 0.0324,-1.065902 -1.19455,-1.834218 -1.19455,-1.834218 z')

		# Hatches
		style = 'fill:#000000;stroke:none'
		self.svg.write_path(style, 'm 239.16963,-53.312319 -0.0111,0.999645 1.00145,0.01039 0.009,-1.000718 z')
		style = 'fill:#6a4600;stroke:none'
		self.svg.write_path(style, 'm 233.00825,-53.641515 -0.0131,1.52646 1.52369,0.01423 0.0142,-1.523703 z')

		# Poop deck
		style = 'fill:none;stroke:#000000;stroke-width:0.6;stroke-linecap:butt'
		self.svg.write_path(style, 'm 227.26126,-55.055042 -0.0734,4.514141')
		style = 'fill:#000000;stroke:none'
		self.svg.write_path(style, 'm 223.83649,-54.026834 -0.0111,0.999636 1.00072,0.0086 0.009,-0.998911 z')
		self.svg.write_path(style, 'm 223.85032,-52.581947 -0.0111,0.999637 1.00072,0.0086 0.009,-0.998912 z')
		style = 'fill:none;stroke:#000000;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4'
		self.svg.write_path(style, 'm 227.2539,-51.578825 1.14997,0.173504 -0.0116,1.05042')
		self.svg.write_path(style, 'm 227.25705,-54.143799 1.1481,-0.163064 0.0224,-1.189753')
		
		self.svg.end_group()
	
	# Resources

	def start_resource(self, id, transform, encircle):
		if encircle:
			self.svg.start_group(id=id, transform=transform)
			style = 'opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1'
			self.svg.write_circle(style, 0.060592651, -110.10999, 19)
			self.svg.start_group()
		else:
			self.svg.start_group(id=id, transform=transform)

	def end_resource(self, encircle):
		self.svg.end_group()
		if encircle:
			self.svg.end_group()
	
	def draw_turtle(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		style = 'fill:#acf398;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'
		# Left Rear Flipper
		self.svg.write_path(style, 'm -13.200987,-100.29637 c 0.383554,0.976603 3.233916,-2.12106 6.131249,-1.42702 1.332863,0.31928 0.882122,-3.09205 -0.399356,-3.57815 -2.371651,-0.89961 -6.659154,2.64419 -5.731893,5.00517 z')
		# Right Rear Flipper
		self.svg.write_path(style, 'm 0.519205,-98.947277 c -1.160888,-0.35295 2.907731,-2.472353 3.949394,-1.850123 1.642844,0.981343 2.297204,4.963396 0.372373,6.157721 -0.745218,0.462395 -0.785725,-3.232509 -4.321767,-4.307598 z')
		# Right Front Flipper
		self.svg.write_path(style, 'm 7.618715,-114.43269 c 1.934345,-0.44611 4.329746,-0.0993 5.914203,1.00302 2.013049,1.40054 2.917028,5.29708 1.897177,7.52728 -0.282844,0.61852 -3.514643,-5.32749 -6.150465,-4.42389 -1.839455,0.63059 -2.536626,0.15372 -3.169919,-1.68481 -0.27477,-0.79769 0.686895,-2.232 1.509004,-2.4216 z')
		# Left Front Flipper
		self.svg.write_path(style, 'm -13.605402,-118.51893 c 1.434388,-2.65109 5.159923,-3.50053 7.13722,-3.29637 1.742717,0.17994 3.474416,1.88524 3.953288,3.57051 0.312727,1.10056 -0.218032,2.84568 -1.315095,3.17046 -1.558665,0.46144 -1.358953,-1.39147 -2.644475,-2.38636 -2.809563,-2.17437 -7.671044,-0.06 -7.130938,-1.05824 z')
		# Head
		self.svg.write_path(style, 'm 1.574508,-116.64822 c -0.973346,-1.40454 -0.400278,-3.52894 -0.15625,-5.22027 0.277861,-1.92582 2.436935,-3.39132 3.77573,-3.50612 0.998071,-0.0856 1.511263,0.0552 2.026651,0.91421 0.545706,0.90951 1.17564,3.12771 0.125,4.74448 -0.918312,1.41314 -1.826689,3.21256 -3.442704,3.69086 -0.965518,0.28577 -1.75489,0.20445 -2.328427,-0.62316 z')
		# Tail
		self.svg.write_path(style, 'm -4.37156,-100.05265 c -1.568711,0.833903 -1.519982,4.156989 -0.84283,4.365801 0.803045,0.247633 2.774585,-2.210096 2.390927,-3.815868 -0.20218,-0.846213 -0.779871,-0.958313 -1.548097,-0.549933 z')
		# Shell
		self.svg.write_path(style, 'm -7.212243,-116.3836 c 1.293667,-1.65845 3.629584,-2.72772 5.073491,-2.91682 3.87448,-0.50741 7.329249,0.88026 10.076271,3.65928 1.485686,1.503 2.189594,3.9511 1.909189,6.04576 -0.610927,4.56371 -3.547497,9.21538 -7.477655,11.614241 -1.864758,1.138194 -4.454815,1.340084 -6.523059,0.636396 -2.202234,-0.749276 -4.339874,-2.571424 -5.09117,-4.772977 -1.613498,-4.72808 -1.039758,-10.32676 2.032933,-14.26588 z')

		# Shell pattern
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:none;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.63;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm -2.061438,-117.34644 -0.59283,-1.87446 m 9.785218,5.41 1.414213,-0.83969 m -3.270369,-3.0494 -0.883883,1.45841 m -3.005204,-2.91681 -0.322303,1.63785 m -4.980998,18.116938 -0.637024,1.851254 m 3.244481,-1.320924 0.145526,1.908392 m -5.139468,-3.85294 -1.276269,1.089694 m 0.0491,-3.679294 -1.793656,0.57452 m 1.06066,-3.30874 -1.531171,0.15311 m 1.679379,-3.00521 -1.861517,-0.2134 m 2.347653,-2.30567 -1.656171,-0.60309 m 2.761025,-2.09275 -1.312881,-0.89415 m 3.166356,-0.9571 -1.315562,-1.55438 m 7.32865,17.857125 0.826745,1.744559 m 1.382964,-3.026194 1.087008,1.317787 m 0.636565,-3.615877 1.440561,1.09413 m 0.238817,-3.48062 1.396368,0.61558 m -0.582567,-3.29357 1.567783,0.29327 m -1.419575,-3.1217 1.723572,-0.18483 m -10.817309,9.66873 0.486136,2.607453 m -4.02167,-3.756503 -1.59099,1.28163 m 5.833631,-13.21406 -0.309359,-2.38648 m 4.507806,3.7565 1.856155,-1.59099 m -10.69499,9.8553 -2.740039,-0.13258 m 3.447145,-3.88908 -3.18198,-1.23745 m 4.861359,-3.22617 -2.607456,-1.45841 m 6.452349,12.1534 2.209709,1.45841 m -0.04419,-5.03814 3.049398,1.19324 m -1.635185,-5.34749 2.872622,0.70711 m -9.766913,-0.83968 -0.486137,-2.78425 2.298097,-1.10485 4.021672,1.41421 0.839688,2.65165 -2.298097,1.19325 z m 4.507806,1.28162 0.928077,3.04939 -2.607455,1.28164 m -4.198448,-1.32583 -0.839689,-2.51907 2.298097,-1.76776 m -2.474873,7.95495 -0.574524,-2.34229 1.546796,-1.19324 4.154252,1.19324 0.530329,2.34229 -2.165513,1.19324 z m 3.310975,-14.48201 c -9.036509,1.02413 -9.686118,18.911215 0.316406,18.4082 7.293571,-1.28851 13.245425,-14.43065 4.082031,-17.65234 -1.373439,-0.61154 -2.89993,-0.86992 -4.398437,-0.75586 z')

		# Eyes
		style = 'fill:#000000;fill-opacity:1;stroke:none'
		self.svg.write_ellipse(style, -83.675232, -91.031174, 0.39348665, 0.53721493, transform='matrix(0.71262218,0.70154802,-0.70154802,0.71262218,0,0)')
		self.svg.write_ellipse(style, 0.87644225, -122.84991, 0.39348665, 0.53721493, transform='matrix(0.99895236,0.04576232,-0.04576232,0.99895236,0,0)')

		self.end_resource(encircle)

	def draw_pineapple(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		# Leaf shadow border
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#12d412;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 1.60156,-126.85938 c -0.36816,0.89627 -0.65117,2.26266 -0.81445,3.75586 -0.46343,-1.48903 -1.12834,-2.68315 -1.97656,-3.57617 0.0257,1.23409 0.13016,2.79792 0.26757,4.52344 -0.36941,-0.60113 -0.76709,-1.13198 -1.18945,-1.51953 0.0312,0.52933 0.0693,1.12994 0.125,1.77148 -1.05341,-1.32608 -2.2808,-2.02215 -3.52734,-2.57617 1.20446,1.90706 2.6487,4.21985 3.17578,6.1582 -1.54731,-1.36782 -3.35936,-2.13235 -4.65625,-2.24609 1.88521,1.70135 3.06165,2.62635 4.32031,4.38867 -1.8453,-0.67649 -3.75342,-0.73974 -4.96094,-0.48047 1.98868,0.79386 3.7013,1.85704 5.11719,3.23047 -1.40418,-0.25598 -2.50175,0.17732 -3.66797,0.73242 2.27558,0.24417 3.64128,0.76417 4.93164,1.13868 l 1.01172,-0.96485 c -0.61366,-0.3661 -1.16396,-0.6055 -1.67578,-0.76367 l 1.75195,-1.48242 c -0.46155,-0.38582 -0.96259,-0.68989 -1.47656,-0.95508 l 0.86133,-0.58984 c 0.0651,0.17694 0.12114,0.34941 0.19336,0.52929 l 1.96289,-1.05468 c -0.21445,-0.64444 -0.50995,-1.44777 -0.83984,-2.27735 l 0.69531,-0.27148 c -0.0546,0.29808 -0.10862,0.59614 -0.15235,0.91797 l 0.67969,0.0156 c -0.0948,0.35621 -0.16965,0.72 -0.21093,1.09375 l 0.7207,0.33398 c -0.32118,0.46889 -0.60879,0.93943 -0.81055,1.39844 l 1.16211,0.83789 c -0.22862,0.2522 -0.4414,0.52066 -0.63086,0.80664 l 0.66406,1.41797 c -0.099,0.10935 -0.20151,0.21248 -0.29101,0.3457 L 2.37695,-111 c 1.36745,-0.74524 2.98116,-1.47776 4.98828,-1.81445 -1.40868,-0.55163 -2.65818,-0.8038 -3.6582,-0.46289 1.39038,-1.6397 3.52907,-2.78693 5.02149,-3.85743 -1.45556,-0.27322 -3.21935,0.17176 -4.70118,1.15235 1.14954,-2.04356 3.05591,-4.14017 4.22266,-5.47461 -1.2538,0.14729 -2.71382,1.01308 -3.99219,2.16211 0.57839,-1.83619 1.35069,-3.66217 1.81836,-4.9043 -0.85298,0.63603 -1.63122,1.34347 -2.30078,2.11133 0.10164,-1.29098 0.15025,-2.60136 0.13477,-3.70117 -0.53955,0.80089 -1.04461,1.6363 -1.48828,2.58593 -0.11478,-1.3294 -0.36407,-2.64913 -0.82032,-3.65625 z m -3.08594,8.20313 c 0.13752,0.59339 0.30603,1.2074 0.52149,1.8457 -0.36577,-0.4988 -0.76332,-0.95863 -1.19531,-1.35937 l 0.67382,-0.48633 z')

		# Pineapple body
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#ff8f2c;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.03194177;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm -4.0409905,-110.15662 c -1.9630663,1.6771 -3.0986308,4.69414 -3.3488922,6.67014 -0.478559,3.778564 0.608356,7.258163 2.6043246,8.901699 2.1779383,1.793377 7.602474,1.882838 9.655624,0.163772 1.9490737,-1.631925 3.0591362,-5.225017 3.0175857,-7.890311 -0.04067,-2.62564 -0.8282349,-6.17264 -2.68931,-7.74821 -2.3583189,-1.99653 -7.0124747,-1.99957 -9.2393321,-0.0971 z')

		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.82555348;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 1.03711,-111.63672 a 0.36003601,0.36003601 0 0 0 -0.29688,0.15625 c -0.17914,0.25293 -0.53563,0.59609 -0.95312,0.96875 l -0.51172,-0.39453 -0.55664,0.4082 c -0.19403,-0.21038 -0.36415,-0.41014 -0.47461,-0.58593 a 0.36003601,0.36003601 0 0 0 -0.29883,-0.17188 0.36003601,0.36003601 0 0 0 -0.31054,0.55664 c 0.22989,0.3659 0.58342,0.75431 0.99414,1.1543 -0.33864,0.27226 -0.70227,0.55684 -1.07227,0.84375 l -0.48437,-0.35938 -0.49024,0.37305 c -0.34337,-0.43352 -0.57815,-0.83255 -0.65039,-1.16406 a 0.36003601,0.36003601 0 0 0 -0.36328,-0.28907 0.36003601,0.36003601 0 0 0 -0.33984,0.44141 c 0.1412,0.64805 0.56858,1.27356 1.1621,1.91016 -0.34542,0.26544 -0.68941,0.53081 -1.02148,0.79297 l -0.36719,-0.41993 -0.55859,0.47461 c -0.0923,-0.17283 -0.15548,-0.33548 -0.1875,-0.48242 a 0.36003601,0.36003601 0 0 0 -0.36328,-0.28906 0.36003601,0.36003601 0 0 0 -0.33985,0.44141 c 0.0923,0.42342 0.31578,0.83813 0.62305,1.2539 -0.0324,0.0278 -0.0717,0.0583 -0.10351,0.0859 -0.51144,0.44363 -0.94159,0.85306 -1.26172,1.24414 a 0.36003601,0.36003601 0 0 0 -0.27539,0.38477 c -0.0252,0.0403 -0.0599,0.0811 -0.082,0.12109 a 0.36062818,0.36062818 0 0 0 0.30665,0.53516 c 0.22155,0.46234 0.56751,0.91351 1,1.36523 -0.57868,0.57258 -1.0788,1.15121 -1.42969,1.73828 a 0.36003601,0.36003601 0 0 0 -0.01,0.38477 0.36003601,0.36003601 0 0 0 -0.004,0.398437 c 0.36315,0.577974 0.95687,1.142417 1.64453,1.697266 -0.20539,0.26185 -0.38844,0.51947 -0.53906,0.771484 a 0.36003601,0.36003601 0 1 0 0.61718,0.369141 c 0.13245,-0.221602 0.30088,-0.455361 0.49414,-0.697266 0.54569,0.404892 1.12714,0.803998 1.72461,1.199219 -0.21854,0.231558 -0.41764,0.461408 -0.60351,0.689453 l -0.56641,-0.347656 -0.61719,0.636719 0.61328,0.49414 c -0.0286,0.0452 -0.0669,0.09172 -0.0937,0.136719 a 0.36092156,0.36092156 0 1 0 0.61915,0.371094 c 0.29011,-0.485385 0.73511,-1.0145 1.26953,-1.566406 0.65267,0.428899 1.27104,0.841745 1.8457,1.240234 -0.24665,0.235474 -0.49168,0.470252 -0.66406,0.683594 l -0.57227,-0.320313 -0.53516,0.636719 0.66407,0.533203 0.12695,-0.08984 a 0.36062794,0.36062794 0 0 0 0.64453,0.0293 c 0.12775,-0.230941 0.49685,-0.617037 0.94727,-1.046875 0.001,7.92e-4 0.003,0.0012 0.004,0.002 0.71996,0.530936 1.26746,1.032307 1.47852,1.384766 a 0.36003601,0.36003601 0 0 0 0.56836,0.08984 0.36067455,0.36067455 0 0 0 0.26172,-0.125 c 0.26781,-0.308029 0.9828,-0.823649 1.77734,-1.378907 0.15104,0.184683 0.29364,0.368251 0.41016,0.548829 a 0.36027136,0.36027136 0 1 0 0.60547,-0.390625 c -0.12384,-0.191921 -0.27213,-0.381984 -0.42383,-0.572266 0.18057,-0.125015 0.34008,-0.237 0.52148,-0.363281 0.43315,-0.301528 0.84967,-0.60745 1.24219,-0.91211 a 0.36027058,0.36027058 0 0 0 0.58398,-0.419921 c -0.007,-0.01111 -0.0181,-0.02209 -0.0254,-0.0332 0.4603,-0.397739 0.8375,-0.77751 1.0293,-1.195312 a 0.36003601,0.36003601 0 0 0 -0.35547,-0.513672 0.36003601,0.36003601 0 0 0 -0.29883,0.214844 c -0.0424,0.09231 -0.14445,0.219791 -0.24804,0.345703 l -0.31836,-0.353516 -0.64453,0.462891 c -0.31004,-0.33632 -0.64985,-0.67428 -1.0293,-1.013672 0.56742,-0.460313 1.11551,-0.915948 1.61133,-1.355469 0.40259,0.410701 0.74643,0.810527 0.99218,1.191407 a 0.36003601,0.36003601 0 1 0 0.60352,-0.388672 c -0.27918,-0.432677 -0.64916,-0.866632 -1.07031,-1.302733 0.66119,-0.62058 1.22854,-1.20957 1.53711,-1.74024 a 0.36003601,0.36003601 0 0 0 -0.1211,-0.49218 0.36091907,0.36091907 0 0 0 -0.0488,-0.2168 c -0.2679,-0.44737 -0.80304,-0.93017 -1.44532,-1.45899 0.53255,-0.59317 0.93343,-1.1645 1.09961,-1.73242 a 0.36003601,0.36003601 0 0 0 -0.10937,-0.3789 0.36035275,0.36035275 0 0 0 -0.0215,-0.0801 c -0.26818,-0.64968 -0.89465,-1.16803 -1.63672,-1.67383 0.21146,-0.35161 0.37865,-0.69854 0.44141,-1.04297 a 0.36003601,0.36003601 0 0 0 -0.36523,-0.42969 0.36003601,0.36003601 0 0 0 -0.3418,0.30078 c -0.019,0.1042 -0.0737,0.22936 -0.125,0.35157 L 5,-109.35938 l -0.33594,0.38086 c -0.3496,-0.22254 -0.68554,-0.45668 -1.02734,-0.6875 0.25432,-0.38291 0.44488,-0.76901 0.51758,-1.16796 a 0.36003601,0.36003601 0 0 0 -0.36719,-0.42774 0.36003601,0.36003601 0 0 0 -0.3418,0.29883 c -0.0324,0.17765 -0.11477,0.3739 -0.22265,0.57812 l -0.34571,-0.29296 -0.27929,0.26171 c -0.37858,-0.30704 -0.72391,-0.61885 -0.96875,-0.9414 a 0.36003601,0.36003601 0 0 0 -0.3125,-0.14649 0.36003601,0.36003601 0 0 0 -0.2793,-0.13281 z m 0.10351,0.80469 c 0.39268,0.48991 0.89226,0.93446 1.44727,1.3418 -0.20652,0.23916 -0.43477,0.48302 -0.70312,0.73437 -0.005,0.004 -0.011,0.009 -0.0156,0.0137 l -0.49023,-0.36523 -0.58203,0.4414 c -0.37276,-0.29471 -0.7126,-0.57581 -1.03126,-0.85156 0.56113,-0.46976 1.04422,-0.91403 1.375,-1.31445 z m 2.04688,1.7539 c 0.3945,0.26479 0.79437,0.5219 1.18359,0.76954 0.16465,0.10475 0.31565,0.20673 0.47266,0.31054 -0.21498,0.27706 -0.46846,0.56709 -0.75977,0.8711 l -0.55078,-0.35352 -0.52539,0.49219 c -0.37678,-0.27482 -0.74857,-0.55328 -1.11719,-0.83008 0.15671,-0.13668 0.34146,-0.27642 0.48633,-0.41211 0.3036,-0.28437 0.56803,-0.56611 0.81055,-0.84766 z m -4.00391,0.0312 c 0.46984,0.41322 0.98328,0.83511 1.54883,1.26563 -0.3571,0.28857 -0.72802,0.58207 -1.12109,0.87891 l -0.60156,-0.44727 -0.58008,0.44336 c -0.27206,-0.22605 -0.57269,-0.45919 -0.81055,-0.67773 -0.0513,-0.0472 -0.0912,-0.0918 -0.14062,-0.13868 0.59415,-0.45319 1.16953,-0.89702 1.70507,-1.32422 z m 6.26368,1.46485 c 0.69288,0.4958 1.2331,0.96299 1.38867,1.33984 a 0.36035275,0.36035275 0 0 0 0.0566,0.0937 c -0.0901,0.24186 -0.25163,0.51962 -0.48047,0.82617 l -0.47852,-0.42773 -0.51953,0.53711 c -0.4091,-0.30954 -0.82877,-0.6242 -1.27734,-0.95117 0.0728,-0.0707 0.16619,-0.14678 0.23633,-0.2168 0.41608,-0.41538 0.76985,-0.81193 1.07422,-1.20117 z m -4.12891,0.24805 c 0.46615,0.34603 0.94251,0.69375 1.41992,1.04101 0.0941,0.0684 0.16802,0.12528 0.26172,0.19336 -0.33305,0.30354 -0.64972,0.60218 -1.01953,0.91797 l -0.51367,-0.38281 -0.66407,0.50586 c -0.42066,-0.31003 -0.82855,-0.61491 -1.22461,-0.91797 0.61517,-0.45725 1.19278,-0.90973 1.74024,-1.35742 z m -4.41406,0.0566 c 0.0781,0.0745 0.14675,0.14753 0.22851,0.22265 0.37788,0.34719 0.82245,0.70379 1.26758,1.06055 -0.4096,0.30082 -0.82289,0.60389 -1.23437,0.9082 l -0.60547,-0.44922 -0.55078,0.41993 c -0.003,-0.003 -0.008,-0.007 -0.0117,-0.01 -0.30479,-0.27666 -0.56446,-0.54252 -0.79883,-0.80274 0.53523,-0.43761 1.1053,-0.88911 1.70508,-1.34961 z m 6.68359,1.61523 c 0.66294,0.48295 1.32981,0.96739 1.88477,1.40039 -0.11846,0.11868 -0.22802,0.23394 -0.35743,0.35547 -0.2211,0.20766 -0.50044,0.43238 -0.74804,0.64844 l -0.52539,-0.43946 -0.54297,0.48438 c -0.44806,-0.33539 -0.89521,-0.6686 -1.35156,-1.00195 0.58817,-0.4931 1.12611,-0.97399 1.64062,-1.44727 z m -4.60937,0.13477 c 0.53777,0.41518 1.09616,0.83317 1.67187,1.25586 0.0422,0.031 0.0846,0.0627 0.12695,0.0937 -0.18859,0.15528 -0.36316,0.3045 -0.55468,0.46093 -0.19646,0.16046 -0.39386,0.32159 -0.5918,0.48242 l -0.58594,-0.43554 -0.63281,0.48047 c -0.44455,-0.33277 -0.85791,-0.6586 -1.25977,-0.98047 0.60122,-0.45489 1.21755,-0.90928 1.82618,-1.35742 z m -4.33985,0.0605 c 0.26285,0.288 0.54811,0.57827 0.875,0.875 0.14457,0.13122 0.32905,0.26949 0.48438,0.40234 -0.37432,0.28975 -0.75336,0.57789 -1.10157,0.87109 l -0.51171,-0.38086 -0.53711,0.40625 c -0.24657,-0.31717 -0.41654,-0.61325 -0.51758,-0.88671 0.27348,-0.33887 0.69634,-0.76093 1.21289,-1.20899 0.0289,-0.0251 0.0662,-0.0528 0.0957,-0.0781 z m 11.39649,1.66601 c 0.63839,0.53281 1.15217,1.01738 1.32422,1.30469 a 0.36091907,0.36091907 0 0 0 0.084,0.0957 c -0.18692,0.28682 -0.49693,0.63583 -0.86719,1.01367 l -0.51953,-0.38672 -0.48437,0.36914 c -0.35948,-0.31436 -0.7548,-0.62716 -1.15235,-0.9414 0.4123,-0.34893 0.83276,-0.70016 1.18946,-1.03516 0.15219,-0.14294 0.28583,-0.28052 0.42578,-0.41992 z m -4.66016,0.0625 c 0.64717,0.47507 1.275,0.9489 1.89453,1.42383 -0.3715,0.30366 -0.76304,0.61582 -1.15625,0.92773 l -0.58203,-0.41796 -0.5918,0.47656 c -0.44064,-0.32082 -0.88283,-0.64202 -1.32031,-0.96094 0.35485,-0.2902 0.70763,-0.58088 1.06055,-0.86914 0.23941,-0.19555 0.46009,-0.38588 0.69531,-0.58008 z m -4.80078,0.0234 c 0.58747,0.47539 1.20635,0.95811 1.86914,1.44727 -0.43248,0.35397 -0.83656,0.70377 -1.25,1.05468 l -0.53906,-0.39843 -0.55664,0.42187 c -0.4473,-0.35128 -0.88489,-0.70085 -1.25196,-1.03711 -0.0144,-0.0132 -0.0249,-0.0259 -0.0391,-0.0391 0.53219,-0.47863 1.14169,-0.96363 1.76758,-1.44921 z m 7.28125,1.85547 c 0.61773,0.48741 1.20335,0.97062 1.70898,1.43945 -0.34816,0.30754 -0.73305,0.627981 -1.125,0.951176 l -0.55859,-0.412109 -0.51172,0.388671 c -0.40181,-0.322023 -0.83133,-0.644418 -1.26172,-0.966798 0.59892,-0.4727 1.18841,-0.94101 1.74805,-1.40039 z m -4.81055,0.0391 c 0.0376,0.0275 0.0717,0.0545 0.10938,0.082 0.58854,0.4293 1.18385,0.86344 1.76953,1.29688 -0.40437,0.31831 -0.80968,0.635545 -1.20899,0.955074 l -0.63281,-0.476563 -0.63281,0.527344 c -0.11296,-0.08111 -0.22769,-0.163276 -0.33984,-0.244141 -0.29414,-0.212082 -0.56341,-0.417694 -0.84766,-0.626954 0.57271,-0.49843 1.16152,-1.00178 1.7832,-1.51367 z m -4.76172,0.0508 c 0.0268,0.0249 0.049,0.0493 0.0762,0.0742 0.51279,0.46975 1.10928,0.94565 1.74023,1.42578 -0.41822,0.377746 -0.80582,0.74804 -1.16406,1.115236 l -0.5918,-0.509765 -0.51758,0.517578 c -0.37847,-0.34657 -0.70368,-0.684862 -0.89844,-0.994139 a 0.36003601,0.36003601 0 0 0 0.0195,-0.0332 c 0.30764,-0.51472 0.77832,-1.05021 1.33593,-1.5957 z m 7.23438,1.779298 c 0.63619,0.478638 1.25442,0.954187 1.81445,1.419922 -0.24789,0.197819 -0.4908,0.394563 -0.74023,0.591796 -0.16688,0.13195 -0.30112,0.246039 -0.4668,0.376954 l -0.55664,-0.414063 -0.58984,0.447266 c -0.42085,-0.32225 -0.83669,-0.64473 -1.2754,-0.962891 0.59438,-0.487185 1.19893,-0.972602 1.81446,-1.458984 z m -4.81641,0.166015 c 0.32824,0.242664 0.64657,0.483537 0.98633,0.728516 0.27636,0.199268 0.55353,0.402438 0.83203,0.603515 -0.38583,0.323617 -0.77208,0.647765 -1.125,0.96875 l -0.62109,-0.382812 -0.58985,0.554688 0.0469,0.04297 c -0.42608,-0.290306 -0.8279,-0.580268 -1.21485,-0.86914 0.47536,-0.521203 1.04574,-1.072279 1.68555,-1.646485 z m 7.19141,1.726563 c 0.57709,0.507351 1.06947,0.997566 1.45508,1.464844 -0.35458,0.275877 -0.73471,0.557532 -1.13868,0.839843 l -0.50976,-0.378906 -0.5586,0.423828 c -0.3154,-0.309533 -0.6608,-0.616385 -1.02343,-0.921875 0.32356,-0.25658 0.58943,-0.481278 0.92187,-0.74414 0.28691,-0.226859 0.56812,-0.455484 0.85352,-0.683594 z m -4.76172,0.04883 c 0.63435,0.462568 1.24709,0.924562 1.83008,1.386719 -0.39291,0.315757 -0.82422,0.651451 -1.17188,0.945312 l -0.47656,-0.351562 -0.57227,0.433593 c -0.43322,-0.292759 -0.88289,-0.590013 -1.34375,-0.892578 0.51442,-0.49231 1.12034,-1.005979 1.73438,-1.521484 z m 2.4043,1.847656 c 0.52162,0.434206 0.99463,0.864368 1.40039,1.28711 -0.40875,0.280779 -0.80403,0.561346 -1.12891,0.818359 l -0.39453,-0.292969 -0.52539,0.402344 c -0.28119,-0.277995 -0.62832,-0.558185 -1.01563,-0.847656 0.0722,-0.06341 0.1177,-0.11492 0.19336,-0.179688 0.41809,-0.357886 0.97292,-0.788622 1.47071,-1.1875 z')
		
		# Pineapple leaves
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#12d412;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.72000003;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 0.64643,-120.06351 c -0.0812,-2.56953 0.34432,-5.30788 0.95562,-6.79606 0.8867,1.95729 1.00521,5.10326 0.83485,7.18336 z')
		self.svg.write_path(style, 'm -0.62032,-118.66347 c -0.31979,-3.33222 -0.52685,-6.00009 -0.56885,-8.01606 1.45054,1.52715 2.38355,3.90681 2.64474,7.2039 z')
		self.svg.write_path(style, 'm 1.07716,-118.47139 c 0.46442,-3.41859 1.56797,-5.4385 2.83362,-7.31722 0.0314,2.22982 -0.19958,5.32375 -0.60516,7.37104 z')
		self.svg.write_path(style, 'm 1.54692,-117.36127 c 0.30617,-2.77196 2.15206,-5.06448 4.52995,-6.83756 -0.71841,1.90809 -2.2078,5.18583 -2.50085,7.77869 z')
		self.svg.write_path(style, 'm -2.26912,-118.08898 c -0.46958,-1.98272 -1.99182,-4.40872 -3.24407,-6.39144 1.87837,0.83483 3.72254,1.9594 4.97479,5.14219 z')
		self.svg.write_path(style, 'm -0.58879,-115.78461 c -1.28535,-3.20161 -1.40773,-5.94783 -1.52227,-7.89072 1.58324,1.45278 2.82732,4.8561 3.4863,6.83641 z')
		self.svg.write_path(style, 'm 1.45703,-115.62806 c 1.12243,-2.55359 4.35364,-5.54186 6.79281,-5.8284 -1.48854,1.70248 -4.20019,4.64565 -4.97832,7.1363 z')
		self.svg.write_path(style, 'm -2.13911,-115.38567 c -1.47899,-2.31252 -2.70665,-3.24343 -4.85589,-5.18305 1.81549,0.15922 4.65169,1.56987 6.33783,4.16856 z')
		self.svg.write_path(style, 'm -2.15205,-113.08913 c -1.47816,-1.54904 -3.32619,-2.71073 -5.48263,-3.57155 1.78184,-0.38259 5.09255,-0.0951 7.46932,1.89162 z')
		self.svg.write_path(style, 'm -1.25471,-111.55927 c -1.29036,-0.37451 -2.65484,-0.89451 -4.93042,-1.13868 1.72604,-0.82157 3.28253,-1.41307 5.94285,0.17404 z')
		self.svg.write_path(style, 'm -0.21576,-113.44531 c 0.44663,-3.42096 1.43248,-6.32458 2.12252,-7.14808 0.66929,2.04189 0.43855,5.06572 0.0437,7.1151 z')
		self.svg.write_path(style, 'm 1.98846,-113.98401 c 1.54054,-2.32539 4.50873,-3.56961 6.74009,-3.15076 -1.8329,1.31471 -4.6593,2.73286 -5.84986,5.05479 z')
		self.svg.write_path(style, 'm 2.36204,-112.22159 c 1.07858,-1.60538 2.86172,-1.43156 5.00318,-0.59299 -2.00712,0.3367 -3.62152,1.06843 -4.98897,1.81368 z')
		self.svg.write_path(style, 'm -0.36653,-112.00637 c -0.81455,-2.43836 -1.19204,-5.18375 -1.03309,-6.78472 1.41067,1.62087 2.42622,4.60077 2.85943,6.64238 z')
		self.svg.write_path(style, 'm -1.55785,-111.09741 c -0.91477,-0.0254 -1.58445,0.15709 -3.16904,0.24009 1.00913,-0.76453 2.08892,-0.98689 2.90044,-0.95066 z')
		self.svg.write_path(style, 'm -1.12103,-110.78686 c -0.12779,-0.83135 -0.79097,-2.42139 -1.55531,-3.81193 2.34974,1.10735 2.85124,2.25905 3.19507,3.73178 z')
		self.svg.write_path(style, 'm 0.62355,-110.85028 c 0.0292,-2.06436 1.66728,-4.19837 2.35732,-5.02187 -0.16556,2.04188 -0.80066,3.8787 -0.5694,5.14542 z')
		self.svg.write_path(style, 'm -0.15742,-110.87985 c -0.74621,0.3881 -1.85444,1.26869 -2.92572,2.43924 0.18308,-1.25273 0.11641,-1.91316 1.40066,-2.71191 z')
		self.svg.write_path(style, 'm 2.91023,-110.94983 c 0.91477,-0.0254 1.54755,0.15709 2.87388,-0.20264 -1.2305,-0.43249 -2.05203,-0.24901 -2.86354,-0.21278 z')
		self.svg.write_path(style, 'm 1.17826,-110.84295 c 0.7462,0.3881 2.44475,2.44931 3.51602,3.17712 0.18587,-1.25272 -0.37467,-2.57726 -1.65892,-3.376 z')
		self.svg.write_path(style, 'm 1.20768,-110.69537 c -0.15589,0.53567 -0.63692,1.56384 -1.56062,2.32855 -0.14897,-0.88378 -0.40011,-1.80248 -0.001,-2.45365 z')

		self.end_resource(encircle)
	
	def draw_squid(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		# White body fill.
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 3.751377,-125.43036 -1.988737,1.32582 -2.342292,2.2981 -1.988737,2.43068 -1.104855,2.2981 -0.707107,1.90035 0,1.14905 1.679379,0 -0.397747,1.98873 -0.574525,2.47488 -0.08839,2.34229 -0.08839,1.72357 0.839689,0.70711 1.767767,0.39775 1.856155,0.0442 1.414214,-0.17678 1.414213,-0.57453 0.309359,-0.83968 0.30936,-2.3423 -0.30936,-2.69584 -0.176776,-2.65165 1.723573,0.53033 0.04419,-2.20971 -0.220971,-3.7565 -0.397748,-3.27037 z')

		style = 'fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1'
		self.svg.write_path(style, 'm -11.427734,-116.71094 c -0.926654,0.068 -1.828354,0.58 -2.47461,0.98633 l 0.564453,0.62305 c 0.129027,-0.0692 1.250128,-0.8819 2,-0.93164 0.346707,-0.0382 0.804167,0.0783 1.076172,0.39453 0.868797,0.83085 0.783149,2.35847 0.419922,4.20312 -0.329865,1.37596 -0.389964,2.87205 -0.115234,4.36719 0.175945,1.03446 0.565056,2.09121 1.236328,2.96484 0.238071,-0.17566 0.474836,-0.35332 0.707031,-0.53906 0.01663,-0.0136 0.035924,-0.0238 0.052734,-0.0371 -0.6103851,-0.73211 -0.9647481,-1.69528 -1.1601561,-2.53906 -0.328551,-1.46718 -0.279657,-2.86872 -0.0332,-4.05078 0.451937,-2.07874 0.307063,-3.74395 -0.642578,-4.80469 -0.4323489,-0.47732 -1.0683939,-0.67465 -1.6308589,-0.63672 z')
		self.svg.write_path(style, 'm -3.796875,-104.89258 c -0.9058673,0.74517 -1.9188533,1.2608 -2.7324219,1.16406 -0.2030019,0.0833 -0.4030106,0.17309 -0.5839843,0.29102 -0.166691,0.11469 -0.3464295,0.21948 -0.5195313,0.33008 1.7036649,0.94245 3.731315,0.084 4.8828125,-1.03906 -0.3560506,-0.22586 -0.7057338,-0.47583 -1.046875,-0.7461 z')
		self.svg.write_path(style, 'm 4.1640625,-105.46289 c -0.327423,-0.0235 -0.6594367,-0.0232 -0.9921875,0.002 0.078825,0.37091 0.1521001,0.74306 0.2207031,1.11524 1.064043,-0.1503 2.1844576,0.0295 3.203125,0.45898 0.5236021,0.21983 1.046713,0.50703 1.5820313,0.79883 0.1250671,-0.19964 0.2209286,-0.4272 0.3164062,-0.65625 -0.4965073,-0.32152 -0.99925,-0.64667 -1.5488281,-0.92969 -0.8521322,-0.43734 -1.7989811,-0.71849 -2.78125,-0.78906 z')
		self.svg.write_path(style, 'm 9.625,-103.05469 c -0.082921,0.19334 -0.1803086,0.37972 -0.2832031,0.56446 1.0688811,0.48073 2.1976941,0.84215 3.3593751,1.0332 0.499799,0.10355 1.072452,0.1837 1.636719,0.125 0.45283,-0.10452 0.877972,-0.29289 1.207031,-0.60938 -0.854133,0.55171 -1.887915,0.33226 -2.777344,0.11524 -1.10459,-0.26639 -2.156407,-0.6956 -3.142578,-1.22852 z')
		self.svg.write_path(style, 'm 10.445312,-116.39648 c -0.400021,0.0106 -0.806202,0.0811 -1.207031,0.23632 -0.999585,0.47508 -1.487003,1.70748 -1.054687,2.81641 0.73612,1.87741 1.421348,4.07068 1.230468,6.24023 -0.185513,1.89331 -0.460829,3.94627 -1.800781,5.00196 -0.0014,0.001 -0.0025,0.003 -0.0039,0.004 0.320059,0.10607 0.638919,0.21521 0.96875,0.33985 1.230198,-1.44937 1.504195,-3.41815 1.582031,-5.29297 0.119976,-2.35443 -0.620703,-4.61346 -1.384765,-6.52539 -0.32491,-0.80541 0.06377,-1.75045 0.714844,-1.97071 1.477232,-0.63585 3.318013,0.63156 3.894531,1.04493 0.06075,-0.3217 0.119158,-0.65295 0.167968,-0.99219 -0.763734,-0.42041 -1.907357,-0.9341 -3.107422,-0.90234 z')
		self.svg.write_path(style, 'm 2.6855469,-104.19922 -1.3144531,0.16406 c 0.1478645,1.11047 0.8672943,2.90093 2.7285156,3.58399 1.0655975,0.34295 2.2839122,0.21217 3.3339844,-0.36719 -0.2485489,-0.0678 -0.4969496,-0.13368 -0.75,-0.21289 -0.00137,0 -0.00254,-0.002 -0.00391,-0.002 0,0 -0.00195,0 -0.00195,0 -0.3131724,-0.0869 -0.6261833,-0.19311 -0.9375,-0.31055 -0.4385291,0.0409 -0.8692013,-0.007 -1.2519532,-0.16992 -1.067961,-0.37978 -1.6828409,-1.60142 -1.8027343,-2.68555 z')
		self.svg.write_path(style, 'm -0.46875,-103.85156 c -0.37846744,0.0176 -0.7557959,0.0342 -1.1347656,0.0508 -0.026644,1.35579 -0.083772,2.68828 -0.4941406,3.89453 -0.018811,0.05778 -0.047295,0.112792 -0.068359,0.169922 0.0012,0.469321 0.048794,0.930808 0.1503906,1.380859 0.2763156,-0.394741 0.5250997,-0.814331 0.7148438,-1.271484 0.55095568,-1.351977 0.7212245,-2.820157 0.8320312,-4.224607 z')
		self.svg.write_path(style, 'm -3.1230469,-98.044922 c -0.150339,0.197077 -0.3095867,0.389682 -0.4746093,0.578125 -0.714018,0.796578 -1.6209216,1.450225 -2.6289063,1.658203 -0.2940814,0.05997 -0.6139042,0.05055 -0.90625,-0.02344 -0.4427004,-0.04353 -0.8708449,-0.242919 -1.1113281,-0.654297 0.2442222,0.763823 1.2067903,1.184368 2.09375,1.060547 1.1279747,-0.158128 2.18429,-0.790581 3.0175781,-1.617188 0.093062,-0.09152 0.1811077,-0.189952 0.2714844,-0.285156 -0.1018651,-0.234524 -0.1860307,-0.474028 -0.2617188,-0.716797 z')
		self.svg.write_path(style, 'm 4.025391,-125.87891 c -0.146221,-0.0305 -0.303081,0.0119 -0.398438,0.0742 -2.862666,1.87054 -4.880211,3.59029 -6.738281,6.62891 -0.99964,1.72264 -1.777144,3.35668 -1.810547,5.28516 0.006,0.2998 0.273432,0.52657 0.570313,0.48437 0.492456,-0.0709 0.875763,-0.10517 1.1875,-0.1289 -0.218167,0.7447 -0.421021,1.51009 -0.605469,2.3496 -0.397611,1.80973 -0.653445,4.36221 -0.396485,5.81446 0.19055,1.07692 1.186538,1.26127 1.898438,1.47656 0.7119,0.21529 1.794338,0.36669 2.455078,0.27539 1.69421,-0.23411 3.402492,-0.48676 3.824219,-1.49023 0.761046,-1.81087 0.168822,-5.57059 0.01758,-7.99219 0.372935,0.0863 0.744619,0.19639 1.097656,0.36523 0.33685,0.16216 0.647892,-0.0794 0.638672,-0.45312 0,0 -0.123941,-4.19409 -0.244141,-5.86719 -0.19297,-2.68575 -0.356893,-3.69695 -1.158203,-6.45703 -0.0561,-0.23143 -0.19167,-0.33476 -0.33789,-0.36523 z m -0.402344,0.98243 c 0.58883,2.15877 0.873399,3.54998 1.042969,5.91015 0.10223,1.42282 0.178435,4.57706 0.197265,5.32227 -0.75389,-0.22738 -1.480374,-0.38819 -2.083984,-0.44727 0.003,-0.93743 0.01185,-2.67282 0.09375,-4.53515 0.0553,-1.25832 -0.308848,-0.55533 -0.486328,0.38671 -0.38009,2.01743 -0.460938,3.48013 -0.460938,4.40821 -4e-4,0.25604 0.192656,0.47102 0.447266,0.49804 0.246719,0.026 0.520253,0.0702 0.785156,0.10547 0.293188,2.53888 0.74607,5.39541 0.132813,7.61133 -0.202142,0.73041 -3.4124,1.1779 -5.269532,0.78516 -0.518246,-0.1096 -1.363176,-0.31092 -1.404296,-1.08594 -0.0867,-1.63376 0.06432,-3.31607 0.320312,-4.73438 0.389151,-2.15602 1.088748,-4.27614 1.673828,-5.69726 l 0.941406,-2.46289 c 0.56898,-1.4466 0.362088,-1.65162 -0.632812,0.10156 -0.761329,1.50777 -1.310471,2.82853 -1.765625,4.1875 -0.192605,0.0238 -0.6893,0.0859 -1.246094,0.1543 0.0825,-0.52387 0.194473,-1.14129 0.470703,-1.9043 0.35929,-0.99241 0.811648,-1.98486 1.080078,-2.42383 1.64411,-2.6887 3.560553,-4.51162 6.164063,-6.17968 z')
		self.svg.write_path(style, 'm -2.5373427,-104.18887 c 0.3421635,0.16215 0.6859607,0.32221 1.0313325,0.48012 -0.9340133,2.13702 -1.3535777,4.738056 -0.2199471,6.841436 0,0 -1e-7,10e-7 -1e-7,10e-7 0.4977108,0.912316 0.5028499,2.106189 -0.1345524,2.837592 -4e-7,0 -4e-7,0 -4e-7,0 -0.5079821,0.590086 -1.4642213,0.666608 -1.9748687,0.199639 0.5287582,0.326069 1.2462055,0.121597 1.5702851,-0.288591 0.041842,-0.04156 0.079462,-0.08658 0.111943,-0.134807 0.4857643,-0.603214 0.3594186,-1.599406 -0.074296,-2.305366 -10e-8,0 -10e-8,0 -10e-8,0 -1.4089532,-2.272798 -1.2397643,-5.211664 -0.3098958,-7.630024 z')
		self.svg.write_path(style, 'm 2.3835041,-104.06671 c 0.3174615,-0.24063 0.6405059,-0.47527 0.9692112,-0.70375 0.6369547,1.29737 2.1141119,2.13063 3.6421499,2.7018 1.3112305,0.45566 2.9095093,0.83787 3.7952238,2.02156 0,0 0,0 0,0 0.5932,0.800014 0.736953,1.955226 0.161314,2.691399 -0.466912,0.602328 -1.3710736,0.816403 -1.952572,0.446967 0.6368576,0.257218 1.383809,-0.137615 1.639232,-0.653144 -2e-6,3e-6 0.0051,-0.0078 0.0051,-0.0078 0.434378,-0.572556 0.19779,-1.510827 -0.294284,-2.118239 0,0 0,-10e-7 0,-10e-7 -0.7344896,-0.948692 -2.2010381,-1.119902 -3.6049445,-1.560132 -1.6380276,-0.45356 -3.3202746,-1.28178 -4.3604604,-2.81866 z')
		self.svg.write_path(style, 'm -3.2239027,-105.35575 -0.4962606,1.35092 c -1.0480932,-0.46063 -2.4787863,-0.29871 -3.5206168,0.38222 0,0 -3e-7,0 -3e-7,0 -1.3656955,0.93961 -2.9325976,1.77851 -4.6273276,1.94569 0,0 -1e-6,0 -1e-6,0 -0.765571,0.0695 -1.508698,-0.0986 -2.185433,-0.35854 -0.608035,-0.2156 -1.286316,-0.55176 -1.572326,-1.1699 0.158398,0.10812 0.317934,0.17056 0.477991,0.20184 0.313188,0.27579 0.779492,0.42426 1.22658,0.5645 0.660228,0.18101 1.343102,0.27459 1.967694,0.15219 0,0 10e-7,0 10e-7,0 1.508118,-0.2724 2.8419377,-1.18921 4.0822788,-2.18158 0,0 5e-7,0 5e-7,0 1.2448518,-1.01542 3.0322554,-1.4126 4.64742,-0.88734 z')
		self.svg.write_path(style, 'm 1.6621094,-103.86719 c -0.4185714,0.0443 -0.83767516,0.0868 -1.2558594,0.12696 0.25950609,1.60191 0.8206852,3.24717 1.9023438,4.556636 0.342343,0.41542 0.5590507,0.954197 0.4804687,1.44336 -0.025283,0.246453 -0.1119591,0.496485 -0.2246094,0.751953 0.1634384,0.135566 0.3491558,0.240365 0.546875,0.314453 0.1631599,-0.298951 0.302037,-0.612493 0.3789063,-0.960938 0.1468187,-0.721817 -0.060504,-1.49206 -0.5,-2.099609 -0.8380808,-1.188455 -1.181556,-2.668875 -1.328125,-4.132815 z')
		self.svg.write_path(style, 'm 2.0175781,-95.949219 c -0.1436635,0.248282 -0.2873481,0.51336 -0.3984375,0.822266 -0.027528,0.140925 -0.048361,0.286201 -0.056641,0.433594 -2.467e-4,0.681216 0.4247003,1.144359 0.9003906,1.335937 -0.4098373,-0.294911 -0.6597598,-0.801902 -0.5390625,-1.265625 0.1089883,-0.402944 0.3428298,-0.741718 0.578125,-1.082031 -0.1691941,-0.0673 -0.3310469,-0.147961 -0.484375,-0.244141 z')
		self.svg.write_path(style, 'm -0.60141829,-103.73449 c 0.41989804,0.0218 0.83993975,0.0419 1.26010131,0.06 -0.0659788,1.5874 0.0745189,3.19567 0.54825348,4.721421 0,0 3e-7,0 3e-7,0 0.2210797,0.697025 0.4978677,1.375404 0.9689598,1.905354 0,0 5e-7,0 5e-7,0 0.3845928,0.434985 0.9522601,0.744799 1.5524436,0.724004 1.1452221,-0.0092 1.9169042,-1.552437 1.4518695,-2.768928 0.3599911,0.495931 0.5141682,1.195943 0.3843301,1.874168 -0.2819051,0.74386 -0.8986219,1.34968 -1.7797763,1.509444 -0.8169383,0.06458 -1.5929088,-0.260511 -2.1406711,-0.80816 -0.6154334,-0.618165 -1.00944317,-1.374126 -1.28897248,-2.114375 1.1e-7,0 -2.1e-7,-10e-7 -2.1e-7,-10e-7 -0.63428047,-1.632007 -0.9178233,-3.376937 -0.9565385,-5.102977 z')
		self.svg.write_path(style, 'm -3.3945312,-104.69922 c -0.3552481,1.42085 -1.0184522,2.85835 -2.2050782,3.54883 -0.032141,0.0187 -0.080618,0.0419 -0.1152344,0.0625 0.031118,0.13229 0.066803,0.26506 0.078125,0.39648 0.014507,0.1684 0.00634,0.33743 -0.00195,0.50586 0.1820691,-0.0904 0.3573596,-0.19054 0.5039063,-0.29687 1.372379,-0.86601 2.2647831,-2.35534 2.7050781,-3.9082 -0.321271,-0.10556 -0.6428638,-0.2091 -0.9648437,-0.3086 z')
		self.svg.write_path(style, 'm -6.8574219,-102.06641 c -0.092115,-0.0108 -0.1890786,-0.0102 -0.2910156,0.01 -0.418133,0.0808 -0.80098,0.41965 -0.8750005,0.85742 -0.06307,0.373 0.0048,0.78465 0.3886724,1.06445 0.3364651,0.245274 0.7423581,0.290742 1.1484375,0.22852 -0.00622,-0.17417 -0.017944,-0.33714 -0.03125,-0.48047 -0.00651,-0.0701 -0.03744,-0.18008 -0.0625,-0.28125 -0.1991158,0.0605 -0.3975277,0.0949 -0.5761719,0.041 -0.152411,-0.046 -0.2709456,-0.30962 -0.1972656,-0.49219 0.026637,-0.066 0.0676,-0.12052 0.1113281,-0.16797 0.014137,-0.015 0.029411,-0.0282 0.044922,-0.041 0.032512,-0.0274 0.068145,-0.0477 0.1054687,-0.0645 0.020292,-0.009 0.039261,-0.0199 0.060547,-0.0254 0.053423,-0.0142 0.1092213,-0.0193 0.1660156,-0.01 0.074812,0.0126 0.1488622,0.0453 0.2207032,0.10546 0.198543,0.16628 0.3222775,0.70139 0.3359374,0.88672 0.040162,0.545023 0.1414044,1.206348 -0.2597656,2.146488 0.546965,-0.610901 0.7818213,-1.516606 0.7070313,-2.384768 -0.031496,-0.36561 -0.1332691,-0.73326 -0.3613281,-1.0332 -0.043291,-0.0569 -0.096805,-0.11122 -0.1582032,-0.16016 -0.063737,-0.0508 -0.1366607,-0.0942 -0.2167968,-0.1289 -0.079938,-0.0346 -0.1666628,-0.0594 -0.2597657,-0.0703 z')

		# Eyes
		self.svg.write_ellipse(style, 0.28214264, -107.8961, 0.50823301, 0.86178637)
		self.svg.write_ellipse(style, -1.629467, -107.9845, 0.50823301, 0.86178637)

		#  Ends of long tentacles
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.72000003;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 16.079505,-112.80178 c 0,0 -0.534036,-1.98412 -1.352253,-2.375 -1.083027,-0.51738 -2.029029,0.0701 -1.654029,0.82009 0.375,0.75 2.381282,1.33616 3.006282,1.55491 z')
		self.svg.write_path(style, 'm -15.544194,-112.67678 c 0,0 -0.104921,-1.79881 0.731694,-2.49777 0.96875,-0.80936 1.875,-0.15625 1.59375,0.53125 -0.28125,0.6875 -1.825444,1.62277 -2.325444,1.96652 z')

		self.end_resource(encircle)

	def draw_fish(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		# Body Fill
		fill_gradient = 'gradientFish'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 6.75164,-116.27687 c 2.99065,0.60485 4.49367,1.24794 5.89266,2.66121 2.45016,2.47513 3.25045,6.5505 3.25045,6.5505 l -3.54035,0.49898 2.97008,0.83162 c -1.40188,1.23555 -2.8637,2.14124 -4.39572,2.68497 -2.28163,0.80975 -5.89735,1.19916 -8.27072,0.72096 -2.52003,-0.50774 -4.93787,-1.71891 -6.65678,-2.93199 -1.70292,-1.2018 -2.32599,-2.77049 -4.34245,-2.71421 -2.02435,0.0566 -3.06024,1.36024 -6.2744,2.54392 0.98841,-2.25668 1.48644,-4.44986 1.47742,-4.77248 -0.0131,-0.47021 -0.60937,-2.94625 -1.71029,-5.74037 4.56815,1.9526 4.13574,3.93892 6.7876,4.01568 1.65013,0.0477 2.8784,-2.27892 4.84548,-3.01143 0,0 0.0925,-0.76339 -0.85797,-2.09399 2.125,-1.125 5.3749,-2.84347 9.18238,-2.11673 0.63846,0.67205 1.20575,1.59646 1.64258,2.87336 z')
		# Body Outline
		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 3.75195,-119.76758 c -0.55834,-0.0162 -1.08956,0.007 -1.41992,0.0332 -3.44102,0.26924 -4.79186,1.37793 -7.48633,2.26368 0.80029,0.66264 1.38172,1.65445 1.58985,2.40625 -0.74252,0.46927 -1.56885,1.06749 -2.34375,1.66992 -0.78694,0.61179 -1.52805,1.08797 -2.13868,1.07031 -1.213,-0.0351 -1.55439,-0.52183 -2.3789,-1.23633 -1.98577,-1.72081 -3.07464,-2.29632 -5.23438,-3.2207 0.86297,2.18173 2.04317,4.50407 2.07227,6.58984 0.0263,1.88626 -1.13742,3.87948 -1.86328,5.54883 1.62081,-0.53562 3.22001,-1.34059 4.6289,-2.08398 0.89906,-0.47438 1.57632,-0.77317 2.49415,-0.79883 0.89038,-0.0249 1.40182,0.27656 1.98242,0.77734 0.25085,0.21637 0.51534,0.48279 0.79687,0.75586 -0.25647,0.40556 -0.79615,0.53695 -1.76562,1.10352 1.95514,0.58994 2.59141,1.85091 4.15625,2.49414 0.55665,-0.25793 1.08128,-0.52946 1.29882,-1.08594 1.28379,0.64871 2.70563,1.21308 4.19922,1.53906 0.0372,0.49232 -0.0779,0.96218 -0.52343,1.75 1.8525,-0.13727 3.11482,-0.49129 3.85351,-1.48437 1.90282,-0.0616 3.90491,-0.41501 5.41016,-0.94922 1.59542,-0.56623 3.08878,-1.52586 4.54297,-2.77148 0.22554,-0.1932 0.55832,-0.5479 0.15234,-0.66602 l -1.22851,-0.35742 1.51367,-0.22656 c 0.18187,-0.0272 0.35546,-0.2168 0.27734,-0.50586 -0.0502,-0.18564 -0.78361,-4.16347 -3.37305,-6.7793 -1.42433,-1.43886 -3.05654,-2.12894 -5.92382,-2.72852 -0.4724,-1.08092 -0.97717,-2.12518 -1.70508,-2.90429 -0.44021,-0.13092 -1.02565,-0.18691 -1.58399,-0.20313 z m -0.1289,0.86719 c 0.40991,0.0169 0.81105,0.0568 1.19922,0.10547 0.77961,0.94104 1.28338,2.04784 1.60937,2.96875 2.1946,0.39918 4.6041,1.23544 5.89453,2.52734 2.08816,2.09053 2.83239,5.19206 2.98633,5.86133 l -3.01953,0.42578 c -0.44473,0.0627 -0.45389,0.76792 -0.0586,0.87891 l 1.98242,0.55664 c -1.12071,0.87174 -2.24918,1.67981 -3.4375,2.10156 -0.33815,0.12001 -0.71912,0.22666 -1.11524,0.32617 -2.33138,-1.12461 -3.38072,-3.76269 -3.66601,-5.20312 -0.15295,-0.77226 -0.48459,-1.00055 -0.26758,0.46094 0.277,1.86552 1.35587,3.78888 2.74609,4.99218 -1.94553,0.34633 -4.16617,0.4437 -5.72851,0.12891 -2.43884,-0.49138 -4.81456,-1.67957 -6.48633,-2.85938 -0.79723,-0.56263 -1.35875,-1.23084 -2.01953,-1.80078 -0.66079,-0.56995 -1.57913,-0.96766 -2.54883,-0.93164 -0.96571,0.0359 -2.00556,0.34944 -2.93359,0.83789 -0.68049,0.35816 -1.62451,0.79789 -2.58789,1.22461 0.58514,-1.36212 1.15509,-2.85368 1.14062,-3.91797 -0.0229,-1.68436 -0.84568,-3.32406 -1.36523,-4.77929 1.43808,0.75542 2.36518,1.48293 3.00781,2.08984 0.79559,0.75138 1.70527,1.34121 2.9414,1.36523 0.8676,0.0169 1.85414,-0.60951 2.64454,-1.26171 1.07222,-0.88474 2.37395,-1.75346 3.82031,-2.3125 0.84286,-0.32579 2.17657,-0.81342 1.5664,-0.90821 -0.63083,-0.098 -1.90673,0.29013 -2.74804,0.65625 -0.21144,-0.67843 -0.52851,-1.28134 -0.85547,-1.77148 1.86816,-0.59893 2.90957,-1.50638 6.04687,-1.72852 0.42336,-0.0441 0.84204,-0.0501 1.25196,-0.0332 z')

		# Fin
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 4.14858,-108.59983 c -0.47489,-0.30307 -1.53655,-0.90869 -2.26472,-0.88862 -0.0804,0.002 -0.2543,0.14712 -0.15844,0.31108 0.47438,0.81135 0.88194,1.78963 0.81744,2.88053 -0.01,0.15682 0.0463,0.31282 0.28149,0.29908 0.85805,-0.0503 1.22499,-0.14313 1.82534,-0.42991 0.33162,-0.1584 0.28985,0.0295 -0.17284,0.32399 -0.42638,0.27143 -1.15747,0.57467 -1.60626,0.62419 -0.57111,0.063 -0.86938,-0.30115 -0.85559,-0.49509 0.0664,-0.93438 -0.40775,-2.23989 -0.84996,-3.00389 -0.64912,-1.12144 0.5114,-1.14367 1.04743,-1.03991 0.57353,0.11103 1.54086,0.51965 2.36735,1.37318 0.31578,0.3261 0.0887,0.37724 -0.43124,0.0454 z')

		# Eye
		style = 'opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.89999998;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1'
		self.svg.write_ellipse(style, 35.346939, -105.81317, 0.85538602, 1.0929933, transform='matrix(0.97605309,-0.21753245,0.21753245,0.97605309,0,0)')

		self.end_resource(encircle)

	def draw_coconut(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		brown_style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#bc8434;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		white_style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'

		# Big coconut
		self.svg.write_path(brown_style, 'm -4.5080282,-122.99352 c -6.3850178,2.15964 -8.5771578,9.38405 -8.0814268,14.88876 0.55563,6.16983 5.2811628,10.95294 12.64199276,8.10608 3.04329704,-1.17702 6.04119804,-6.34196 6.22442604,-11.57628 0.09818,-2.80474 -0.29778,-5.51103 -1.639173,-7.82455 -1.102579,-1.90162 -3.478014,-3.784 -6.173654,-4.24214 -1.590991,0.97227 -2.972165,0.64813 -2.972165,0.64813 z')
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.89999998;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_ellipse(style, -120.42445, -1.1047294, 0.54040664, 0.75130093, transform='matrix(0.04286687,0.99908079,-0.99908079,0.04286687,0,0)')
		self.svg.write_ellipse(style, -113.37407, -41.165329, 0.53094649, 0.66291261, transform='matrix(0.35065914,0.93650316,-0.93650316,0.35065914,0,0)')
		self.svg.write_ellipse(style, -115.40491, 28.144659, 0.75130093, 0.578731, transform='matrix(-0.21617976,0.97635358,-0.97635358,-0.21617976,0,0)')

		# Broken coconut
		self.svg.write_path(brown_style, 'm 12.470061,-104.40917 c -1.053625,2.46314 -2.7571896,5.66371 -5.3992166,6.959878 -1.8348159,0.900154 -4.8858287,1.355265 -7.29203855,0.574524 -1.47973495,-0.480128 -3.26695685,-2.153861 -3.88908725,-3.579732 -0.9764548,-2.23794 -1.1678327,-4.60408 -0.6812181,-6.72953 0.2499469,-1.09173 1.186875,-3.22454 1.8151019,-4.00521')
		self.svg.write_path(white_style, 'm -4.1031709,-106.48916 c 0.1858925,1.26956 0.9057567,2.15876 1.8143573,3.06473 0.7258639,0.72377 1.43443306,1.23318 2.38813597,1.53034 0.21168639,0.36954 0.58409309,0.82966 0.71913043,1.00496 0.6211732,0.30789 1.2701423,0.41934 1.7697881,0.53351 1.2859005,0.29381 3.2051814,0.30928 4.487449,0 1.4766975,-0.35618 2.9730411,-1.01232 4.0560481,-2.07749 0.799348,-0.78619 1.474351,-1.85192 1.582847,-2.96784 0.19684,-2.02457 0.0097,-3.62122 -1.250374,-5.21803 -0.765762,-0.24844 -1.101356,-0.47744 -2.0001007,-0.72008 -0.7209049,-0.88161 -1.2999824,-1.55958 -2.1970327,-2.39292 -1.8286746,-0.73618 -4.3613695,-0.80559 -6.0281383,-0.27571 -1.72586214,0.54868 -3.34971,1.59922 -4.0200406,2.49515 -1.4298123,1.911 -1.5302056,3.6019 -1.3220696,5.02338 z')
		fill_gradient = 'gradientCoconut'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.72000003;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 2.5689019,-111.79765 c -1.95421257,0.27864 -3.6605132,1.67502 -3.9378089,3.55663 -0.3092039,2.09813 0.69763676,3.67395 3.1778133,4.47933 0.373786,0.49838 0.6109957,0.84189 0.7612596,1.05028 0.5701086,0.18629 1.6940872,0.30376 2.4051006,0.28378 1.4220267,-0.04 2.5622123,-0.49712 3.5524385,-1.12498 1.980452,-1.2557 2.103312,-3.22456 0.954264,-5.56685 -0.6629126,-0.17678 -1.1503302,-0.34475 -1.6846877,-0.51996 -0.4611538,-0.48593 -0.8524209,-0.92577 -1.6101047,-1.76382 -1.1960277,-0.5413 -2.2986558,-0.51727 -3.6182747,-0.39441 z')

		self.end_resource(encircle)

	def draw_flower(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		path = 'm 0.979805,-123.15615 c -1.34145,-0.0198 -3.490295,1.29985 -4.377698,2.97606 -1.515072,-0.52803 -3.118559,-1.35518 -4.387882,-0.66716 -1.336347,0.80617 -3.05964,1.39841 -3.940732,2.52252 -1.019998,1.30134 -0.730979,3.22834 -1.040234,4.88073 -0.323141,1.72658 0.916341,3.62646 2.178426,4.57303 -0.480389,0.70795 -0.991103,1.55651 -1.064241,1.95596 -0.229528,2.03687 -0.85872,3.65897 -0.172551,5.07299 0.650332,1.34017 2.541535,1.62667 4.009752,2.563613 1.703034,0.722622 3.282592,0.820732 5.14182,0.411702 0.446214,0.818061 0.820032,1.55183 1.868672,1.900477 1.652946,0.549562 2.259608,1.57126 3.487169,1.377119 0.904439,-0.143038 1.706298,-0.852325 2.89228,-1.267016 0.956141,-0.334325 1.792353,-1.310625 2.17414,-2.142916 0.601179,-1.310569 0.607842,-2.718729 0.332147,-4.333519 1.085534,0.10069 1.96385,-0.10288 2.218318,-0.26619 1.401585,-1.12214 2.183535,-1.13125 2.967873,-2.1232 0.706103,-0.89301 0.33785,-2.30208 0.524226,-3.63507 0.190729,-1.36412 -0.373016,-3.11292 -1.13861,-3.85099 -0.916057,-1.14581 -2.133316,-1.66052 -3.360406,-2.25547 0.223107,-1.52457 0.238457,-2.83813 -0.583837,-3.68128 -1.009456,-1.03504 -1.391167,-2.66625 -2.553752,-3.32447 -1.410255,-0.79846 -2.9835,-0.29231 -4.911945,-0.66063 -0.08552,-0.0163 -0.173505,-0.025 -0.262935,-0.0263 z'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, path)
		fill_gradient = 'gradientFlower'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, path)

		filter = 'blurFlowerMiddle'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#c18bff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.89999998;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#%s);color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % filter
		self.svg.write_circle(style, 60.884876, -69.652748, 9.6685247, transform='matrix(0.8413905,0,0,0.8413905,-50.722984,-50.755482)')
		filter = 'blurFlowerInner'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#4d0b97;fill-opacity:0.73248411;fill-rule:nonzero;stroke:none;stroke-width:0.89999998;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#%s);color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % filter
		self.svg.write_circle(style, 60.884876, -69.652748, 4.5872564, transform='matrix(0.8413905,0,0,0.8413905,-50.722984,-50.755482)')

		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 0.639633,-123.613 c -0.245268,-0.007 -0.493489,0.0184 -0.741147,0.0723 -0.495315,0.10775 -0.988873,0.32636 -1.452713,0.61626 -0.897328,0.56081 -1.698239,1.40222 -2.2333,2.34669 -0.538041,-0.29613 -1.168361,-0.58916 -1.843828,-0.75923 -0.402544,-0.10135 -0.817029,-0.16411 -1.217716,-0.14954 -0.400686,0.0146 -0.786664,0.10703 -1.132262,0.31552 -1.283405,0.77424 -3.212955,1.5351 -4.096848,2.84955 -1.036325,1.54115 -0.856398,3.22859 -1.064886,4.82978 -0.121933,0.93647 0.116053,1.93977 0.548877,2.83148 0.383935,0.79099 0.927795,1.48307 1.55953,1.96215 -0.523828,0.48763 -0.918389,1.06735 -0.994221,1.7403 -0.111704,0.99127 -0.114545,1.61006 -0.218564,2.47815 -0.10402,0.86809 -0.307253,2.00443 0.08052,2.80354 0.383523,0.79035 1.112241,1.24077 1.875051,1.60883 0.762811,0.368068 1.743867,0.669437 2.430502,1.107614 1.218636,0.777675 2.913786,1.040634 4.971105,0.514366 0.380578,0.842488 0.837563,1.454964 1.755089,1.760018 0.77292,0.256976 1.299533,0.623573 1.830681,0.935061 0.531149,0.311488 1.321397,0.65032 2.04596,0.535729 1.061295,-0.167845 1.585995,-0.765822 2.695079,-1.153626 0.61183,-0.213931 1.413184,-0.872559 1.889842,-1.446139 0.476655,-0.57358 0.870431,-1.194818 1.082961,-1.658131 0.556087,-1.212262 0.51771,-2.127442 0.179125,-3.446082 0.715918,0.0871 1.419103,0.0384 1.947359,-0.38454 0.67438,-0.53993 1.161498,-1.0671 1.640053,-1.33933 0.478556,-0.27223 0.932552,-0.56407 1.362327,-1.10761 0.433047,-0.54768 0.51727,-1.24584 0.537371,-1.90299 0.02011,-0.65714 -0.02179,-1.32636 0.06411,-1.94078 0.107665,-0.77002 -0.0067,-1.365 -0.266216,-2.1725 -0.259325,-0.8075 -0.625806,-1.53158 -1.09118,-1.98023 -0.663846,-0.63998 -1.599943,-1.39472 -3.03032,-1.93914 0.11665,-0.50066 0.147215,-1.05012 0.09038,-1.59404 -0.08427,-0.80653 -0.342696,-1.59653 -0.862754,-2.12977 -0.452036,-0.4635 -0.790788,-1.10063 -1.165128,-1.73208 -0.374341,-0.63145 -0.949406,-1.37528 -1.631838,-1.76166 -0.804443,-0.45546 -1.651134,-0.45909 -2.476515,-0.44699 -0.82538,0.0121 -1.487089,0.14634 -2.343404,-0.13804 -0.235484,-0.0782 -0.477801,-0.11783 -0.723065,-0.1249 z m -0.02629,0.75923 c 0.180353,0.004 0.347555,0.0466 0.511079,0.0838 1.006924,0.22923 1.7795,0.18938 2.591548,0.17748 0.812049,-0.0119 1.487806,0.005 2.093616,0.34839 0.480153,0.27185 0.994251,0.88183 1.354113,1.48886 0.359862,0.60703 0.716169,1.30186 1.27359,1.87341 0.334308,0.34279 0.580376,0.99176 0.652406,1.68114 0.07203,0.68938 -0.02687,1.41322 -0.248144,1.87012 -0.450738,0.93069 -1.413978,1.86673 -2.379558,2.48966 -1.071525,0.69128 -2.210789,1.32545 -2.704939,1.55789 -0.727729,0.34231 -0.911947,0.74706 -0.437129,0.57517 0.432747,-0.15667 2.273938,-0.86367 3.500316,-1.65485 0.988448,-0.63768 2.112424,-1.45155 2.685219,-2.60633 1.29991,0.49828 2.125357,1.16513 2.750952,1.76823 0.300222,0.28943 0.662715,0.9411 0.895622,1.66635 0.232906,0.72524 0.31971,1.24151 0.236641,1.83561 -0.100468,0.71856 -0.05054,1.4191 -0.06902,2.02295 -0.01848,0.60386 -0.10327,1.11067 -0.376324,1.456 -0.354559,0.44841 -0.683098,0.65751 -1.142122,0.91863 -0.459024,0.26112 -1.011451,0.82613 -1.738654,1.40834 -0.339654,0.27194 -1.05202,0.3145 -1.842185,0.15612 -0.790168,-0.15837 -1.680674,-0.36802 -2.228371,-0.63433 -0.501305,-0.24375 -1.107321,-0.71188 -1.718935,-1.22593 -0.606651,-0.50988 -0.946266,-0.80483 -1.105968,-1.0008 -0.449169,-0.55116 -0.736865,-0.57408 -0.419052,-0.0362 0.128591,0.21765 0.29565,0.55252 0.874258,1.15363 0.578608,0.60111 1.39831,1.334 2.091973,1.67128 0.52965,0.25753 1.278195,0.55106 2.055819,0.7395 0.418548,1.4671 0.497282,2.0902 -0.0493,3.28175 -0.169259,0.368978 -0.542533,0.967084 -0.976146,1.488867 -0.433612,0.521783 -1.213575,1.09568 -1.557886,1.216072 -1.262881,0.441579 -1.81603,1.002528 -2.563612,1.120758 -0.502998,0.07955 -1.051079,-0.15352 -1.543097,-0.442058 -0.492018,-0.288541 -1.09527,-0.708208 -1.975296,-1.000794 -0.906713,-0.30146 -1.303684,-1.017149 -1.521734,-1.990087 -0.240751,-1.074238 -0.284382,-2.018958 -0.03944,-3.252168 0.09422,-0.47435 0.345844,-1.11328 0.616253,-1.75509 0.254524,-0.60411 0.521586,-1.0267 0.657337,-1.20621 0.534373,-0.70663 0.573544,-1.02158 -0.08052,-0.47 -0.09001,0.0759 -0.437166,0.46228 -0.800308,1.04845 -0.388969,0.62787 -0.745556,1.33952 -0.913697,1.96215 -0.320374,1.18635 -0.455037,2.59874 -0.177481,3.837203 0.0049,0.02169 0.01287,0.04249 0.01807,0.06409 -1.86503,0.462081 -3.499403,0.191906 -4.474817,-0.430556 -0.781583,-0.498767 -1.637015,-0.807967 -2.349978,-1.151977 -0.712961,-0.34402 -1.256569,-0.70734 -1.523376,-1.25716 -0.298393,-0.61491 -0.108087,-1.57682 -0.0115,-2.38285 0.09658,-0.80602 0.102383,-1.43749 0.220207,-2.48308 0.06347,-0.56325 0.566474,-1.18992 1.271946,-1.691 0.705472,-0.50107 1.601251,-0.92224 2.259594,-1.04681 0.666145,-0.12605 1.427995,-0.20972 2.239874,-0.1709 0.817343,0.0391 1.389205,0.17406 1.855332,0.30895 0.501887,0.14523 0.706651,0.0181 0.14297,-0.28759 -0.221782,-0.12027 -0.830365,-0.31483 -1.664704,-0.4815 -0.749787,-0.14977 -1.792536,-0.20692 -2.634275,-0.0477 -0.79482,0.1504 -1.828356,0.53709 -2.627702,1.10268 -0.560501,-0.3756 -1.107978,-1.03998 -1.479008,-1.80438 -0.38132,-0.78561 -0.575888,-1.66668 -0.479855,-2.40421 0.225627,-1.73283 0.09276,-3.26127 0.910411,-4.45839 0.799409,-1.17041 2.502142,-1.83231 3.891431,-2.67042 0.418566,-0.25251 1.071917,-0.25586 1.774808,-0.0789 0.70289,0.17697 1.431889,0.52017 1.958862,0.8381 1.177378,0.71033 2.360406,1.81514 2.923503,3.13714 0.225658,0.52978 0.487956,1.31163 0.65898,2.04267 0.180567,0.77183 0.278756,1.12761 0.323738,1.41985 0.0769,0.49959 0.331408,0.76305 0.310592,0.258 -0.0056,-0.13448 -0.02619,-0.62272 -0.11832,-1.39848 -0.09213,-0.77577 -0.372004,-1.76712 -0.649121,-2.54061 -0.498667,-1.39187 -1.517796,-2.50983 -2.729588,-3.34584 0.467794,-0.83001 1.199084,-1.60007 1.983511,-2.09033 0.605002,-0.37812 1.225532,-0.58251 1.766584,-0.57188 z')
		self.svg.write_path(style, 'm 3.794424,-118.09467 c -0.03481,-0.0139 -0.387473,0.76522 -0.773437,1.66992 -0.381703,0.89472 -0.809184,1.94165 -0.982422,2.44336 -0.176438,0.5371 -0.390469,1.30435 -0.589844,2.01172 0.06031,-0.55635 0.109986,-1.12538 0.103516,-1.63477 -0.01279,-1.74744 -0.425929,-3.66291 -0.498047,-3.65039 -0.07275,0.0126 0.183985,1.9486 0.04883,3.63477 -0.07238,0.83501 -0.290636,1.86782 -0.482422,2.63281 -0.354416,-0.68951 -0.858631,-1.64701 -1.449218,-2.51562 -0.780652,-1.11593 -2.309126,-2.07981 -2.347657,-2.02539 -0.04001,0.0565 1.375504,1.16904 1.964844,2.26171 0.304172,0.53913 0.568646,1.10365 0.796875,1.62696 0.372061,0.28889 0.708358,0.56132 0.951172,0.78515 0.450547,0.41534 0.755162,0.86352 0.892578,1.28907 0.0687,0.21277 0.09588,0.4226 0.05859,0.62695 -0.03729,0.20435 -0.155086,0.4041 -0.339844,0.52344 -0.305542,0.19735 -0.71844,0.21836 -1.103516,0.0371 -0.310556,-0.14618 -0.627467,-0.43694 -0.960937,-0.82031 -0.641237,0.0208 -1.474062,0.0584 -2.1875,0.17187 -2.104283,0.29168 -3.519408,1.38936 -3.480469,1.44531 0.03898,0.056 1.530217,-0.86817 3.527344,-0.99804 0.376674,-0.0166 0.788074,-0.008 1.193359,0.01 -0.712154,0.25439 -1.4348,0.51707 -1.767578,0.68164 -2.162568,0.91869 -4.094659,3.07329 -4.046875,3.11914 0.04862,0.0466 2.113703,-1.96681 4.210938,-2.69922 0.365679,-0.10109 1.271937,-0.3498 2.08789,-0.56055 0.07395,-0.0191 0.123337,-0.0305 0.195313,-0.0488 -0.378323,0.25584 -0.792906,0.55853 -1.210938,0.95703 -1.238441,1.16919 -1.630753,2.5038 -1.566406,2.52735 0.06436,0.0236 0.614646,-1.21112 1.859375,-2.1875 0.923232,-0.7175 1.866097,-1.08815 2.203125,-1.16602 0.06017,0.43796 0.121551,1.11761 0.138672,1.69531 -0.0046,1.38515 -0.382684,3.57189 -0.314453,3.58594 0.06715,0.0138 0.587741,-2.14147 0.734375,-3.5625 0.01539,-0.11398 0.0209,-0.24938 0.0332,-0.375 0.06524,0.42004 0.130264,0.87141 0.193359,1.16406 0.346841,2.21188 0.996326,4.22625 1.080079,4.20313 0.08403,-0.0232 -0.38924,-2.07493 -0.556641,-4.26367 -0.0036,-0.21423 -0.0095,-0.56189 -0.01563,-0.86524 0.02034,0.0576 0.04072,0.12785 0.06055,0.18164 0.513637,1.61427 1.790647,3.18206 1.855469,3.13477 0.06636,-0.0484 -1.03386,-1.73019 -1.345704,-3.26758 -0.08436,-0.53103 -0.190887,-1.23418 -0.248046,-1.73242 0.450157,0.021 1.107513,0.0847 1.695312,0.19336 1.164725,0.23043 2.402663,0.98994 2.443359,0.93164 0.03983,-0.0571 -1.105126,-0.96654 -2.326171,-1.36719 -0.325602,-0.11217 -0.655915,-0.18972 -0.984376,-0.27539 0.516501,-0.0598 1.137006,-0.1208 1.621094,-0.15625 2.216152,-0.0729 5.151435,0.70788 5.171875,0.63867 0.02015,-0.0682 -2.871752,-1.01257 -5.171875,-1.08984 -0.536234,-0.0394 -1.221307,-0.0518 -1.767578,-0.0645 0.410869,-0.0906 0.883277,-0.18959 1.404297,-0.30469 1.68587,-0.34236 3.617698,-1.23793 3.589844,-1.30469 -0.02823,-0.0677 -2.017753,0.6758 -3.660157,0.85938 -0.68941,0.0665 -1.333269,0.1164 -1.789062,0.13672 0.05402,-0.18849 0.172573,-0.51714 0.359375,-0.97461 0.257407,-0.63039 0.571071,-1.34083 0.787109,-1.74024 0.257372,-0.46166 0.719406,-1.0516 1.111328,-1.53515 0.390428,-0.48171 0.706164,-0.85041 0.679688,-0.87696 -0.02646,-0.0265 -0.396678,0.28997 -0.845703,0.72461 -0.444283,0.43005 -0.980416,0.99029 -1.320313,1.44141 -0.200435,0.26077 -0.436266,0.65875 -0.669922,1.07031 0.144547,-0.74342 0.306939,-1.55708 0.427735,-2.12304 0.09342,-0.49024 0.445698,-1.55421 0.759765,-2.48047 0.315275,-0.92983 0.597322,-1.73608 0.5625,-1.75 z')
		self.svg.write_path(style, 'm -0.916513,-109.19819 c -0.08002,-0.092 -0.155364,-0.1568 -0.238281,-0.26367 -0.1926,-0.24822 -0.664725,-0.74012 -1.285156,-1.32226 -0.09208,-0.0408 -0.153678,-0.0727 -0.248047,-0.11328 -1.388077,-0.6083 -3.187994,-0.65792 -3.19336,-0.58985 -0.0055,0.0696 1.769599,0.29863 2.992188,0.99219 0.943426,0.53918 1.739463,1.0834 1.972656,1.29687 z')
		self.svg.write_path(style, 'm -7.806877,-115.72644 c 1.94457,0.58391 6.643912,3.73434 8.129359,5.1037 0.836444,0.77108 1.096168,1.65836 0.65443,1.94368 -0.441738,0.28531 -1.060198,0.0838 -1.882086,-0.97545 -0.735118,-0.94742 -4.303093,-4.33376 -7.586861,-5.69825 -0.596704,-0.24795 -0.206304,-0.64136 0.685158,-0.37368 z')

		self.svg.write_circle(style, -16.488615, -113.60835, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')
		self.svg.write_circle(style, -15.173941, -112.97731, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')
		self.svg.write_circle(style, -14.332552, -115.29114, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')
		self.svg.write_circle(style, -15.857573, -115.73812, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')
		self.svg.write_circle(style, -17.356298, -115.73812, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')
		self.svg.write_circle(style, -17.803286, -114.39716, 0.57845598, transform='matrix(0.99754986,0.06995909,-0.06995909,0.99754986,0,0)')

		self.end_resource(encircle)

	def draw_banana(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		# Thick outline bananas drawn in back.
		thick_style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#f6ff7d;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(thick_style, 'm 8.78082,-121.13744 c 0.34471,1.36915 0.66512,3.60435 0.73321,4.6643 -0.49421,3.88746 -1.33998,7.74843 -3.32367,10.57326 -2.40596,3.42618 -5.41293,5.37866 -11.11869,7.679247 -0.60011,0.241966 -1.22538,0.289326 -1.46855,0.679535 -0.16319,0.261865 0.37387,1.454696 0.69075,1.620824 0.62648,0.328443 1.07253,0.177853 1.77872,0.218405 2.75809,0.158378 5.05424,-0.146839 8.30722,-1.151769 2.54386,-0.78586 5.74014,-3.251012 7.23795,-5.452222 1.82616,-2.68377 2.69924,-6.37346 2.5117,-9.61419 -0.15399,-2.66107 -2.58676,-5.30143 -2.58676,-5.30143 -0.24357,-1.33177 -0.66717,-2.90679 -1.14995,-4.64892 -0.58055,0.0153 -1.40915,0.37101 -1.61193,0.73296 z')
		self.svg.write_path(thick_style, 'm 7.87879,-120.99354 c 0.0285,1.61295 0.38658,3.34631 0.31301,4.75879 -1.00555,3.30202 -3.33857,6.81255 -5.886,9.14173 -3.35597,3.06847 -7.87513,4.2358 -12.26178,5.43386 -0.6242,0.17048 -1.27338,-0.11771 -1.42138,0.51219 -0.15176,0.64587 0.0489,1.217046 0.31467,1.704455 0.33862,0.621027 0.89583,0.442404 1.59118,0.572223 2.67893,0.500153 5.58439,0.941055 8.23815,0.321149 2.59268,-0.605634 5.07646,-1.926877 7.10245,-3.654337 2.47014,-2.10616 4.44803,-4.97661 5.01611,-8.17267 0.39839,-2.24136 -0.605,-3.85067 -0.89708,-6.10835 -0.2048,-1.58315 0.19285,-2.72685 -0.1333,-4.91236 -0.55377,0.056 -1.33048,0.14727 -1.97603,0.40332 z')
		self.svg.write_path(thick_style, 'm 6.86373,-121.02142 c -0.0162,1.67579 0.0613,3.31817 -0.2121,4.71569 -1.71528,2.99538 -4.19007,5.95351 -7.46659,7.74634 -4.28888,2.34678 -7.01389,2.86781 -11.88451,2.04623 -0.63804,-0.10762 -0.91664,-0.4723 -1.38982,-0.031 -0.50866,0.47443 -0.41626,1.00712 -0.0714,1.61117 0.35071,0.61429 0.52944,0.41897 1.09534,0.84336 1.98511,1.48869 3.74434,2.06677 6.44298,2.04779 2.77975,-0.0196 6.56154,-0.29036 8.90025,-1.56286 2.85139,-1.55146 4.93737,-3.4518 6.15239,-6.46199 0.85208,-2.11101 -0.0744,-4.05058 0.10539,-6.31996 0.12609,-1.59136 0.14328,-2.6534 0.0968,-4.5494 -0.63016,-0.20606 -1.24784,-0.12786 -1.76873,-0.0854 z')
		
		# Lines and redraw front bananas
		line_style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#737828;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.72000003;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#f7ff7d;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.72000003;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(line_style, 'm 2.51814,-107.7686 c -2.07228,1.54391 -3.74795,2.09142 -6.33636,2.57335 -1.72347,0.32089 -3.84937,0.49004 -6.70834,0.0497 -0.53792,-0.0828 -0.32892,0.17921 0.20456,0.28719 2.7148,0.54957 5.27205,0.1766 6.8941,-0.0851 2.63047,-0.42445 3.77137,-0.81223 6.04492,-2.32391 0.12768,-0.58475 -0.15949,-0.11588 -0.0988,-0.5012 z')
		self.svg.write_path(style, 'm 7.87879,-120.99354 c 0.0285,1.61295 0.38658,3.34631 0.31301,4.75879 -1.00555,3.30202 -3.33857,6.81255 -5.886,9.14173 -3.35597,3.06847 -7.87513,4.2358 -12.26178,5.43386 -0.6242,0.17048 -1.27338,-0.11771 -1.42138,0.51219 -0.15176,0.64587 0.0489,1.217046 0.31467,1.704455 0.33862,0.621027 0.89583,0.442404 1.59118,0.572223 2.67893,0.500153 5.58439,0.941055 8.23815,0.321149 2.59268,-0.605634 5.07646,-1.926877 7.10245,-3.654337 2.47014,-2.10616 4.44803,-4.97661 5.01611,-8.17267 0.39839,-2.24136 -0.605,-3.85067 -0.89708,-6.10835 -0.2048,-1.58315 0.19285,-2.72685 -0.1333,-4.91236 -0.55377,0.056 -1.33048,0.14727 -1.97603,0.40332 z')
		self.svg.write_path(line_style, 'm 4.80468,-106.35032 c -1.8366,1.79924 -3.59964,2.90171 -6.00807,3.97021 -1.77027,0.7854 -3.77092,1.22784 -6.52266,1.38661 -0.55888,0.0322 -0.28397,0.22297 0.27546,0.20184 2.71946,-0.10273 4.80476,-0.55229 6.63126,-1.36264 2.43383,-1.07977 4.50278,-2.38649 6.25386,-4.13127 0.79789,-0.79502 1.95252,-2.23179 2.69967,-3.4881 0.21909,-0.3684 0.3354,-1.28542 0.2234,-1.22755 -1.02526,2.0653 -2.6769,3.7927 -3.55292,4.6509 z')
		self.svg.write_path(style, 'm 8.78082,-121.13744 c 0.34471,1.36915 0.66512,3.60435 0.73321,4.6643 -0.49421,3.88746 -1.33998,7.74843 -3.32367,10.57326 -2.40596,3.42618 -5.41293,5.37866 -11.11869,7.679247 -0.60011,0.241966 -1.22538,0.289326 -1.46855,0.679535 -0.16319,0.261865 0.37387,1.454696 0.69075,1.620824 0.62648,0.328443 1.07253,0.177853 1.77872,0.218405 2.75809,0.158378 5.05424,-0.146839 8.30722,-1.151769 2.54386,-0.78586 5.74014,-3.251012 7.23795,-5.452222 1.82616,-2.68377 2.69924,-6.37346 2.5117,-9.61419 -0.15399,-2.66107 -2.58676,-5.30143 -2.58676,-5.30143 -0.24357,-1.33177 -0.66717,-2.90679 -1.14995,-4.64892 -0.58055,0.0153 -1.40915,0.37101 -1.61193,0.73296 z')
		self.svg.write_path(line_style, 'm 11.17023,-113.86439 c -0.011,1.77939 -0.15804,3.37671 -0.70318,5.01283 -0.47684,1.43111 -0.94867,2.44937 -1.96984,4.0718 -1.36954,2.17594 -2.93041,3.68885 -5.19121,5.042 -1.55728,0.93208 -2.86824,1.715367 -5.59247,2.278309 -0.52698,0.108898 -1.00078,0.418847 -0.4677,0.345229 2.76772,-0.382229 4.71945,-1.233835 6.39997,-2.314868 2.23928,-1.44048 3.93705,-2.7933 5.38929,-5.10065 1.02607,-1.63022 1.47452,-2.54995 1.94328,-4.06882 0.56259,-1.82288 0.63573,-3.73693 0.46838,-5.5182 -0.0877,-0.93395 -0.2737,-0.2032 -0.27652,0.25237 z')

		self.end_resource(encircle)

	def draw_jellyfish(self, id='', transform='', encircle=False):
		self.start_resource(id, transform, encircle)

		# Fat twisted tentacle back (1a)
		fill_gradient = 'gradientJellyfishTentacle1a'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 0.83789,-115.00977 c -0.25985,0.009 -0.51047,0.0425 -0.71875,0.0937 -0.41483,0.10211 -0.94188,0.45779 -0.92773,0.88477 0.0153,0.45997 0.64485,0.33191 0.59179,0.78906 -0.0532,0.45809 -0.66995,0.26218 -0.76757,0.71289 -0.0843,0.389 0.36287,0.37667 0.3125,0.77149 -0.0533,0.41794 -0.49701,0.49476 -0.57813,0.9082 -0.0764,0.38923 0.30047,0.57469 0.18164,0.95313 -0.16401,0.5223 -0.93166,0.19596 -1.06641,0.72656 -0.10082,0.39697 0.56535,0.30165 0.43946,0.6914 -0.12751,0.39476 -0.70925,0.25712 -0.88086,0.63477 -0.16089,0.35408 0.40615,0.4784 0.26758,0.8418 -0.0917,0.24039 -0.43219,0.27628 -0.48828,0.52734 -0.10242,0.45849 0.43219,0.62203 0.42773,1.0918 -0.004,0.43798 -0.44527,0.50788 -0.38281,0.9414 0.0566,0.3926 0.63387,0.54282 0.85937,0.86914 0.0702,0.1016 0.12496,0.23344 0.17383,0.38086 l 0.53711,-1.07421 1.69726,-1.5293 c -7.9e-4,-0.006 0.003,-0.0114 0.002,-0.0176 -0.0733,-0.38533 -0.543,-0.33872 -0.47266,-0.72461 0.0897,-0.49211 0.77909,0.17574 0.95899,-0.29101 0.16018,-0.41558 -0.42808,-0.68432 -0.28321,-1.10547 0.14093,-0.4097 0.57658,-0.009 0.76953,-0.39649 0.13902,-0.27949 -0.10099,-0.60291 0.0332,-0.88476 0.16824,-0.35342 0.65412,-0.0221 0.76172,-0.39844 0.098,-0.34287 -0.33635,-0.48666 -0.28711,-0.83984 0.0452,-0.32396 0.37359,-0.25043 0.41992,-0.57422 0.0476,-0.33254 -0.24257,-0.52281 -0.21289,-0.85743 0.035,-0.39483 0.44518,-0.33744 0.47851,-0.73242 0.0379,-0.44934 -0.49796,-0.55172 -0.43359,-0.99804 0.0438,-0.3034 0.39701,-0.29153 0.3457,-0.59375 -0.1077,-0.6344 -0.97826,-0.829 -1.75781,-0.80079 z')
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 0.82227,-115.46289 c -0.25806,0.009 -0.50034,0.0479 -0.72461,0.0977 l 0.0215,0 -0.10742,0.0117 c -0.2819,0.0694 -0.56385,0.20773 -0.80859,0.41602 -0.24474,0.20829 -0.47428,0.51733 -0.46094,0.91992 0.007,0.21818 0.11329,0.4345 0.23828,0.5586 0.0973,0.0966 0.17663,0.13157 0.24805,0.16992 -0.0837,0.0303 -0.19305,0.0653 -0.32227,0.1582 -0.14179,0.10198 -0.2854,0.2906 -0.33203,0.50586 -0.0385,0.1775 -0.0143,0.37918 0.0566,0.52344 0.071,0.14425 0.16134,0.22595 0.21094,0.27539 0.0248,0.0247 0.019,0.018 0.0273,0.0273 -0.008,0.0456 -0.0173,0.0627 -0.13086,0.17188 -0.1245,0.11966 -0.36023,0.33545 -0.42969,0.68945 -0.0677,0.34501 0.0763,0.63019 0.14258,0.76562 0.0643,0.13152 0.0604,0.10234 0.0488,0.13672 -0.0213,0.0106 -0.0954,0.0339 -0.20898,0.0586 -0.11559,0.0251 -0.26822,0.0507 -0.44336,0.14844 -0.17514,0.0977 -0.35652,0.30489 -0.41797,0.54687 -0.0532,0.20954 0.0159,0.4842 0.14062,0.62695 0.0533,0.061 0.0854,0.0647 0.13282,0.0977 -0.18527,0.0622 -0.5239,0.16107 -0.68946,0.52539 -0.0855,0.18816 -0.0785,0.43362 -0.0117,0.5918 0.0668,0.15817 0.15406,0.24528 0.20703,0.30664 0,0 0.002,0.002 0.002,0.002 -0.0153,0.0123 0.006,-0.01 -0.0312,0.0156 -0.11075,0.0755 -0.34672,0.23284 -0.41601,0.54296 -0.09,0.40306 0.1312,0.74646 0.25976,0.91407 0.12855,0.1676 0.15881,0.20788 0.15821,0.27148 -6.2e-4,0.0677 -0.005,0.0564 -0.11524,0.19141 -0.11036,0.13497 -0.31872,0.44983 -0.26562,0.81836 0.058,0.40247 0.35186,0.61948 0.55273,0.76172 0.20086,0.14223 0.354,0.25713 0.38281,0.29882 0.0586,0.0848 0.15548,0.36815 0.23438,0.67969 0.004,0.0146 0.008,0.0302 0.0117,0.0449 l 0.55469,-1.11328 c -0.0229,-0.0404 -0.0314,-0.0836 -0.0586,-0.12304 -0.1967,-0.28464 -0.44675,-0.4091 -0.60548,-0.52149 -0.15872,-0.11239 -0.1811,-0.16612 -0.17968,-0.15625 -0.009,-0.065 -0.0279,-10e-4 0.0684,-0.11914 0.0962,-0.11767 0.17435,-0.39928 0.17773,-0.76953 0.004,-0.40617 -0.18272,-0.6506 -0.29492,-0.79688 -0.19444,-0.16004 -0.0443,-0.14313 -0.0508,-0.16406 0.0965,-0.0657 0.31457,-0.18429 0.42383,-0.4707 0.0741,-0.19427 0.0518,-0.44615 0,-0.55078 -0.13149,-0.26556 -0.0905,-0.33567 -0.0859,-0.33789 0.13935,-0.0679 0.35038,-0.10827 0.48828,-0.19727 0.1379,-0.089 0.24752,-0.2285 0.3125,-0.42969 0.0655,-0.20266 0.0138,-0.48961 -0.11133,-0.64062 -0.0587,-0.0709 -0.095,-0.0766 -0.14648,-0.11133 0.004,-9.7e-4 0.003,-9.3e-4 0.008,-0.002 0.11335,-0.0246 0.26704,-0.0509 0.44141,-0.14258 0.17437,-0.0917 0.36051,-0.28447 0.43555,-0.52344 0.10642,-0.33894 -0.0264,-0.65507 -0.0996,-0.80469 -0.0732,-0.14961 -0.077,-0.15304 -0.0684,-0.19726 0.0117,-0.0594 0.0386,-0.0866 0.16992,-0.21289 0.13137,-0.12627 0.36798,-0.36331 0.41406,-0.72461 0.0232,-0.18158 -0.0192,-0.37391 -0.0937,-0.50781 -0.0647,-0.11635 -0.12975,-0.17572 -0.17773,-0.22266 0.0238,-0.0105 0.0252,-0.0132 0.0684,-0.0293 0.0888,-0.0331 0.21867,-0.0744 0.36132,-0.1875 0.14266,-0.11308 0.27164,-0.32369 0.29688,-0.54101 0.0247,-0.21317 -0.052,-0.45731 -0.17578,-0.59961 -0.12377,-0.14231 -0.24697,-0.19919 -0.32617,-0.24219 -0.0491,-0.0267 -0.0532,-0.03 -0.0703,-0.041 0.006,-0.0329 0.0243,-0.0926 0.12891,-0.18164 0.11913,-0.10138 0.30652,-0.19188 0.43945,-0.22461 0.34483,-0.0849 0.89074,-0.1153 1.30274,-0.0352 0.20599,0.0401 0.37681,0.10768 0.47656,0.17773 0.0778,0.0547 0.0944,0.10224 0.11328,0.15821 -0.0977,0.0841 -0.27447,0.22105 -0.31445,0.49804 -0.0581,0.40255 0.19089,0.71905 0.31445,0.85938 0.12356,0.14032 0.11901,0.11919 0.11524,0.16406 -0.004,0.0419 0.0481,-0.0375 -0.0625,0.0469 -0.11064,0.0843 -0.38278,0.33256 -0.41407,0.68555 -0.0269,0.30318 0.0932,0.53651 0.1543,0.66406 0.0519,0.10833 0.0512,0.12198 0.0508,0.14454 0.0659,-0.039 0.009,0.0338 0.01,0.0254 5.8e-4,-0.004 -0.01,-0.0214 -0.01,-0.0254 -0.005,0.003 7.1e-4,-0.002 -0.006,0.002 -0.0939,0.0628 -0.36236,0.28506 -0.40625,0.59961 -0.0459,0.32941 0.12683,0.54807 0.22266,0.67969 -0.0673,0.005 -0.12194,9.5e-4 -0.22071,0.0352 -0.15723,0.0543 -0.34564,0.20178 -0.43554,0.39063 -0.14029,0.29463 -0.0781,0.56119 -0.0527,0.71093 0.0167,0.0987 0.0148,0.0931 0.0156,0.10938 -0.0784,-4.5e-4 -0.20515,-0.0122 -0.37696,0.0586 -0.17453,0.0719 -0.34249,0.25821 -0.4082,0.44922 -0.0714,0.20766 -0.0485,0.4316 0.008,0.58985 0.0557,0.1572 0.12978,0.26676 0.1836,0.35156 -0.0927,-0.0235 -0.18273,-0.0593 -0.35547,-0.0293 -0.11198,0.0194 -0.2544,0.0812 -0.35547,0.18945 -0.10107,0.10827 -0.14994,0.24101 -0.17187,0.36133 -0.0331,0.18178 0.004,0.39538 0.0957,0.54102 0.0917,0.14563 0.19792,0.21871 0.26562,0.26758 0.0926,0.0668 0.074,0.0523 0.0762,0.0547 -0.0459,0.0493 -0.13248,0.12402 -0.2461,0.21289 -0.12234,0.0957 -0.26649,0.19962 -0.39648,0.36524 -0.0993,0.12651 -0.18598,0.33399 -0.17969,0.54883 l 1.63477,-1.47071 c -0.0405,-0.0402 -0.0859,-0.0739 -0.13086,-0.12304 0.0467,0.002 0.0651,0.0183 0.12109,0.0117 0.082,-0.01 0.174,-0.0615 0.26172,-0.11524 l 0.25195,-0.22851 c 0.0245,-0.0368 0.051,-0.0733 0.0664,-0.11329 0.0791,-0.20519 0.0638,-0.43238 0.01,-0.59375 -0.0542,-0.16136 -0.13067,-0.27278 -0.18554,-0.35937 -0.027,-0.0425 -0.0325,-0.0549 -0.0488,-0.084 0.0722,-7.4e-4 0.13677,0.005 0.25195,-0.0332 0.1669,-0.0559 0.3494,-0.20963 0.44141,-0.39453 0.14601,-0.29355 0.0863,-0.56494 0.0605,-0.7168 -0.0159,-0.0937 -0.0128,-0.0865 -0.0137,-0.10742 0.008,-5.6e-4 0.003,4.7e-4 0.0117,0 0.081,-0.004 0.20509,-5.2e-4 0.3711,-0.0723 0.166,-0.0717 0.3402,-0.26409 0.39648,-0.46094 0.051,-0.17831 0.0287,-0.37506 -0.0254,-0.51367 -0.0541,-0.13861 -0.12427,-0.22823 -0.17188,-0.29297 -0.0738,-0.10039 -0.0609,-0.0807 -0.0605,-0.0742 0.0953,-0.0644 0.35769,-0.28168 0.40234,-0.59375 0.0437,-0.30501 -0.0742,-0.55089 -0.13867,-0.68555 -0.0645,-0.13465 -0.0731,-0.16582 -0.0703,-0.19726 0.004,-0.0418 -0.0486,0.0378 0.0625,-0.0469 0.11111,-0.0847 0.38426,-0.33441 0.41406,-0.6875 0.0341,-0.40446 -0.21721,-0.7011 -0.33594,-0.83594 -0.10683,-0.12131 -0.0954,-0.0951 -0.0898,-0.12109 -0.0182,0.0108 -0.0118,-0.001 -0.01,-0.0137 -6.3e-4,0.004 0.0104,0.0108 0.01,0.0137 0.008,-0.005 0.009,-0.002 0.041,-0.0293 0.0512,-0.0426 0.1381,-0.11039 0.21289,-0.24023 0.0748,-0.12984 0.10704,-0.31768 0.0801,-0.47656 -0.0573,-0.33781 -0.26804,-0.61519 -0.51562,-0.78907 -0.24758,-0.17387 -0.53164,-0.26959 -0.82227,-0.32617 -0.29063,-0.0566 -0.59023,-0.0748 -0.8789,-0.0645 z m -0.81055,0.10937 c 0.0259,-0.006 0.0593,-0.006 0.0859,-0.0117 l -0.0332,0 -0.0527,0.0117 z')
		
		# Fat middle tentacle (2)
		fill_gradient = 'gradientJellyfishTentacle2'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm -2.32478,-113.16093 c 0.0277,0.45939 -0.64599,0.40039 -0.56066,0.85263 0.0777,0.41199 0.66442,0.0907 0.78699,0.4915 0.14127,0.46211 -0.63454,0.59826 -0.47763,1.0553 0.13343,0.38863 0.57799,0.26925 0.72449,0.65311 0.18937,0.49624 -0.64019,0.50096 -0.41513,0.98207 0.2323,0.49659 0.89875,0.0572 1.13518,0.55178 0.21147,0.44241 -0.53046,0.43204 -0.29549,0.86243 0.21883,0.40083 0.73792,0.0521 1.02627,0.40625 0.27547,0.33829 -0.18619,0.52866 0.0786,0.87539 0.28666,0.37539 0.67685,0.0436 0.94547,0.43215 0.2279,0.32962 -0.10653,0.47149 0.11519,0.8053 0.16383,0.24665 0.53513,0.36343 0.72764,0.5884 0.34534,0.40356 -0.13621,0.6006 0.0678,1.09099 0.1363,0.32755 0.54846,0.62398 0.67049,0.95711 0.17914,0.48905 -0.0783,0.77626 -0.096,1.29679 0.043,0.84092 -0.41185,1.16822 -0.70173,1.464613 -0.4353,0.504933 -1.10387,0.929451 -1.46108,1.492339 -0.41946,0.660983 -0.84238,1.412833 -0.84238,1.412833 0,0 0.60629,-0.297605 1.28699,-0.783851 0.40756,-0.610352 1.11792,-0.407707 1.66108,-0.90127 0.42408,-0.385354 0.88931,-0.280343 1.16199,-0.784312 0.25169,-0.465168 0.73804,-0.986732 0.72855,-1.515542 -0.004,-0.22866 -0.26413,-0.62308 -0.23928,-0.85042 0.0487,-0.44538 0.44033,-0.60949 0.30622,-1.03699 -0.0947,-0.30179 -0.33335,-0.2669 -0.43344,-0.56694 -0.098,-0.2938 0.28088,-0.63189 0.21025,-0.93344 -0.0813,-0.34721 -0.51981,-0.42553 -0.65219,-0.75666 -0.19334,-0.48362 0.3213,-0.46857 0.0647,-0.9218 -0.14963,-0.26428 -0.59671,-0.3862 -0.71469,-0.66605 -0.17216,-0.40836 0.27354,-0.8251 0.11114,-1.23744 -0.13763,-0.34945 -0.5686,-0.24328 -0.73522,-0.57988 -0.16022,-0.32366 0.15463,-0.67667 -0.0603,-0.96691 -0.19365,-0.26153 -0.51447,-0.065 -0.69102,-0.3384 -0.21989,-0.34048 0.32469,-0.55129 0.1165,-0.89905 -0.19158,-0.32 -0.73172,-0.056 -0.8861,-0.39553 -0.17258,-0.37953 0.58933,-0.45107 0.44416,-0.84191 -0.15575,-0.41932 -0.79451,-0.0585 -0.90663,-0.4915 -0.11752,-0.4539 0.66209,-0.45835 0.59727,-0.92271 -0.0685,-0.49045 -0.84656,-0.26459 -0.93788,-0.7513 -0.0832,-0.4432 0.68427,-0.65094 0.49594,-1.06066 -0.46795,-1.01806 -2.551,-0.90909 -3.35876,-0.13259 -0.25489,0.24502 -0.16896,0.7501 0,1.06067 0.2851,0.52404 0.9667,0.40801 1.0026,1.0035 z')
		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm -1.51953,-116.28125 c -0.77924,-0.003 -1.58352,0.21753 -2.11914,0.73242 -0.25703,0.24708 -0.31202,0.57764 -0.29688,0.85352 0.0151,0.27587 0.0948,0.52898 0.21289,0.74609 0.22116,0.40651 0.59378,0.56045 0.7793,0.6582 0.0928,0.0489 0.14067,0.0848 0.15234,0.0977 0.005,0.005 0.004,0.0208 0.006,0.0234 -0.016,0.0123 -0.0272,0.0221 -0.084,0.0586 -0.0793,0.051 -0.20068,0.11873 -0.31641,0.26758 -0.11573,0.14885 -0.18358,0.40182 -0.14257,0.61914 0.0405,0.21482 0.21188,0.42783 0.3789,0.51172 0.13561,0.0681 0.22853,0.0725 0.3125,0.082 -0.009,0.009 -0.006,0.008 -0.0156,0.0176 -0.0788,0.0749 -0.18986,0.16829 -0.28516,0.33398 -0.0953,0.1657 -0.14289,0.4356 -0.0644,0.66407 0.12115,0.35287 0.44749,0.52413 0.5957,0.59179 0.0821,0.0375 0.0633,0.037 0.0742,0.043 -0.0118,0.0101 -0.004,0.004 -0.0195,0.0156 -0.0786,0.0623 -0.20555,0.14555 -0.31055,0.33007 -0.105,0.18453 -0.11306,0.48258 -0.0117,0.69922 0.10386,0.22202 0.30926,0.38901 0.49414,0.45703 0.18489,0.068 0.33838,0.0711 0.45117,0.0781 0.0409,0.003 0.0429,0.005 0.0723,0.008 -0.0638,0.053 -0.13088,0.0917 -0.19727,0.22461 -0.094,0.18822 -0.0748,0.47752 0.0312,0.67188 0.10372,0.18997 0.29136,0.33425 0.45899,0.39257 0.16763,0.0583 0.30489,0.0587 0.40625,0.0625 0.0922,0.003 0.14773,0.008 0.17773,0.0137 -0.001,0.004 -2e-4,-9.6e-4 -0.002,0.004 -0.0236,0.0657 -0.0721,0.17935 -0.0762,0.34571 -0.004,0.16635 0.0612,0.36693 0.17773,0.51953 0.24192,0.31679 0.63901,0.37441 0.80274,0.38672 0.0819,0.006 0.12008,0.0145 0.12304,0.0156 0.003,0.001 -0.0133,-0.0169 0.008,0.0137 0.0382,0.0553 0.0173,-0.0739 -0.01,0.043 -0.0271,0.11687 -0.0657,0.47762 0.11914,0.75586 0.1505,0.22657 0.34049,0.33931 0.48438,0.43164 0.14389,0.0923 0.249,0.1661 0.27734,0.19922 0.041,0.0479 0.0208,0.0318 0.0195,0.0156 -0.001,-0.0162 0.003,-7.4e-4 -0.0195,0.0684 -0.0444,0.13821 -0.1643,0.50781 -0.006,0.88868 0.11146,0.26786 0.28044,0.44294 0.41406,0.59765 0.13362,0.15471 0.22849,0.28645 0.24805,0.33985 0.0558,0.15243 0.0465,0.22018 0.01,0.38476 -0.0367,0.16458 -0.13831,0.5039 -0.0703,0.88281 0.0503,0.28027 -0.34065,0.33828 -0.49022,0.8418 -0.18695,0.62931 -0.74451,0.63952 -1.16404,1.093751 -0.42123,0.456065 -0.85486,1.102721 -1.26563,1.75 -0.47205,0.68666 -0.70255,2.186013 -0.51168,3.05468 0.1123,0.511055 0.37714,1.273978 1.32039,1.798781 0.45027,0.250522 0.52605,0.03638 -0.13675,-0.634725 -0.66166,-0.669957 -0.62532,-1.616202 -0.54491,-2.138672 0.076,-0.493837 0.12287,-1.012735 0.72672,-1.460934 0.32118,-0.2384 1.1209,-0.40793 1.76172,-0.990234 0.39453,-0.358507 1.85316,-0.695461 2.19336,-1.324219 0.10161,-0.187798 0.19086,-0.498703 0.35937,-0.78125 0.16851,-0.282548 0.4311,-0.552078 0.42383,-0.957028 -0.005,-0.28037 -0.10383,-0.43579 -0.16406,-0.58594 -0.0602,-0.15015 -0.0691,-0.28991 -0.0781,-0.20703 0.0108,-0.0991 0.0587,-0.17163 0.16211,-0.34961 0.10341,-0.17798 0.23442,-0.52229 0.125,-0.87109 -0.0812,-0.25866 -0.27798,-0.43443 -0.36328,-0.50196 -0.0853,-0.0675 -0.0579,-0.0291 -0.0723,-0.0723 0.0225,0.0674 0.004,0.0219 0.0762,-0.13282 0.0717,-0.15475 0.23106,-0.40062 0.14649,-0.76171 -0.0799,-0.34116 -0.32872,-0.52849 -0.47266,-0.63868 -0.14393,-0.11019 -0.19402,-0.16375 -0.20117,-0.18164 -0.0231,-0.0577 -0.009,-0.0375 -0.0137,-0.0176 -0.005,0.0199 -0.008,0.0141 0.0312,-0.0469 0.039,-0.061 0.12259,-0.1826 0.14648,-0.36523 0.0239,-0.18264 -0.0296,-0.37838 -0.125,-0.54688 -0.15487,-0.27354 -0.36801,-0.3837 -0.50781,-0.47851 -0.1398,-0.0948 -0.19456,-0.16664 -0.18359,-0.14063 -0.0108,-0.0256 -0.007,-0.0934 0.0625,-0.29883 0.0692,-0.20547 0.20431,-0.54482 0.0527,-0.92969 -0.13319,-0.33819 -0.45661,-0.48561 -0.60742,-0.54687 -0.15081,-0.0613 -0.138,-0.0552 -0.14453,-0.0684 7.4e-4,10e-4 -0.005,-0.0356 0.0293,-0.21094 0.0338,-0.17537 0.0911,-0.52452 -0.13086,-0.82422 -0.18396,-0.24844 -0.45885,-0.29205 -0.59961,-0.31445 0.0416,-0.0683 0.10118,-0.15543 0.13867,-0.30664 0.0408,-0.16457 0.0189,-0.39981 -0.0879,-0.57813 -0.10977,-0.18335 -0.29843,-0.3001 -0.44727,-0.34765 -0.29373,0.0136 -0.0297,-0.0977 -0.0469,-0.15425 0.1084,-0.15165 0.10798,-0.25226 0.0254,-0.47461 -0.0812,-0.21869 -0.21035,-0.36747 -0.35938,-0.47266 -0.34728,-0.24511 -0.0928,-0.30898 -0.0508,-0.40427 0.0751,-0.17044 0.21884,-0.3904 0.18555,-0.62891 l 0,-0.002 c -0.0339,-0.24288 -0.19787,-0.46185 -0.35938,-0.56836 -0.1615,-0.10651 -0.30599,-0.14269 -0.41406,-0.17578 -0.0656,-0.0201 -0.0832,-0.0296 -0.11719,-0.043 0.0288,-0.034 0.0543,-0.0678 0.11328,-0.12695 0.082,-0.0823 0.19015,-0.18003 0.2793,-0.34961 0.0891,-0.16959 0.12108,-0.45291 0.0195,-0.67383 -0.34234,-0.74479 -1.17974,-0.99662 -1.95898,-1 z m -0.004,0.90039 c 0.54064,0.002 0.90974,0.19908 1.06641,0.44336 -0.0178,0.0199 -0.0137,0.0195 -0.0391,0.0449 -0.076,0.0763 -0.18087,0.17182 -0.27735,0.32031 -0.0965,0.1485 -0.17793,0.38269 -0.13281,0.62305 0.0453,0.24171 0.30278,0.44524 0.4707,0.53516 0.44284,0.23711 0.14432,0.4319 0.10348,0.55662 -0.0605,0.18463 -0.17882,0.42964 -0.11915,0.66016 0.0578,0.22331 0.25421,0.4361 0.44141,0.46875 0.1657,0.0289 0.1381,0.17649 0.11719,0.23052 -0.0692,0.17892 -0.14971,0.46246 -0.0527,0.67578 0.0886,0.19488 0.15092,0.31723 0.30273,0.37891 0.3301,0.13411 0.2052,0.28923 0.26753,0.37708 -0.0388,0.16795 -0.007,0.40607 0.10547,0.58008 0.18232,0.28233 0.52371,0.35669 0.6543,0.375 0.13058,0.0183 0.0587,-0.004 0.0527,-0.0117 -0.007,-0.009 5.2e-4,-0.0374 -0.0293,0.11719 -0.0298,0.15461 -0.11408,0.45609 0.0469,0.78125 0.16009,0.32341 0.47254,0.44479 0.61328,0.50195 0.14074,0.0572 0.10299,0.0317 0.10742,0.043 0.0108,0.0275 0.004,0.10443 -0.0664,0.3125 -0.07,0.20807 -0.13989,0.47467 0.0215,0.85743 0.12895,0.30586 0.40404,0.47985 0.55468,0.58203 0.40906,0.0896 0.0565,0.33107 0.084,0.49218 -0.0387,0.16726 -0.0189,0.36868 0.0547,0.55274 0.12523,0.31324 0.25213,0.49519 0.38087,0.59375 0.26093,0.0959 0.0355,0.19207 0.0567,0.30664 -0.0756,0.16313 -0.0619,0.38687 0.0585,0.74805 0.0857,0.25683 0.18036,0.42886 0.27344,0.47851 0.14277,0.0762 0.0505,0.24274 0.0352,0.27929 -0.0545,0.13054 -0.24144,0.3568 -0.2793,0.70312 -0.0339,0.31022 0.0481,0.49262 0.13867,0.64063 0.20931,0.3421 0.0292,0.56104 -0.19918,0.80859 -0.17904,0.19402 -0.10187,0.50388 -0.25195,0.781251 -0.20516,0.379179 -1.53857,0.70694 -1.99219,1.119141 -0.14387,0.130733 -0.66068,0.32888 -1.18945,0.625 0.39436,-0.438022 0.70201,-0.797063 0.87696,-1 0.285,-0.330594 0.90954,-0.345441 1.0996,-1.001957 0.0888,-0.306775 0.73858,-0.759215 0.67388,-0.970695 -0.1182,-0.38658 -0.0156,-0.76686 0.039,-1.08204 0.0405,-0.23362 0.0803,-0.52081 -0.043,-0.85742 -0.10247,-0.27973 -0.21722,-0.47439 -0.38086,-0.60547 -0.23979,-0.19207 -0.1439,-0.54767 -0.13867,-0.63671 0.006,-0.0964 0.075,-0.23403 0.0605,-0.41602 -0.0145,-0.18199 -0.10269,-0.37346 -0.23438,-0.52734 -0.16416,-0.19185 -0.34376,-0.28909 -0.47461,-0.37305 -0.13084,-0.084 -0.20736,-0.1518 -0.2207,-0.17188 -0.0369,-0.0556 -0.0199,0.0652 0.008,-0.0547 0.0278,-0.11993 0.0627,-0.48347 -0.12695,-0.75782 -0.11317,-0.16369 -0.27889,-0.28605 -0.43359,-0.34375 -0.15471,-0.0577 -0.28405,-0.0639 -0.36914,-0.0703 -0.14453,-0.0109 -0.11504,-9.7e-4 -0.13282,-0.0293 0.004,-0.012 -2.7e-4,0.001 0.008,-0.0215 0.0243,-0.0675 0.0733,-0.18431 0.0742,-0.35352 9.7e-4,-0.1692 -0.0726,-0.36925 -0.19335,-0.51757 -0.13666,-0.16785 -0.3284,-0.26826 -0.48829,-0.3086 -0.13867,-0.035 -0.24381,-0.0345 -0.33203,-0.0371 0.0523,-0.0497 0.0971,-0.0695 0.14844,-0.16601 0.096,-0.18053 0.0967,-0.46561 0,-0.66797 -0.10577,-0.22126 -0.31343,-0.38602 -0.49805,-0.45313 -0.18462,-0.0671 -0.3368,-0.0692 -0.44922,-0.0762 -0.0423,-0.003 -0.0445,-0.006 -0.0742,-0.01 0.0762,-0.0587 0.17064,-0.12087 0.26171,-0.26953 0.10749,-0.17546 0.13919,-0.46488 0.0527,-0.69141 -0.13286,-0.34812 -0.45555,-0.5065 -0.59961,-0.57227 -0.0924,-0.0422 -0.0722,-0.0388 -0.0762,-0.043 0.0209,-0.0234 0.0284,-0.0327 0.0742,-0.0762 0.0779,-0.074 0.1887,-0.16766 0.28515,-0.33008 0.0965,-0.16241 0.15087,-0.42664 0.0801,-0.6582 -0.0649,-0.21229 -0.24978,-0.39458 -0.41211,-0.4668 -0.0756,-0.0336 -0.11417,-0.0289 -0.17383,-0.041 0.0598,-0.0416 0.11117,-0.0663 0.17969,-0.14453 0.11764,-0.13431 0.19971,-0.36187 0.19922,-0.58594 -0.001,-0.55753 -0.30975,-0.75783 -0.64848,-0.90039 -0.24538,-0.10327 -0.34426,-0.17348 -0.4082,-0.29102 -0.0508,-0.0935 -0.0991,-0.24967 -0.10547,-0.36523 -0.006,-0.11556 0.0236,-0.15831 0.0215,-0.15625 0.27213,-0.26161 0.91097,-0.48299 1.49218,-0.48047 z')

		# Fat twisted tentacle front (1b)
		fill_gradient = 'gradientJellyfishTentacle1b'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 0.51562,-105.79492 -1.69726,1.5293 -0.53711,1.07421 c 0.14091,0.42512 0.223,0.9767 0.4043,1.28321 0.2718,0.45942 0.51174,0.39307 0.70508,0.89062 0.18864,0.48547 0.0429,0.6631 0.15429,1.171877 0.11623,0.530892 0.67948,0.867894 0.88477,1.371094 0.24992,0.612582 0.41111,0.345099 0.7246,0.927734 0.20728,0.385282 0.46644,0.833669 0.64844,0.958984 0.40847,0.28125 0.32064,0.59453 0.76172,0.839844 -0.15322,-0.535586 0.29823,-1.03541 -0.041,-1.542969 -0.37067,-0.554507 -0.39535,-0.406161 -0.61132,-1.037109 -0.17369,-0.506678 -0.56647,-0.820684 -0.62109,-1.353516 -0.0399,-0.389379 0.10682,-0.754719 0.0215,-1.136719 -0.0727,-0.3253 -0.27772,-0.50986 -0.36328,-0.83203 -0.12933,-0.48701 0.30084,-0.89235 0.0547,-1.33203 -0.17991,-0.32135 -0.56652,-0.087 -0.68555,-0.43555 -0.12952,-0.37923 0.45694,-0.46689 0.33203,-0.84765 -0.10601,-0.32317 -0.8614,0.0128 -0.97266,-0.3086 -0.16102,-0.46515 0.9009,-0.74235 0.83789,-1.2207 z')
		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 1.35742,-106.55273 -0.25195,0.22851 c 0.0991,-0.0608 0.18683,-0.13085 0.25195,-0.22851 z m -0.5039,0.45507 -1.63477,1.47071 c 0.002,0.0664 0.0105,0.1336 0.0332,0.19922 0.0872,0.25187 0.34865,0.39596 0.51563,0.43164 0.10646,0.0227 0.17755,0.0156 0.25781,0.0156 -0.0328,0.0416 -0.0603,0.0562 -0.0918,0.11719 -0.0785,0.15216 -0.11434,0.39571 -0.041,0.5918 0.0645,0.1725 0.34665,0.31129 0.5918,0.39453 0.1825,0.062 0.27949,0.2226 0.22851,0.40625 -0.056,0.20153 -0.19224,0.49571 -0.0879,0.88867 0.12041,0.45338 0.28485,0.66279 0.32617,0.84765 0.0479,0.21445 -0.07,0.56765 -0.0156,1.097661 0.0663,0.646847 0.3951,1.023907 0.67198,1.397154 0.33587,0.45278 0.59728,0.832222 0.59996,1.613129 -0.28644,-0.295405 -0.33339,-0.870248 -0.87439,-1.300954 -0.16985,-0.250937 -0.44529,-0.249955 -0.604,-0.639073 -0.1437,-0.352242 -0.33699,-0.670484 -0.51032,-0.874943 -0.17334,-0.20446 -0.28258,-0.363302 -0.3125,-0.5 -0.0446,-0.203574 -0.036,-0.316084 -0.0371,-0.501954 -0.001,-0.18586 -0.0215,-0.43979 -0.13672,-0.73633 -0.12195,-0.31384 -0.31441,-0.52087 -0.44726,-0.63672 -0.13285,-0.11584 -0.18958,-0.15079 -0.29102,-0.32226 -0.061,-0.10306 -0.0697,-0.40003 -0.15039,-0.71875 -0.0704,-0.27816 -0.14955,-0.57091 -0.30664,-0.84766 l -0.55469,1.11328 c 0.0742,0.29898 0.13985,0.61693 0.31446,0.91211 0.17035,0.28795 0.37065,0.45037 0.4746,0.54102 0.10396,0.0907 0.12979,0.10144 0.20118,0.28515 0.0734,0.18893 0.0733,0.26455 0.0742,0.41602 8.8e-4,0.15147 -0.008,0.38229 0.0586,0.6875 0.0863,0.394194 0.31763,0.6686 0.50586,0.890625 0.18823,0.222025 0.3388,0.403729 0.40039,0.554687 0.0912,0.223465 0.65953,0.409461 0.68133,0.70776 0.0218,0.298298 0.60658,0.418626 0.71094,0.9375 0.092,0.457557 0.44839,0.441138 0.80438,1.463732 0.13991,0.401885 0.3367,1.130322 -0.31258,1.342295 -0.70186,0.229136 -0.16715,0.491694 0.46194,0.145832 0.67935,-0.373493 0.56218,-1.649802 0.47847,-2.113587 -0.11656,-0.645878 0.0733,-1.022682 -5.2e-4,-1.516007 -0.0739,-0.493324 -0.51293,-0.739091 -0.65399,-1.151118 l -0.002,0 c -0.19668,-0.573735 -0.39848,-0.821418 -0.44141,-1.240235 -0.0255,-0.248747 0.13642,-0.637944 0.0137,-1.187504 -0.10408,-0.46574 -0.31647,-0.65865 -0.36718,-0.8496 -0.025,-0.094 0.003,-0.21572 0.0683,-0.44922 0.0649,-0.23351 0.16544,-0.54138 -0.041,-0.91016 -0.09,-0.16075 -0.25742,-0.36385 -0.39063,-0.42383 -0.0725,-0.0327 -0.11011,-0.0327 -0.16406,-0.0449 0.0542,-0.055 0.11357,-0.10749 0.17383,-0.22266 0.0789,-0.15085 0.11217,-0.38875 0.0469,-0.58789 -0.083,-0.253 -0.3461,-0.40295 -0.51367,-0.43945 -0.0777,-0.0169 -0.1244,-0.009 -0.1875,-0.0117 0.11437,-0.0888 0.24477,-0.18418 0.36914,-0.33008 0.13342,-0.15651 0.26794,-0.42173 0.21289,-0.71093 -0.019,-0.0997 -0.0588,-0.15483 -0.10546,-0.20118 z')
		
		# Fat front tentacle (3)
		fill_gradient = 'gradientJellyfishTentacle3'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm 3.12497,-114.78318 c 0.38309,0.16519 0.92274,0.42254 0.92807,0.83969 0.005,0.42718 -0.47175,0.48834 -0.49057,0.91514 -0.0216,0.4901 0.73429,0.50081 0.62852,0.97985 -0.0867,0.3929 -0.72281,0.3466 -0.82361,0.73614 -0.11588,0.44782 0.58674,0.50242 0.46469,0.9486 -0.11333,0.41427 -0.59426,0.3807 -0.69324,0.79864 -0.14435,0.60953 0.65559,0.50791 0.45619,1.10171 -0.13888,0.41356 -0.64694,0.15727 -0.84413,0.54642 -0.25624,0.5057 0.60726,0.63231 0.30085,1.10929 -0.27071,0.42141 -0.69662,0.12967 -1.03385,0.5 -0.31879,0.35007 0.23262,0.7204 -0.0862,1.07047 -0.2678,0.29408 -0.6247,-0.11882 -0.91199,0.15625 -0.24496,0.23454 -0.0884,0.61765 -0.32545,0.86021 -0.30955,0.31679 -0.69898,-0.005 -1.01333,0.30715 -0.28306,0.28098 -0.19077,0.6355 -0.4009,0.97449 -0.24359,0.39297 -0.64108,0.49923 -0.88074,0.89461 -0.28295,0.4668 -0.2476,0.92381 -0.4009,1.44768 -0.14271,0.48751 -0.57659,0.838543 -0.72005,1.325831 -0.14585,0.495416 -0.38136,0.993257 -0.61651,1.453046 -0.27658,0.540762 -0.56265,0.74974 -0.91735,1.242799 -0.29401,0.408692 -0.6622,1.046781 -1.31158,1.351713 0.81634,-0.377616 0.8773,-1.095601 1.11965,-1.681599 0.25109,-0.60712 0.66072,-0.987691 0.85707,-1.614658 0.16874,-0.538815 -0.0909,-1.121764 -0.002,-1.679382 0.059,-0.37092 0.43955,-0.64378 0.48614,-1.01646 0.0466,-0.37268 -0.37466,-0.76217 -0.22097,-1.10486 0.20264,-0.45184 0.61606,-0.31585 0.78163,-0.78255 0.12624,-0.35587 -0.046,-0.68215 0.10225,-1.02941 0.17623,-0.41271 0.66868,-0.1568 0.86244,-0.56158 0.16513,-0.34496 -0.17615,-0.68708 0.0501,-0.99548 0.27021,-0.36845 0.66909,-0.0369 0.97939,-0.37232 0.22032,-0.23814 0.123,-0.82523 0.29955,-1.09727 0.19823,-0.3051 0.66096,-0.075 0.82897,-0.39775 0.23098,-0.44369 -0.33286,-0.63885 -0.10355,-1.08341 0.18184,-0.35252 0.70762,-0.1794 0.79235,-0.56694 0.0868,-0.397 -0.55486,-0.35344 -0.52719,-0.75888 0.0257,-0.37643 0.59886,-0.23607 0.60263,-0.61336 0.003,-0.34515 -0.55131,-0.41349 -0.51424,-0.75666 0.0446,-0.4127 0.78187,-0.35339 0.85485,-0.76202 0.077,-0.43117 -0.62531,-0.34687 -0.63388,-0.78478 -0.009,-0.48088 0.88497,-0.62581 0.92808,-1.10485 0.0319,-0.35487 -0.72117,-0.62719 -0.53033,-0.92808 0.30076,-0.47421 1.16376,-0.0898 1.67941,0.13257 z')
		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm 1.67188,-115.56641 c -0.2215,0.0459 -0.46342,0.18619 -0.60547,0.41016 -0.13585,0.21419 -0.0945,0.53437 -0.002,0.69141 0.0926,0.15703 0.28853,0.1807 0.37305,0.25976 0.0674,0.063 0.0178,0.16921 0.0527,0.20703 -0.0475,0.0458 -0.0451,0.0513 -0.1582,0.12891 -0.11561,0.0793 -0.23608,0.15323 -0.36719,0.29297 -0.13111,0.13974 -0.2783,0.37867 -0.27343,0.63867 l 0,0.002 c 0.004,0.22998 0.12996,0.44926 0.25976,0.56836 0.0944,0.0867 0.16745,0.11803 0.24024,0.15625 -0.0161,0.007 -0.0172,0.01 -0.0352,0.0176 -0.1007,0.0444 -0.22856,0.0965 -0.36719,0.20313 -0.13862,0.10661 -0.2909,0.30697 -0.3164,0.54296 -0.0223,0.20644 0.0624,0.41594 0.1582,0.53907 0.085,0.10928 0.16465,0.16657 0.23047,0.21679 -0.0636,0.0271 -0.12056,0.0421 -0.20508,0.10938 -0.13122,0.1044 -0.25914,0.31403 -0.27344,0.52344 -0.0149,0.21868 0.0556,0.55438 0.17188,0.67968 0.0759,0.0818 0.13179,0.10942 0.19336,0.14844 -0.17486,0.0529 -0.44985,0.11858 -0.61133,0.43164 -0.0979,0.18983 -0.12332,0.4132 -0.0898,0.58593 0.0335,0.17274 0.0384,0.24246 0.0801,0.32228 0.0281,0.0539 0.0315,0.0652 0.0391,0.084 -0.0198,0.004 -0.0174,0.005 -0.0508,0.01 -0.0783,0.0102 -0.18901,0.0187 -0.32812,0.0684 -0.13911,0.0497 -0.3088,0.15921 -0.41602,0.32422 -0.18284,0.30315 -0.28436,0.7619 -0.25192,1.03516 -0.35285,0.0571 -0.66904,0.16043 -0.87305,0.50765 -0.19842,0.33772 -0.29409,0.49612 -0.25976,0.69336 0.0341,0.19588 0.0295,0.27199 0.0273,0.27735 -0.0104,0.004 -0.0498,0.0169 -0.13086,0.0352 -0.0859,0.0194 -0.21254,0.0429 -0.35937,0.12305 -0.14683,0.0801 -0.30048,0.23559 -0.38086,0.42383 -0.11882,0.27831 -0.10275,0.53672 -0.0937,0.71093 0.009,0.17422 0.009,0.26743 -0.0176,0.34375 -0.0387,0.10914 -0.0246,0.0748 -0.16797,0.15235 -0.14342,0.0776 -0.44659,0.25209 -0.60156,0.59765 -0.16571,0.3695 -0.0182,0.70089 0.0684,0.90235 0.0866,0.20146 0.11738,0.32854 0.11719,0.33008 -0.006,0.0501 -0.0589,0.15509 -0.16602,0.31445 -0.10712,0.15936 -0.26797,0.37071 -0.31836,0.6875 -0.059,0.370147 -0.002,0.696053 0.0293,0.968749 0.0315,0.272695 0.0391,0.484062 -0.0117,0.646484 -0.15853,0.506188 -0.49892,0.939941 -0.66697,1.666513 -0.14387,0.622031 -0.78566,1.306167 -1.14748,1.448722 -0.86629,0.341304 -0.55672,0.484166 0.0352,0.459491 0.5388,-0.02246 0.98559,-0.390311 1.36596,-0.751783 0.38733,-0.368094 0.41726,-0.852525 0.76941,-1.127451 0.33875,-0.264474 0.5601,-0.907232 0.7694,-1.140663 0.45816,-0.510993 0.49386,-0.667525 0.60502,-1.045114 0.0906,-0.307648 0.52331,-0.658541 0.71875,-1.326168 0.17835,-0.60947 0.14666,-0.99859 0.35351,-1.33985 0.0719,-0.11866 0.17288,-0.20351 0.33203,-0.32812 0.15915,-0.12462 0.37691,-0.28829 0.54688,-0.5625 0.15762,-0.25428 0.19412,-0.49643 0.22851,-0.64453 0.0344,-0.1481 0.0504,-0.19145 0.10743,-0.24805 0.0364,-0.0361 0.0112,-0.0233 0.1875,-0.0215 0.17632,0.002 0.55615,-0.0107 0.83007,-0.29102 0.23591,-0.24139 0.26434,-0.5342 0.28516,-0.6875 0.0166,-0.12193 0.0202,-0.1215 0.0234,-0.12891 0.0202,0.003 0.024,0.002 0.0703,0.0117 0.081,0.0164 0.19883,0.0463 0.36328,0.0312 0.16445,-0.0151 0.37011,-0.10483 0.50586,-0.2539 0.14978,-0.16447 0.2245,-0.39758 0.22071,-0.57813 -0.004,-0.18055 -0.053,-0.30838 -0.082,-0.39844 -0.021,-0.0651 -0.023,-0.082 -0.0273,-0.10156 0.0531,-0.0534 0.0703,-0.0567 0.24805,-0.082 0.19454,-0.0278 0.58776,-0.12998 0.80664,-0.4707 0.13344,-0.20773 0.16688,-0.50833 0.0879,-0.71094 -0.079,-0.20261 -0.19574,-0.30644 -0.26953,-0.38477 -0.0356,-0.0377 -0.0335,-0.0352 -0.0508,-0.0566 0.0249,-0.007 0.0371,-0.0117 0.0918,-0.0234 0.0883,-0.019 0.21755,-0.0413 0.36719,-0.12696 0.14964,-0.0857 0.29969,-0.25794 0.36523,-0.45312 0.0775,-0.23086 0.065,-0.50254 -0.0371,-0.69336 -0.10215,-0.19082 -0.2363,-0.28387 -0.31641,-0.34766 -0.0801,-0.0638 -0.11001,-0.0974 -0.10547,-0.0898 0.005,0.008 -0.002,0.0547 0.0137,-0.01 0.0112,-0.0473 0.006,-0.0326 0.15039,-0.12695 0.14482,-0.0944 0.43883,-0.28986 0.53906,-0.65625 0.0601,-0.21979 0.008,-0.47621 -0.0898,-0.63281 -0.0981,-0.15661 -0.20809,-0.23986 -0.28125,-0.30274 -0.023,-0.0198 -0.0174,-0.0163 -0.0332,-0.0312 0.0328,-0.0184 0.0562,-0.0326 0.11523,-0.0605 0.092,-0.0435 0.21151,-0.0957 0.33985,-0.19532 0.12834,-0.0996 0.26742,-0.27126 0.31445,-0.48437 0.0508,-0.2303 -0.0857,-0.64 -0.22656,-0.77344 -0.26035,-0.24665 -0.10321,-0.44144 -0.14258,-0.55468 0.12355,-0.1247 0.24665,-0.28872 0.24219,-0.66993 -0.005,-0.40139 -0.26432,-0.69006 -0.50391,-0.86914 -0.23959,-0.17908 -0.49825,-0.29309 -0.69727,-0.37891 -0.25506,-0.10999 -0.61751,-0.27415 -1.00781,-0.35351 -0.19515,-0.0397 -0.40155,-0.0615 -0.62304,-0.0156 z m 0.4121,0.89453 c 0.0139,0.002 0.0166,-0.001 0.0312,0.002 0.24531,0.0499 0.57145,0.1884 0.83204,0.30078 0.18407,0.0794 0.38633,0.1763 0.51367,0.27148 0.12734,0.0952 0.14237,0.1444 0.14258,0.16016 5.3e-4,0.046 0.0108,0.0154 -0.10743,0.13477 -0.11827,0.11937 -0.22244,0.31914 -0.23918,0.69866 -0.0105,0.23794 0.0995,0.49961 0.26618,0.67176 0.37846,0.39081 0.0747,0.4314 -0.21572,0.65295 -0.21573,0.16459 -0.38334,0.55067 -0.17852,0.80567 0.18273,0.2275 0.39181,0.40179 0.24929,0.65204 -0.0879,0.15426 -0.38157,0.16004 -0.55531,0.499 -0.12319,0.24035 -0.10855,0.56463 0.10085,0.78108 0.31091,0.32137 0.16582,0.48478 0.0382,0.56129 -0.13855,0.0831 -0.40825,0.20802 -0.50177,0.39258 -0.11354,0.22407 -0.1315,0.4818 -0.0494,0.67388 0.23045,0.54359 -0.0693,0.50436 -0.49311,0.7475 -0.19295,0.1107 -0.4168,0.41339 -0.38644,0.68861 0.0443,0.40134 -0.15921,0.33077 -0.23484,0.36014 -0.14897,0.0578 -0.30847,0.12699 -0.45453,0.26685 -0.24547,0.23503 -0.31857,0.50029 -0.30078,0.65827 0.0289,0.25645 -0.16427,0.25374 -0.30318,0.23232 -0.17234,-0.0266 -0.49144,0.0789 -0.76379,0.36055 -0.28265,0.29234 -0.22717,0.69321 -0.44274,0.99034 -0.2568,0.35396 -0.68285,0.57373 -0.88477,0.89844 -0.36577,0.58821 -0.34105,1.18271 -0.46935,1.62097 -0.0854,0.29189 -0.56423,0.67626 -0.77199,1.279916 -0.03,-0.260875 -0.0807,-0.646928 -0.0533,-0.818746 0.009,-0.0541 0.0682,-0.1632 0.17774,-0.32617 0.10955,-0.16297 0.27022,-0.3825 0.31054,-0.70508 0.0464,-0.37114 -0.10961,-0.62474 -0.18359,-0.79687 -0.074,-0.17213 -0.0602,-0.2065 -0.0723,-0.17969 0.0477,-0.10628 0.0517,-0.0898 0.20704,-0.17383 0.15534,-0.084 0.46104,-0.28502 0.58789,-0.64257 0.0992,-0.27955 0.13333,-0.5398 0.0684,-0.69141 -0.0949,-0.22166 -0.0811,-0.22818 0.13278,-0.33198 0.077,-0.0374 0.43645,-0.22436 0.49413,-0.52344 0.0766,-0.3972 0.19472,-0.80796 0.7071,-0.98242 0.15636,-0.0532 0.3581,-0.12217 0.49805,-0.27344 0.25777,-0.27863 0.29957,-0.56922 0.2832,-0.78906 -0.0264,-0.35492 0.3448,-0.38089 0.51173,-0.4395 0.33115,-0.11627 0.77998,-0.47639 0.49414,-0.95117 -0.27365,-0.45453 0.1326,-0.53381 0.31846,-0.69728 0.35198,-0.30958 0.42527,-0.64259 0.14648,-0.99414 -0.27124,-0.34203 -0.0302,-0.43007 0.0373,-0.46875 0.42467,-0.24327 0.26022,-0.77922 0.0312,-0.99029 -0.23383,-0.21554 -0.0628,-0.26468 0.18748,-0.41402 0.20787,-0.12406 0.29432,-0.28643 0.33594,-0.51953 0.0396,-0.22184 -0.048,-0.48677 -0.17773,-0.62695 -0.12977,-0.14019 -0.25532,-0.1949 -0.3418,-0.24024 -0.0313,-0.0164 -0.0293,-0.0168 -0.0508,-0.0293 0.0439,-0.0391 0.10164,-0.0855 0.19336,-0.14843 0.11214,-0.0769 0.24592,-0.16382 0.3789,-0.29493 0.13298,-0.1311 0.27384,-0.33186 0.29688,-0.58789 0.0226,-0.25107 -0.0929,-0.44723 -0.19141,-0.57226 -0.0534,-0.0678 -0.0982,-0.10367 -0.14844,-0.15235 z m -1.90234,6.9043 c 2e-5,7e-5 0.002,0.002 0.002,0.002 4.2e-4,0.002 0.011,-0.0305 -0.006,0.002 5.1e-4,-9.7e-4 0.003,-0.003 0.004,-0.004 z')

		# Thin tentacles
		style = 'color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate'
		self.svg.write_path(style, 'm -6.54102,-114.98438 c -0.26631,0 -0.47773,0.22294 -0.45507,0.48829 0.0189,0.22168 -0.10987,0.8475 0.0605,1.95898 0.18195,1.18668 0.0243,2.57256 -0.11133,3.11914 -0.11793,0.47573 -0.42793,0.93676 -0.77734,1.44141 -0.3494,0.50464 -0.7377,1.05307 -0.90234,1.74414 -0.21824,0.91604 -0.0698,1.80903 0.0293,2.6289 0.0991,0.81988 0.15075,1.55401 -0.10742,2.19336 -0.52933,1.3109 -1.15976,2.40793 -2.63672,2.90039 -0.5929,0.1977 -0.23103,0.74766 0.35743,0.53711 1.77227,-0.63412 2.5193,-1.956 3.08203,-3.34961 0.35969,-0.89079 0.20695,-1.70502 0.10547,-2.54492 -0.10147,-0.83989 -0.15052,-1.59204 0.0137,-2.28125 0.11332,-0.4756 0.51262,-1.00026 0.86133,-1.5039 0.3487,-0.50364 0.73964,-1.08115 0.91015,-1.76953 0.19756,-0.79757 0.1337,-2.11356 0.20117,-3.23047 0.0692,-1.14638 -0.17645,-1.70164 -0.18745,-1.90625 -0.0127,-0.23647 -0.20654,-0.42579 -0.44336,-0.42579 z')
		self.svg.write_path(style, 'm -3.99414,-115.57812 c -0.19683,0.008 -0.80289,0.42485 -0.85352,0.61523 -0.0457,0.17186 -0.0506,0.7544 -0.26757,2.0332 -0.21885,1.29009 -0.54815,2.69852 -0.61133,3.58594 -0.0712,0.9999 0.21587,1.86169 0.29297,2.82227 0.0771,0.96057 -0.0131,2.03783 -0.81055,3.55273 -0.63578,1.20781 -0.64201,2.70996 -0.83789,4.042969 -0.19588,1.33301 -0.51621,2.430934 -1.59961,3.02539 -0.54027,0.296442 -0.0334,0.652816 0.50195,0.347657 1.41408,-0.805985 1.65585,-2.080561 1.86328,-3.492188 0.20744,-1.411628 0.35268,-2.867088 0.83594,-3.785158 0.86906,-1.65098 0.96953,-2.77664 0.88281,-3.85742 -0.0867,-1.08078 -0.28565,-1.81838 -0.23046,-2.59375 0.0515,-0.72359 0.37097,-2.18844 0.67968,-3.43164 0.30871,-1.2432 0.84638,-1.86571 0.91602,-2.09961 0.0881,-0.29575 -0.45339,-0.77816 -0.76172,-0.76562 z')
		self.svg.write_path(style, 'm 5,-114.63281 c -0.28459,4.6e-4 -0.49697,0.26229 -0.43945,0.54101 0.047,0.22754 0.023,0.60843 0.19336,1.74805 0.17036,1.13962 0.5952,2.05072 0.57226,3.37695 -0.0272,1.57439 -0.42649,1.54142 -0.52072,3.35701 -0.0371,0.7148 0.0276,1.4389 0.23622,2.00302 0.20861,0.56413 0.81543,2.06371 0.84363,2.52968 0.0907,1.498002 -0.47613,2.059389 -0.78933,2.658125 -0.3132,0.598737 -0.63749,1.145484 -0.65966,1.908932 -0.0216,0.744171 -0.068,1.690186 0.84689,2.459444 0.46529,0.391207 1.04541,0.181191 0.57618,-0.20527 -0.58449,-0.481385 -0.84505,-1.559335 -0.83204,-2.007813 0.0142,-0.489491 0.26283,-1.034857 0.58204,-1.623047 0.37269,-0.686737 1.14854,-1.477945 1.03982,-3.310961 -0.0426,-0.71812 -0.62016,-1.90888 -0.83007,-2.47656 -0.20992,-0.56769 -0.29587,-1.20206 -0.27149,-1.67188 0.0816,-1.57304 0.46075,-1.63445 0.55197,-3.45076 0.0427,-0.85034 -0.18836,-2.57259 -0.20508,-3.74414 -0.017,-1.19003 -0.41816,-1.52845 -0.45117,-1.71875 -0.0374,-0.2156 -0.22454,-0.37339 -0.44336,-0.37304 z')
		self.svg.write_path(style, 'm 7.18892,-113.63974 c -0.24867,0.002 -0.72029,0.20457 -0.72852,0.45312 -0.0861,2.89816 0.47436,5.95753 1.67827,8.44834 0.25915,0.53616 0.54869,0.95507 0.58203,1.4707 0.0373,0.57709 0.0535,1.03461 -0.20117,1.70117 -0.25468,0.66657 -0.6231,1.34835 -0.67383,2.14649 -0.0387,0.609148 -0.0212,1.18284 0.29297,1.779295 0.31421,0.596459 0.6932,1.030057 1.38867,1.269531 0.57942,0.199513 0.9625,-0.291554 0.37891,-0.478515 -0.42884,-0.137384 -0.77051,-0.484674 -1.00391,-0.927735 -0.23339,-0.443057 -0.34113,-0.978468 -0.31445,-1.398437 0.0378,-0.595049 0.29187,-1.231309 0.55273,-1.914059 0.26087,-0.68275 0.52934,-1.41839 0.47657,-2.23438 -0.0492,-0.76088 -0.43266,-1.33319 -0.70508,-1.87305 -1.27188,-2.52048 -1.62295,-5.74908 -1.27007,-7.98154 0.0426,-0.25047 -0.19905,-0.46262 -0.45312,-0.46093 z')

		# Body
		fill_gradient = 'gradientJellyfish'
		style = 'color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:url(#%s);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.89999998;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate' % fill_gradient
		self.svg.write_path(style, 'm -8.53157,-115.38305 c 0.14588,-0.86433 -1.02957,-2.13654 -1.05308,-3.70787 -0.0639,-4.27346 4.37027,-7.84203 10.65525,-7.28131 6.76907,0.60391 10.4122,3.84673 9.45754,9.61603 -0.31621,1.91095 -0.70561,1.88826 -0.90663,2.91237 -0.10277,0.5236 0.62148,1.73073 0.13259,1.94454 -1.38031,0.60368 -1.55865,-1.6279 -2.47043,-1.73115 -0.77345,-0.0876 -1.21454,1.08484 -1.97044,0.89904 -0.57933,-0.1424 -1.16209,-1.3599 -1.72227,-1.5651 -0.95394,-0.34944 -1.65946,1.14062 -2.66681,1.00889 -0.72154,-0.0944 -1.45156,-1.02545 -2.16866,-1.14905 -1.09911,-0.18944 -1.36071,1.03252 -2.45787,0.8321 -0.58686,-0.10721 -1.28554,-0.89902 -1.8776,-0.97227 -1.45172,-0.1796 -2.27254,2.27853 -3.40425,1.35172 -0.52871,-0.43299 0.33893,-1.48409 0.45266,-2.15794 z')

		self.end_resource(encircle)

	# Load card data
	
	def load_data(self, deck, name):
		layers = [
			'water_shallow_layer',
			'water_deep_layer',
			'shoreline_master_layer',
			'grass_master_layer',
			'forest_master_layer',
			'routes_layer',
			'labels_layer',
			'labels_guide_layer',
			'resources_layer',
			'extras_layer',
			'guides_layer',
		]
		borders = []
		layer_data = {}
		labels_text = []
		labels_guide = []
		resources = []
		extras = []
		
		found_layer = {}
		for layer in layers:
			found_layer[layer] = False
		input = open('%s-svg/%s.svg' % (deck, name), "r")
		current_layer = ''
		current_resource = ''
		current_extra = ''
		for line in input:
			if re.search(r'inkscape:groupmode="layer"', line):
				current_layer = ''
			for layer in layers:
				if re.search(layer, line):
					current_layer = layer

			# Parse labels and label guides
			if current_layer == 'labels_layer':
				#m = re.search(r'>([A-Za-z0-9 \'.-]+)(</tspan>)?</textPath>', line)
				m = re.search(r'>([^<]+)(</tspan>)?</textPath>', line)
				if m:
					text = m.group(1)
					labels_text.append(text)
					#print '\tFound label text:', text
					found_layer[current_layer] = True
			elif current_layer == 'labels_guide_layer':
				m = re.search(r' d="([^"]+)"', line)
				if m:
					guide = m.group(1)
					labels_guide.append(guide)
					found_layer[current_layer] = True

			# Parse resources
			elif current_layer == 'resources_layer':
				m = re.search(r'id="resource-([A-Za-z]+)"', line)
				if m:
					res = m.group(1)
					m = re.search(r' transform="(.+)"', line)
					if m:
						resources.append([res, m.group(1)])
						found_layer[current_layer] = True
						#print '\tFound resource:', res
					else:
						current_resource = res
						current_layer = 'resources_layer-transform'
			elif current_layer == 'resources_layer-transform':
				m = re.search(r' transform="(.+)"', line)
				if m:
					resources.append([current_resource, m.group(1)])
					#print '\tFound resource:', current_resource
					current_resource = ''
					current_layer = 'resources_layer'
					found_layer[current_layer] = True

			# Parse extras
			elif current_layer == 'extras_layer':
				m = re.search(r'id="extra-([A-Za-z]+)"', line)
				if m:
					extra = m.group(1)
					m = re.search(r' transform="(.+)"', line)
					if m:
						extras.append([extra, m.group(1)])
						found_layer[current_layer] = True
						#print '\tFound extra:', extra
					else:
						current_extra = extra
						current_layer = 'extras_layer-transform'
			elif current_layer == 'extras_layer-transform':
				m = re.search(r' transform="(.+)"', line)
				if m:
					extras.append([current_extra, m.group(1)])
					#print '\tFound extra:', current_extra
					current_extra = ''
					current_layer = 'extras_layer'
					found_layer[current_layer] = True

			# Parse the topology guides
			elif current_layer == 'guides_layer':
				m = re.search(r'id="guide-(short|long)\d-(\d)"', line)
				if m:
					border = m.group(2)
					borders.append(int(border))
					found_layer[current_layer] = True
			
			# Parse all other layers
			elif current_layer != '':
				m = re.search(r' d="([^"]+)"', line)
				if m:
					if found_layer[current_layer]:
						error('Multiple paths found in %s' % current_layer)
					#print '\tFound data for', current_layer
					layer_data[current_layer] = m.group(1)
					found_layer[current_layer] = True
		input.close()
		
		for layer in layers:
			if not found_layer[layer]:
				error('Unable to find data for %s' % layer)
				return
		if len(borders) != 4:
			print borders
			error('Unable to find all for borders')	
			
		card_data = [name, borders]
		card_data.append(layer_data['water_shallow_layer'])
		card_data.append(layer_data['water_deep_layer'])
		card_data.append(layer_data['shoreline_master_layer'])
		card_data.append(layer_data['grass_master_layer'])
		card_data.append(layer_data['forest_master_layer'])
		card_data.append(layer_data['routes_layer'])

		if len(labels_text) != len(labels_guide):
			error('Mismatched label text and guides')
		label_data = []
		for i in range(0, len(labels_text)):
			label_data.append([labels_text[i], labels_guide[i]])

		build_deck2 = False
		
		# Build initial deck 2 from deck 1
		if build_deck2:
			print 'Replacing resources/labels for deck 2!'
			info = card_info[name]
			new_r = []
			for i in range(0, len(resources)):
				r = info[2][i]
				for r2 in resource_encode:
					if resource_encode[r2] == r:
						new_r.append([r2, resources[i][1]])
			resources = new_r
			label_data = []
			for i in range(0, len(labels_text)):
				label_data.append([info[4][i], labels_guide[i]])

		card_data.append(label_data)
		card_data.append(resources)
		card_data.append(extras)
		
		# Debugging
		if False:
			print name
			for layer in layers:
				print '\t# %s\n' % layer
				if layer == 'labels_layer':
					for i in range(0, len(labels_text)):
						print "\t['%s',\t'%s'],\n" % (labels_text[i], labels_guide[i])
				elif layer == 'labels_guide_layer':
					if len(labels_text) != len(labels_guide):
						print len(labels_text)
						print len(labels_guide)
						print 'ERROR - mismatched label text and guides'
				elif layer == 'resources_layer':
					print resources
				elif layer == 'extras_layer':
					print extras
				elif layer == 'guides_layer':
					print borders
				else:
					print '\t%s\n' % layer_data[layer]

		# Validate loaded data against expected card info
		info = card_info[name]
		target_borders = info[0]
		target_resources = info[1]
		flags_ignore = info[3]
		target_labels = info[4]
		if deck == 'deck2':
			target_resources = info[2]
			target_labels = info[5]

		# Build initial deck 2 from deck 1
		if build_deck2:
			target_resources = info[2]

		if target_borders != ''.join([str(x) for x in borders]):
			print 'Expected borders:', target_borders
			print 'Found borders:', borders
			error('Borders don\'t match expected')
		found_r = ''
		for r in resources:
			found_r += resource_encode[r[0]]
		if target_resources != ''.join(sorted(found_r)):
			print 'Expected resources:', target_resources
			print 'Found resources:', resources
			error('Resources don\'t match expected')
		for i in range(0, len(labels_text)):
			if labels_text[i] != target_labels[i]:
				print 'Expected label:', target_labels[i]
				print 'Found label:', labels_text[i]
				error('Label doesn\'t match expected')
			
		return card_data
		
	# Utilities

	def open_output_file(self, deck, name):
		self.svg.open_output_file('%s-svg-gen/%s.svg' % (deck, name))

	def close_output_file(self, deck, name):
		self.svg.close_output_file()

		if self.gen_png:
			cwd = os.getcwd()
			
			# Generate PNG file.
			subprocess.call([
				"/Applications/Inkscape.app/Contents/Resources/bin/inkscape",
				"--file=%s/%s-svg-gen/%s.svg" % (cwd, deck, name),
				"--export-png=%s/%s-png-gen/%s.png" % (cwd, deck, name),
				"--export-dpi=300",
				"--export-text-to-path",
				"--without-gui"
				])

	def process_card(self, deck, name):
		print deck, name

		data = self.load_data(deck, name)

		# Validate test data		
		if False:
			for i in range(0, 11):
				if data[i] != test_card_data[i]:
					print 'mismatch:'
					print data[i]
					print test_card_data[i]

		self.open_output_file(deck, name)
		self.draw_card(data)
		self.close_output_file(deck, name)
	
	def gen(self):
		seed_base = 0
		for deck in decks:
			for suit in suits:
				seed_delta = 0
				for rank in ranks:
					seed_delta += 1
					name = '%s-%s' % (suit, rank)
					self.seed = seed_base + seed_delta
					self.process_card(deck, name)
				seed_base += 100
			for card in extra_cards:
				self.seed += 1
				self.process_card(deck, card)
			seed_base += 100

	def get_card_data(self, suit, rank):
		key = '%s-%s' % (suit, rank)
		d = card_info[key]
		return (d[0], d[1], d[2])

	def check_res_count(self, desc, res, count):
		rlist = ['f','j','s','t','B','C','H','P']
		for r in rlist:
			if not res.count(r) == count:
				print('Failed Validation: %s. Wrong count for %s in %s. Expected %d' % (desc, r, ''.join(sorted(res)), count))
				self.warnings += 1
				
	def verify(self):
		if not run_checks:
			return
			
		self.warnings = 0

		rank = 'ace'
		race_d1 = ''
		race_d2 = ''
		for suit in suits:
			(b, r1, r2) = self.get_card_data(suit, rank)
			race_d1 += r1
			race_d2 += r2
		self.check_res_count('One of each resource for each ace (deck1)', race_d1, 1)
		self.check_res_count('One of each resource for each ace (deck2)', race_d2, 1)

		for rank in ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king']:
			r = ''
			for suit in suits:
				(b, r1, r2) = self.get_card_data(suit, rank)
				r += r1
				r += r2
			self.check_res_count('One of each resource for %s across 2 decks' % rank, r, 1)

		r6j_d1 = ''
		r6j_d2 = ''
		for rank in ['6', 'jack']:
			for suit in suits:
				(b, r1, r2) = self.get_card_data(suit, rank)
				r6j_d1 += r1
				r6j_d2 += r2
		self.check_res_count('One of each resource for 6/Jack (deck1)', r6j_d1, 1)
		self.check_res_count('One of each resource for 6/Jack (deck2)', r6j_d2, 1)

		rqk_d1 = ''
		rqk_d2 = ''
		for rank in ['queen', 'king']:
			for suit in suits:
				(b, r1, r2) = self.get_card_data(suit, rank)
				rqk_d1 += r1
				rqk_d2 += r2
		self.check_res_count('One of each resource for Queen/King (deck1)', rqk_d1, 1)
		self.check_res_count('One of each resource for Queen/King (deck2)', rqk_d2, 1)
			
		for suit in suits:
			r_d1 = ''
			r_d2 = ''
			for rank in ['2', '3', '4', '5', '7', '8', '9', '10']:
				(b, r1, r2) = self.get_card_data(suit, rank)
				r_d1 += r1
				r_d2 += r2
			self.check_res_count('One of each resource for 2/3/4/5/7/8/9/10 in %s (deck1)' % suit, r_d1, 1)
			self.check_res_count('One of each resource for 2/3/4/5/7/8/9/10 in %s (deck2)' % suit, r_d2, 1)

		for suit_group in [['clubs', 'spades'], ['hearts', 'diamonds']]:
			r = ''
			for suit in suit_group:
				for rank in ['ace', '6', 'jack', 'queen', 'king']:
					(b, r1, r2) = self.get_card_data(suit, rank)
					r += r1
					r += r2
			self.check_res_count('Three of each resource for %s/%s cities across desks' % (suit_group[0], suit_group[1]), r, 3)
			
		if self.warnings != 0:
			error('Unbalanced resource arrangement')
			
def usage():
	print "Usage: %s <options>" % sys.argv[0]
	print "where <options> are:"
	print "  --png   Generate PNG output files"
	sys.exit(2)

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:],
			'p',
			['png'])
	except getopt.GetoptError:
		usage()

	gen_png = False
	for opt,arg in opts:
		if opt in ('-p', '--png'):
			gen_png = True
			
	mtgen = MTGen(gen_png)
	mtgen.verify()
	mtgen.gen()

if __name__ == '__main__':
	main()
